import{_ as l,r as c,o as u,c as r,a as s,b as a,w as p,F as i,e as o,d as n}from"./app.4f6a4bec.js";const k={},d=o(`<h1 id="code-examples" tabindex="-1"><a class="header-anchor" href="#code-examples" aria-hidden="true">#</a> Code examples</h1><h2 id="python" tabindex="-1"><a class="header-anchor" href="#python" aria-hidden="true">#</a> Python</h2><h3 id="navigate_wait" tabindex="-1"><a class="header-anchor" href="#navigate_wait" aria-hidden="true">#</a> #</h3><p><a name="block-nav"></a></p><p><a name="block-takeoff"></a></p><p>Function to fly to a point and wait for copter&#39;s arrival:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">def</span> <span class="token function">navigate_wait</span><span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> yaw<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">&#39;nan&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> speed<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> frame_id<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> auto_arm<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> tolerance<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    navigate<span class="token punctuation">(</span>x<span class="token operator">=</span>x<span class="token punctuation">,</span> y<span class="token operator">=</span>y<span class="token punctuation">,</span> z<span class="token operator">=</span>z<span class="token punctuation">,</span> yaw<span class="token operator">=</span>yaw<span class="token punctuation">,</span> speed<span class="token operator">=</span>speed<span class="token punctuation">,</span> frame_id<span class="token operator">=</span>frame_id<span class="token punctuation">,</span> auto_arm<span class="token operator">=</span>auto_arm<span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token keyword">not</span> rospy<span class="token punctuation">.</span>is_shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        telem <span class="token operator">=</span> get_telemetry<span class="token punctuation">(</span>frame_id<span class="token operator">=</span><span class="token string">&#39;navigate_target&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>telem<span class="token punctuation">.</span>x <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> telem<span class="token punctuation">.</span>y <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> telem<span class="token punctuation">.</span>z <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> tolerance<span class="token punctuation">:</span>
            <span class="token keyword">break</span>
        rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>
</code></pre></div>`,7),m=n("This function utilizes "),h=s("code",null,"navigate_target",-1),_=n(" frame for computing the distance to the target."),g=n("Using the function for flying to the point x=3, y=2, z=1 in "),y=n("marker's map"),f=n(":"),b=o(`<div class="language-python ext-py"><pre class="language-python"><code>navigate_wait<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> frame_id<span class="token operator">=</span><span class="token string">&#39;aruco_map&#39;</span><span class="token punctuation">)</span>
</code></pre></div><p>This function can be used for taking off as well:</p><div class="language-python ext-py"><pre class="language-python"><code>navigate_wait<span class="token punctuation">(</span>z<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> frame_id<span class="token operator">=</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">,</span> auto_arm<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="block-land" tabindex="-1"><a class="header-anchor" href="#block-land" aria-hidden="true">#</a> #</h3><p><a name="block-land"></a></p><p>Land and wait until the copter lands:</p><div class="language-python ext-py"><pre class="language-python"><code>land<span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">while</span> get_telemetry<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>armed<span class="token punctuation">:</span>
    rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>
</code></pre></div><p>Usage:</p><div class="language-python ext-py"><pre class="language-python"><code>land_wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="wait_arrival" tabindex="-1"><a class="header-anchor" href="#wait_arrival" aria-hidden="true">#</a> #</h3>`,10),w=n("Wait for copter's arrival to the "),v=n("navigate"),x=n(" target:"),P=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">def</span> <span class="token function">wait_arrival</span><span class="token punctuation">(</span>tolerance<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">while</span> <span class="token keyword">not</span> rospy<span class="token punctuation">.</span>is_shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        telem <span class="token operator">=</span> get_telemetry<span class="token punctuation">(</span>frame_id<span class="token operator">=</span><span class="token string">&#39;navigate_target&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>telem<span class="token punctuation">.</span>x <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> telem<span class="token punctuation">.</span>y <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> telem<span class="token punctuation">.</span>z <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> tolerance<span class="token punctuation">:</span>
            <span class="token keyword">break</span>
        rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="get_distance" tabindex="-1"><a class="header-anchor" href="#get_distance" aria-hidden="true">#</a> #</h3>`,2),S=n("Calculate the distance between two points ("),T=s("strong",null,"important",-1),I=n(": the points are to be in the same "),C=n("coordinate system"),A=n("):"),z=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">def</span> <span class="token function">get_distance</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> z1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> z2<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token punctuation">(</span>x1 <span class="token operator">-</span> x2<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token punctuation">(</span>y1 <span class="token operator">-</span> y2<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token punctuation">(</span>z1 <span class="token operator">-</span> z2<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="get_distance_global" tabindex="-1"><a class="header-anchor" href="#get_distance_global" aria-hidden="true">#</a> #</h3><p>Approximation of distance (in meters) between two global coordinates (latitude/longitude):</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">def</span> <span class="token function">get_distance_global</span><span class="token punctuation">(</span>lat1<span class="token punctuation">,</span> lon1<span class="token punctuation">,</span> lat2<span class="token punctuation">,</span> lon2<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> math<span class="token punctuation">.</span>hypot<span class="token punctuation">(</span>lat1 <span class="token operator">-</span> lat2<span class="token punctuation">,</span> lon1 <span class="token operator">-</span> lon2<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1.113195e5</span>
</code></pre></div><h3 id="disarm" tabindex="-1"><a class="header-anchor" href="#disarm" aria-hidden="true">#</a> #</h3><p>Disarm the drone (propellers will stop, <strong>the drone will fall down</strong>):</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token comment"># Declaring a proxy:</span>
<span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>srv <span class="token keyword">import</span> CommandBool
arming <span class="token operator">=</span> rospy<span class="token punctuation">.</span>ServiceProxy<span class="token punctuation">(</span><span class="token string">&#39;mavros/cmd/arming&#39;</span><span class="token punctuation">,</span> CommandBool<span class="token punctuation">)</span>

<span class="token comment"># ...</span>

arming<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># disarm</span>
</code></pre></div><h3 id="transform" tabindex="-1"><a class="header-anchor" href="#transform" aria-hidden="true">#</a> #</h3>`,8),R=n("Transform the position ("),M=s("code",null,"PoseStamped",-1),L=n(") from one "),E=n("coordinate system"),V=n(" to another using "),D={href:"http://wiki.ros.org/tf2",target:"_blank",rel:"noopener noreferrer"},F=n("tf2"),B=n(":"),N=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> tf2_ros
<span class="token keyword">import</span> tf2_geometry_msgs
<span class="token keyword">from</span> geometry_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> PoseStamped

tf_buffer <span class="token operator">=</span> tf2_ros<span class="token punctuation">.</span>Buffer<span class="token punctuation">(</span><span class="token punctuation">)</span>
tf_listener <span class="token operator">=</span> tf2_ros<span class="token punctuation">.</span>TransformListener<span class="token punctuation">(</span>tf_buffer<span class="token punctuation">)</span>

<span class="token comment"># ...</span>

<span class="token comment"># Create PoseStamped object (or get it from a topic):</span>
pose <span class="token operator">=</span> PoseStamped<span class="token punctuation">(</span><span class="token punctuation">)</span>
pose<span class="token punctuation">.</span>header<span class="token punctuation">.</span>frame_id <span class="token operator">=</span> <span class="token string">&#39;map&#39;</span> <span class="token comment"># coordinate frame, in which the position is specified</span>
pose<span class="token punctuation">.</span>header<span class="token punctuation">.</span>stamp <span class="token operator">=</span> rospy<span class="token punctuation">.</span>get_rostime<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># the time for which the position is specified (current time)</span>
pose<span class="token punctuation">.</span>pose<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">1</span>
pose<span class="token punctuation">.</span>pose<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">2</span>
pose<span class="token punctuation">.</span>pose<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">3</span>
pose<span class="token punctuation">.</span>pose<span class="token punctuation">.</span>orientation<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1</span>

frame_id <span class="token operator">=</span> <span class="token string">&#39;base_link&#39;</span> <span class="token comment"># target coordinate frame</span>
transform_timeout <span class="token operator">=</span> rospy<span class="token punctuation">.</span>Duration<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span> <span class="token comment"># timeout for transformation</span>

<span class="token comment"># Transform the position from the old frame to the new one:</span>
new_pose <span class="token operator">=</span> tf_buffer<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>pose<span class="token punctuation">,</span> frame_id<span class="token punctuation">,</span> transform_timeout<span class="token punctuation">)</span>
</code></pre></div><h3 id="upside-down" tabindex="-1"><a class="header-anchor" href="#upside-down" aria-hidden="true">#</a> #</h3><p>Determine whether the copter is turned upside-down:</p><div class="language-python ext-py"><pre class="language-python"><code>PI_2 <span class="token operator">=</span> math<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">2</span>
telem <span class="token operator">=</span> get_telemetry<span class="token punctuation">(</span><span class="token punctuation">)</span>

flipped <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>telem<span class="token punctuation">.</span>pitch<span class="token punctuation">)</span> <span class="token operator">&gt;</span> PI_2 <span class="token keyword">or</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>telem<span class="token punctuation">.</span>roll<span class="token punctuation">)</span> <span class="token operator">&gt;</span> PI_2
</code></pre></div><h3 id="angle-hor" tabindex="-1"><a class="header-anchor" href="#angle-hor" aria-hidden="true">#</a> #</h3><p>Calculate the copter horizontal angle:</p><div class="language-python ext-py"><pre class="language-python"><code>PI_2 <span class="token operator">=</span> math<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">2</span>
telem <span class="token operator">=</span> get_telemetry<span class="token punctuation">(</span><span class="token punctuation">)</span>

flipped <span class="token operator">=</span> <span class="token keyword">not</span> <span class="token operator">-</span>PI_2 <span class="token operator">&lt;=</span> telem<span class="token punctuation">.</span>pitch <span class="token operator">&lt;=</span> PI_2 <span class="token keyword">or</span> <span class="token keyword">not</span> <span class="token operator">-</span>PI_2 <span class="token operator">&lt;=</span> telem<span class="token punctuation">.</span>roll <span class="token operator">&lt;=</span> PI_2
angle_to_horizon <span class="token operator">=</span> math<span class="token punctuation">.</span>atan<span class="token punctuation">(</span>math<span class="token punctuation">.</span>hypot<span class="token punctuation">(</span>math<span class="token punctuation">.</span>tan<span class="token punctuation">(</span>telem<span class="token punctuation">.</span>pitch<span class="token punctuation">)</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>tan<span class="token punctuation">(</span>telem<span class="token punctuation">.</span>roll<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> flipped<span class="token punctuation">:</span>
    angle_to_horizon <span class="token operator">=</span> math<span class="token punctuation">.</span>pi <span class="token operator">-</span> angle_to_horizon
</code></pre></div><h3 id="circle" tabindex="-1"><a class="header-anchor" href="#circle" aria-hidden="true">#</a> #</h3><p>Fly along a circular path:</p><div class="language-python ext-py"><pre class="language-python"><code>RADIUS <span class="token operator">=</span> <span class="token number">0.6</span>  <span class="token comment"># m</span>
SPEED <span class="token operator">=</span> <span class="token number">0.3</span> <span class="token comment"># rad / s</span>

start <span class="token operator">=</span> get_telemetry<span class="token punctuation">(</span><span class="token punctuation">)</span>
start_stamp <span class="token operator">=</span> rospy<span class="token punctuation">.</span>get_rostime<span class="token punctuation">(</span><span class="token punctuation">)</span>

r <span class="token operator">=</span> rospy<span class="token punctuation">.</span>Rate<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>

<span class="token keyword">while</span> <span class="token keyword">not</span> rospy<span class="token punctuation">.</span>is_shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    angle <span class="token operator">=</span> <span class="token punctuation">(</span>rospy<span class="token punctuation">.</span>get_rostime<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start_stamp<span class="token punctuation">)</span><span class="token punctuation">.</span>to_sec<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> SPEED
    x <span class="token operator">=</span> start<span class="token punctuation">.</span>x <span class="token operator">+</span> math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>angle<span class="token punctuation">)</span> <span class="token operator">*</span> RADIUS
    y <span class="token operator">=</span> start<span class="token punctuation">.</span>y <span class="token operator">+</span> math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>angle<span class="token punctuation">)</span> <span class="token operator">*</span> RADIUS
    set_position<span class="token punctuation">(</span>x<span class="token operator">=</span>x<span class="token punctuation">,</span> y<span class="token operator">=</span>y<span class="token punctuation">,</span> z<span class="token operator">=</span>start<span class="token punctuation">.</span>z<span class="token punctuation">)</span>

    r<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="rate" tabindex="-1"><a class="header-anchor" href="#rate" aria-hidden="true">#</a> #</h3><p>Repeat an action at a frequency of 10 Hz:</p><div class="language-python ext-py"><pre class="language-python"><code>r <span class="token operator">=</span> rospy<span class="token punctuation">.</span>Rate<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">while</span> <span class="token keyword">not</span> rospy<span class="token punctuation">.</span>is_shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Do anything</span>
    r<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="mavros-sub" tabindex="-1"><a class="header-anchor" href="#mavros-sub" aria-hidden="true">#</a> #</h3><p>An example of subscription to a topic from MAVROS:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> geometry_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> PoseStamped<span class="token punctuation">,</span> TwistStamped
<span class="token keyword">from</span> sensor_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> BatteryState
<span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> RCIn

<span class="token keyword">def</span> <span class="token function">pose_update</span><span class="token punctuation">(</span>pose<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Processing new data of copter&#39;s position</span>
    <span class="token keyword">pass</span>

rospy<span class="token punctuation">.</span>Subscriber<span class="token punctuation">(</span><span class="token string">&#39;/mavros/local_position/pose&#39;</span><span class="token punctuation">,</span> PoseStamped<span class="token punctuation">,</span> pose_update<span class="token punctuation">)</span>
rospy<span class="token punctuation">.</span>Subscriber<span class="token punctuation">(</span><span class="token string">&#39;/mavros/local_position/velocity&#39;</span><span class="token punctuation">,</span> TwistStamped<span class="token punctuation">,</span> velocity_update<span class="token punctuation">)</span>
rospy<span class="token punctuation">.</span>Subscriber<span class="token punctuation">(</span><span class="token string">&#39;/mavros/battery&#39;</span><span class="token punctuation">,</span> BatteryState<span class="token punctuation">,</span> battery_update<span class="token punctuation">)</span>
rospy<span class="token punctuation">.</span>Subscriber<span class="token punctuation">(</span><span class="token string">&#39;mavros/rc/in&#39;</span><span class="token punctuation">,</span> RCIn<span class="token punctuation">,</span> rc_callback<span class="token punctuation">)</span>

rospy<span class="token punctuation">.</span>spin<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div>`,16),O=n("Information about MAVROS topics is available at "),U=n("the link"),q=n("."),G=s("h3",{id:"mavlink",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#mavlink","aria-hidden":"true"},"#"),n(" #")],-1),H=n("Send an arbitrary "),Z=n("MAVLink message"),W=n(" to the copter:"),Y=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> Mavlink
<span class="token keyword">from</span> mavros <span class="token keyword">import</span> mavlink
<span class="token keyword">from</span> pymavlink <span class="token keyword">import</span> mavutil

mavlink_pub <span class="token operator">=</span> rospy<span class="token punctuation">.</span>Publisher<span class="token punctuation">(</span><span class="token string">&#39;mavlink/to&#39;</span><span class="token punctuation">,</span> Mavlink<span class="token punctuation">,</span> queue_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># Sending a HEARTBEAT message:</span>
msg <span class="token operator">=</span> mavutil<span class="token punctuation">.</span>mavlink<span class="token punctuation">.</span>MAVLink_heartbeat_message<span class="token punctuation">(</span>mavutil<span class="token punctuation">.</span>mavlink<span class="token punctuation">.</span>MAV_TYPE_GCS<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
msg<span class="token punctuation">.</span>pack<span class="token punctuation">(</span>mavutil<span class="token punctuation">.</span>mavlink<span class="token punctuation">.</span>MAVLink<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ros_msg <span class="token operator">=</span> mavlink<span class="token punctuation">.</span>convert_to_rosmsg<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>

mavlink_pub<span class="token punctuation">.</span>publish<span class="token punctuation">(</span>ros_msg<span class="token punctuation">)</span>
</code></pre></div><h3 id="rc-sub" tabindex="-1"><a class="header-anchor" href="#rc-sub" aria-hidden="true">#</a> #</h3>`,2),j=n("React to the drone's mode switching (may be used for starting an autonomous flight, see "),X={href:"https://gist.github.com/okalachev/b709f04522d2f9af97e835baedeb806b",target:"_blank",rel:"noopener noreferrer"},J=n("example"),K=n("):"),Q=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> RCIn

<span class="token comment"># Called when new data is received from the transmitter</span>
<span class="token keyword">def</span> <span class="token function">rc_callback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># React on toggling the mode of the transmitter</span>
    <span class="token keyword">if</span> data<span class="token punctuation">.</span>channels<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">1100</span><span class="token punctuation">:</span>
        <span class="token comment"># ...</span>
        <span class="token keyword">pass</span>
    <span class="token keyword">elif</span> data<span class="token punctuation">.</span>channels<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">1900</span><span class="token punctuation">:</span>
        <span class="token comment"># ...</span>
        <span class="token keyword">pass</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token comment"># ...</span>
        <span class="token keyword">pass</span>

<span class="token comment"># Creating a subscriber for the topic with the data from the transmitter</span>
rospy<span class="token punctuation">.</span>Subscriber<span class="token punctuation">(</span><span class="token string">&#39;mavros/rc/in&#39;</span><span class="token punctuation">,</span> RCIn<span class="token punctuation">,</span> rc_callback<span class="token punctuation">)</span>

rospy<span class="token punctuation">.</span>spin<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="set_mode" tabindex="-1"><a class="header-anchor" href="#set_mode" aria-hidden="true">#</a> #</h3>`,2),$=n("Change the "),nn=n("flight mode"),sn=n(" to arbitrary one:"),an=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>srv <span class="token keyword">import</span> SetMode

set_mode <span class="token operator">=</span> rospy<span class="token punctuation">.</span>ServiceProxy<span class="token punctuation">(</span><span class="token string">&#39;mavros/set_mode&#39;</span><span class="token punctuation">,</span> SetMode<span class="token punctuation">)</span>

<span class="token comment"># ...</span>

set_mode<span class="token punctuation">(</span>custom_mode<span class="token operator">=</span><span class="token string">&#39;STABILIZED&#39;</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="flip" tabindex="-1"><a class="header-anchor" href="#flip" aria-hidden="true">#</a> #</h3><p>Flip:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> math

PI_2 <span class="token operator">=</span> math<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">2</span>

<span class="token keyword">def</span> <span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    start <span class="token operator">=</span> get_telemetry<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># memorize starting position</span>

    set_rates<span class="token punctuation">(</span>thrust<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># bump up</span>
    rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>

    set_rates<span class="token punctuation">(</span>pitch_rate<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> thrust<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span>  <span class="token comment"># pitch flip</span>
    <span class="token comment"># set_rates(roll_rate=30, thrust=0.2)  # roll flip</span>

    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        telem <span class="token operator">=</span> get_telemetry<span class="token punctuation">(</span><span class="token punctuation">)</span>
        flipped <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>telem<span class="token punctuation">.</span>pitch<span class="token punctuation">)</span> <span class="token operator">&gt;</span> PI_2 <span class="token keyword">or</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>telem<span class="token punctuation">.</span>roll<span class="token punctuation">)</span> <span class="token operator">&gt;</span> PI_2
        <span class="token keyword">if</span> flipped<span class="token punctuation">:</span>
            <span class="token keyword">break</span>

    rospy<span class="token punctuation">.</span>loginfo<span class="token punctuation">(</span><span class="token string">&#39;finish flip&#39;</span><span class="token punctuation">)</span>
    set_position<span class="token punctuation">(</span>x<span class="token operator">=</span>start<span class="token punctuation">.</span>x<span class="token punctuation">,</span> y<span class="token operator">=</span>start<span class="token punctuation">.</span>y<span class="token punctuation">,</span> z<span class="token operator">=</span>start<span class="token punctuation">.</span>z<span class="token punctuation">,</span> yaw<span class="token operator">=</span>start<span class="token punctuation">.</span>yaw<span class="token punctuation">)</span>  <span class="token comment"># finish flip</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>navigate<span class="token punctuation">(</span>z<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> speed<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> frame_id<span class="token operator">=</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">,</span> auto_arm<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># take off</span>
rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>

rospy<span class="token punctuation">.</span>loginfo<span class="token punctuation">(</span><span class="token string">&#39;flip&#39;</span><span class="token punctuation">)</span>
flip<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div>`,4),tn=n("Requires the "),pn=n("special PX4 firmware for Clover"),on=n(". Before running a flip, take all necessary safety precautions."),en=o(`<h3 id="calibrate-gyro" tabindex="-1"><a class="header-anchor" href="#calibrate-gyro" aria-hidden="true">#</a> #</h3><p>Perform gyro calibration:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> pymavlink <span class="token keyword">import</span> mavutil
<span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>srv <span class="token keyword">import</span> CommandLong
<span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> State

send_command <span class="token operator">=</span> rospy<span class="token punctuation">.</span>ServiceProxy<span class="token punctuation">(</span><span class="token string">&#39;/mavros/cmd/command&#39;</span><span class="token punctuation">,</span> CommandLong<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">calibrate_gyro</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    rospy<span class="token punctuation">.</span>loginfo<span class="token punctuation">(</span><span class="token string">&#39;Calibrate gyro&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> send_command<span class="token punctuation">(</span>command<span class="token operator">=</span>mavutil<span class="token punctuation">.</span>mavlink<span class="token punctuation">.</span>MAV_CMD_PREFLIGHT_CALIBRATION<span class="token punctuation">,</span> param1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>success<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

    calibrating <span class="token operator">=</span> <span class="token boolean">False</span>
    <span class="token keyword">while</span> <span class="token keyword">not</span> rospy<span class="token punctuation">.</span>is_shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        state <span class="token operator">=</span> rospy<span class="token punctuation">.</span>wait_for_message<span class="token punctuation">(</span><span class="token string">&#39;mavros/state&#39;</span><span class="token punctuation">,</span> State<span class="token punctuation">)</span>
        <span class="token keyword">if</span> state<span class="token punctuation">.</span>system_status <span class="token operator">==</span> mavutil<span class="token punctuation">.</span>mavlink<span class="token punctuation">.</span>MAV_STATE_CALIBRATING <span class="token keyword">or</span> state<span class="token punctuation">.</span>system_status <span class="token operator">==</span> mavutil<span class="token punctuation">.</span>mavlink<span class="token punctuation">.</span>MAV_STATE_UNINIT<span class="token punctuation">:</span>
            calibrating <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">elif</span> calibrating <span class="token keyword">and</span> state<span class="token punctuation">.</span>system_status <span class="token operator">==</span> mavutil<span class="token punctuation">.</span>mavlink<span class="token punctuation">.</span>MAV_STATE_STANDBY<span class="token punctuation">:</span>
            rospy<span class="token punctuation">.</span>loginfo<span class="token punctuation">(</span><span class="token string">&#39;Calibrating finished&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>

calibrate_gyro<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>In process of calibration the drone should not be moved.</p></div><h3 id="aruco-detect-enabled" tabindex="-1"><a class="header-anchor" href="#aruco-detect-enabled" aria-hidden="true">#</a> #</h3>`,5),cn=n("Enable and disable "),ln=n("ArUco markers recognition"),un=n(" dynamically (for example, for saving CPU resources):"),rn=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> rospy
<span class="token keyword">import</span> dynamic_reconfigure<span class="token punctuation">.</span>client

client <span class="token operator">=</span> dynamic_reconfigure<span class="token punctuation">.</span>client<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&#39;aruco_detect&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># Turn markers recognition off</span>
client<span class="token punctuation">.</span>update_configuration<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;enabled&#39;</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>

<span class="token comment"># Turn markers recognition on</span>
client<span class="token punctuation">.</span>update_configuration<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;enabled&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="wait-global-position" tabindex="-1"><a class="header-anchor" href="#wait-global-position" aria-hidden="true">#</a> #</h3>`,2),kn=n("Wait for global position to appear (finishing "),dn=n("GPS receiver"),mn=n(" initialization):"),hn=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">while</span> <span class="token keyword">not</span> rospy<span class="token punctuation">.</span>is_shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> math<span class="token punctuation">.</span>isfinite<span class="token punctuation">(</span>get_telemetry<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lat<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">break</span>
    rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="get-param" tabindex="-1"><a class="header-anchor" href="#get-param" aria-hidden="true">#</a> #</h3><p>Read flight controller&#39;s parameter:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>srv <span class="token keyword">import</span> ParamGet
<span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> ParamValue

param_get <span class="token operator">=</span> rospy<span class="token punctuation">.</span>ServiceProxy<span class="token punctuation">(</span><span class="token string">&#39;mavros/param/get&#39;</span><span class="token punctuation">,</span> ParamGet<span class="token punctuation">)</span>

<span class="token comment"># Read parameter of type INT</span>
value <span class="token operator">=</span> param_get<span class="token punctuation">(</span>param_id<span class="token operator">=</span><span class="token string">&#39;COM_FLTMODE1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span>integer

<span class="token comment"># Read parameter of type FLOAT</span>
value <span class="token operator">=</span> param_get<span class="token punctuation">(</span>param_id<span class="token operator">=</span><span class="token string">&#39;MPC_Z_P&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token builtin">float</span>
</code></pre></div><h3 id="set-param" tabindex="-1"><a class="header-anchor" href="#set-param" aria-hidden="true">#</a> #</h3><p>Set flight controller&#39;s parameter:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>srv <span class="token keyword">import</span> ParamSet
<span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> ParamValue

param_set <span class="token operator">=</span> rospy<span class="token punctuation">.</span>ServiceProxy<span class="token punctuation">(</span><span class="token string">&#39;mavros/param/set&#39;</span><span class="token punctuation">,</span> ParamSet<span class="token punctuation">)</span>

<span class="token comment"># Set parameter of type INT:</span>
param_set<span class="token punctuation">(</span>param_id<span class="token operator">=</span><span class="token string">&#39;COM_FLTMODE1&#39;</span><span class="token punctuation">,</span> value<span class="token operator">=</span>ParamValue<span class="token punctuation">(</span>integer<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># Set parameter of type FLOAT:</span>
param_set<span class="token punctuation">(</span>param_id<span class="token operator">=</span><span class="token string">&#39;MPC_Z_P&#39;</span><span class="token punctuation">,</span> value<span class="token operator">=</span>ParamValue<span class="token punctuation">(</span>real<span class="token operator">=</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div>`,7);function _n(gn,yn){const t=c("RouterLink"),e=c("ExternalLinkIcon");return u(),r(i,null,[d,s("p",null,[m,a(t,{to:"/en/frames.html#navigate_target"},{default:p(()=>[h]),_:1}),_]),s("p",null,[g,a(t,{to:"/en/aruco_map.html"},{default:p(()=>[y]),_:1}),f]),b,s("p",null,[w,a(t,{to:"/en/simple_offboard.html#navigate"},{default:p(()=>[v]),_:1}),x]),P,s("p",null,[S,T,I,a(t,{to:"/en/frames.html"},{default:p(()=>[C]),_:1}),A]),z,s("p",null,[R,M,L,a(t,{to:"/en/frames.html"},{default:p(()=>[E]),_:1}),V,s("a",D,[F,a(e)]),B]),N,s("p",null,[O,a(t,{to:"/en/mavros.html"},{default:p(()=>[U]),_:1}),q]),G,s("p",null,[H,a(t,{to:"/en/mavlink.html"},{default:p(()=>[Z]),_:1}),W]),Y,s("p",null,[j,s("a",X,[J,a(e)]),K]),Q,s("p",null,[$,a(t,{to:"/en/modes.html"},{default:p(()=>[nn]),_:1}),sn]),an,s("p",null,[tn,a(t,{to:"/en/firmware.html#modified-firmware-for-clover"},{default:p(()=>[pn]),_:1}),on]),en,s("p",null,[cn,a(t,{to:"/en/aruco_marker.html"},{default:p(()=>[ln]),_:1}),un]),rn,s("p",null,[kn,a(t,{to:"/en/gps.html"},{default:p(()=>[dn]),_:1}),mn]),hn],64)}var bn=l(k,[["render",_n],["__file","snippets.html.vue"]]);export{bn as default};
