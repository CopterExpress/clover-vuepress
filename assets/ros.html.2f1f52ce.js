import{_ as c,r,o as p,c as l,a as e,b as n,w as a,F as d,d as s,e as i}from"./app.4f6a4bec.js";import{_ as h}from"./ros.f5712a7f.js";const u={},_=e("h1",{id:"ros",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#ros","aria-hidden":"true"},"#"),s(" ROS")],-1),m=e("img",{src:h,width:"200",align:"right"},null,-1),g=s("Main documentation: "),k={href:"https://wiki.ros.org",target:"_blank",rel:"noopener noreferrer"},f=s("https://wiki.ros.org"),y=s("."),b=e("strong",null,"ROS",-1),v=s(" is a widely used framework for developing complex and distributed robotic systems. The "),w=s("Clover autonomous flights platform"),S=s(" is based on ROS."),x=e("h2",{id:"installation",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#"),s(" Installation")],-1),R=s("ROS is already installed on "),O=s("the RPi image"),P=s("."),T=s("To install ROS on your PC you may address the "),C={href:"https://wiki.ros.org/noetic/Installation/Ubuntu",target:"_blank",rel:"noopener noreferrer"},I=s("official installation documentation"),M=s(". For a quick start it's recommended to use "),q=s("the virtual machine image with ROS and Clover simulator"),E=s("."),z=e("h2",{id:"concepts",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#concepts","aria-hidden":"true"},"#"),s(" Concepts")],-1),F=e("h3",{id:"nodes",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#nodes","aria-hidden":"true"},"#"),s(" Nodes")],-1),N=s("Main article: "),A={href:"https://wiki.ros.org/Nodes",target:"_blank",rel:"noopener noreferrer"},L=s("https://wiki.ros.org/Nodes"),G=s("."),V=i(`<p>ROS node is a special program (usually written in Python or C++) that communicates with other nodes via ROS topics and ROS services. Dividing complex robotic systems into isolated nodes provides certain advantages: reduced coupling of the code, increased reusability and reliability.</p><p>Many robotic libraries and drivers are made as ROS nodes.</p><p>In order to turn an ordinary program into a ROS node, include the <code>rospy</code> (Python) or <code>roscpp</code> (C++) library, and insert the initialization code.</p><p>An example of a ROS node in Python:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> rospy

rospy<span class="token punctuation">.</span>init_node<span class="token punctuation">(</span><span class="token string">&#39;my_ros_node&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># the name of the ROS node</span>

rospy<span class="token punctuation">.</span>spin<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># entering an infinite loop...</span>
</code></pre></div>`,5),B={class:"custom-container tip"},D=e("p",{class:"custom-container-title"},"TIP",-1),W=s("Any "),Y=s("autonomous flight script"),j=s(" for Clover is a ROS node."),H=e("h3",{id:"topics",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#topics","aria-hidden":"true"},"#"),s(" Topics")],-1),U=s("Main article: "),J={href:"https://wiki.ros.org/Topics",target:"_blank",rel:"noopener noreferrer"},K=s("https://wiki.ros.org/Topics"),Q=e("p",null,[s("A topic is a named data bus used by the nodes for exchanging messages. Any node can "),e("em",null,"publish"),s(" a message to any topic, and "),e("em",null,"subscribe"),s(" to any topic.")],-1),X=e("p",null,"\u0414\u043B\u044F \u043A\u0430\u0436\u0434\u043E\u0433\u043E \u0441\u043E\u0437\u0434\u0430\u043D\u043D\u043E\u0433\u043E \u0442\u043E\u043F\u0438\u043A\u0430 \u0434\u043E\u043B\u0436\u0435\u043D \u0431\u044B\u0442\u044C \u0437\u0430\u0434\u0430\u043D \u0442\u0438\u043F \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439, \u043A\u043E\u0442\u043E\u0440\u044B\u0435 \u043F\u043E \u043D\u0435\u043C\u0443 \u043F\u0435\u0440\u0435\u0434\u0430\u044E\u0442\u0441\u044F. ROS \u0432\u043A\u043B\u044E\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044F \u0431\u043E\u043B\u044C\u0448\u043E\u0435 \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0441\u0442\u0430\u043D\u0434\u0430\u0440\u0442\u043D\u044B\u0445 \u0442\u0438\u043F\u043E\u0432 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439, \u043F\u043E\u043A\u0440\u044B\u0432\u0430\u044E\u0449\u0438\u0445 \u0440\u0430\u0437\u043B\u0438\u0447\u043D\u044B\u0435 \u0430\u0441\u043F\u0435\u043A\u0442\u044B \u0440\u043E\u0431\u043E\u0442\u043E\u0442\u0435\u0445\u043D\u0438\u043A\u0438, \u043D\u043E \u043F\u0440\u0438 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E\u0441\u0442\u0438 \u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u0441\u043E\u0431\u0441\u0442\u0432\u0435\u043D\u043D\u044B\u0445 \u0442\u0438\u043F\u043E\u0432 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439. \u041F\u0440\u0438\u043C\u0435\u0440\u044B \u0441\u0442\u0430\u043D\u0434\u0430\u0440\u0442\u043D\u044B\u0445 \u0442\u0438\u043F\u043E\u0432 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439:",-1),Z=e("p",null,"Each topic has the a of messages it passes. ROS include a lot of standard message types, covering different aspects of robotics. Creating custom message types is also possible. Example of standard message types:",-1),$=e("thead",null,[e("tr",null,[e("th",null,"Message type"),e("th",null,"Description")])],-1),ee={href:"https://docs.ros.org/api/std_msgs/html/msg/Int64.html",target:"_blank",rel:"noopener noreferrer"},se=e("code",null,"std_msgs/Int64",-1),ne=e("td",null,"Integer number.",-1),oe={href:"https://docs.ros.org/api/std_msgs/html/msg/Float64.html",target:"_blank",rel:"noopener noreferrer"},te=e("code",null,"std_msgs/Float64",-1),ae=e("td",null,"Double-precision floating-point number.",-1),ie={href:"https://docs.ros.org/api/std_msgs/html/msg/String.html",target:"_blank",rel:"noopener noreferrer"},re=e("code",null,"std_msgs/String",-1),ce=e("td",null,"String.",-1),pe={href:"https://docs.ros.org/api/geometry_msgs/html/msg/PoseStamped.html",target:"_blank",rel:"noopener noreferrer"},le=e("code",null,"geometry_msgs/PoseStamped",-1),de=s("Position and orientation of an object in a given "),he=s("coordinate system"),ue=s(" and a time stamp (widely used for passing the robot pose or some robot's part pose)."),_e={href:"https://docs.ros.org/api/geometry_msgs/html/msg/TwistStamped.html",target:"_blank",rel:"noopener noreferrer"},me=e("code",null,"geometry_msgs/TwistStamped",-1),ge=e("td",null,"Linear and angular velocity of an object in a given coordinate system and a time stamp.",-1),ke={href:"https://docs.ros.org/api/sensor_msgs/html/msg/Image.html",target:"_blank",rel:"noopener noreferrer"},fe=e("code",null,"sensor_msgs/Image",-1),ye=s("Image (see the "),be=s("article on working with the camera"),ve=s(")."),we={class:"custom-container tip"},Se=e("p",{class:"custom-container-title"},"TIP",-1),xe=s("See the rest of standard message types in packages: "),Re={href:"http://wiki.ros.org/common_msgs",target:"_blank",rel:"noopener noreferrer"},Oe=e("code",null,"common_msgs",-1),Pe=s(", "),Te={href:"https://wiki.ros.org/std_msgs",target:"_blank",rel:"noopener noreferrer"},Ce=e("code",null,"std_msgs",-1),Ie=s(", "),Me={href:"https://wiki.ros.org/geometry_msgs",target:"_blank",rel:"noopener noreferrer"},qe=e("code",null,"geometry_msgs",-1),Ee=s(", "),ze={href:"https://wiki.ros.org/sensor_msgs",target:"_blank",rel:"noopener noreferrer"},Fe=e("code",null,"sensor_msgs",-1),Ne=s(", and others."),Ae=i(`<p>Example of publishing a message of type <a href="(https://docs.ros.org/api/std_msgs/html/msg/String.html)"><code>String</code></a> in a topic <code>/foo</code> in Python:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> std_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> String

rospy<span class="token punctuation">.</span>init_node<span class="token punctuation">(</span><span class="token string">&#39;my_ros_node&#39;</span><span class="token punctuation">)</span>

foo_pub <span class="token operator">=</span> rospy<span class="token punctuation">.</span>Publisher<span class="token punctuation">(</span><span class="token string">&#39;/foo&#39;</span><span class="token punctuation">,</span> String<span class="token punctuation">,</span> queue_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># creating a Publisher</span>

foo_pub<span class="token punctuation">.</span>publish<span class="token punctuation">(</span>data<span class="token operator">=</span><span class="token string">&#39;Hello, world!&#39;</span><span class="token punctuation">)</span>  <span class="token comment"># publishing the message</span>
</code></pre></div><p>Example of subscription to a topic <code>/foo</code>:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> rospy
<span class="token keyword">from</span> std_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> String

rospy<span class="token punctuation">.</span>init_node<span class="token punctuation">(</span><span class="token string">&#39;my_ros_node&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">foo_callback</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span>msg<span class="token punctuation">.</span>data<span class="token punctuation">)</span>

<span class="token comment"># Subscribing. When a message is received in topic /foo, function foo_callback will be invoked.</span>
rospy<span class="token punctuation">.</span>Subscriber<span class="token punctuation">(</span><span class="token string">&#39;/foo&#39;</span><span class="token punctuation">,</span> String<span class="token punctuation">,</span> foo_callback<span class="token punctuation">)</span>
</code></pre></div><p>You can read a topic message once, using <code>wait_for_message</code> function:</p><div class="language-python ext-py"><pre class="language-python"><code>msg <span class="token operator">=</span> rospy<span class="token punctuation">.</span>wait_for_message<span class="token punctuation">(</span><span class="token string">&#39;/foo&#39;</span><span class="token punctuation">,</span> String<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span>  <span class="token comment"># wait for a message in /foo topic with timeout of 3 seconds</span>
</code></pre></div><p>You can also work with topics using the <code>rostopic</code> utility. For example, using the following command, you can view messages published in topic <code>/mavros/state</code>:</p><div class="language-bash ext-sh"><pre class="language-bash"><code>rostopic <span class="token builtin class-name">echo</span> /mavros/state
</code></pre></div><p>The <code>rostopic info</code> command shows the type of messages in the topic, and <code>rostopic hz</code> shows frequency of published messages.</p>`,9),Le=s("Also you can monitor and visualize topics using "),Ge=s("graphical tools of ROS"),Ve=s("."),Be=e("h3",{id:"services",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#services","aria-hidden":"true"},"#"),s(" Services")],-1),De=s("Main article: "),We={href:"https://wiki.ros.org/Services",target:"_blank",rel:"noopener noreferrer"},Ye=s("https://wiki.ros.org/Services"),je=e("p",null,"A service can be assimilated to the a function that can be called from one node, and processed in another one. The service has a name that is similar to the name of the topic, and 2 message types: request type and response type.",-1),He=s("Thus, ROS services implement "),Ue={href:"https://en.wikipedia.org/wiki/Remote_procedure_call",target:"_blank",rel:"noopener noreferrer"},Je=s("remote procedure call (RPC)"),Ke=s(" pattern."),Qe=i(`<p>Example of invoking a ROS service in Python:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> rospy
<span class="token keyword">from</span> clover<span class="token punctuation">.</span>srv <span class="token keyword">import</span> GetTelemetry

rospy<span class="token punctuation">.</span>init_node<span class="token punctuation">(</span><span class="token string">&#39;my_ros_node&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># Creating a wrapper for the get_telemetry service of the clover package with the GetTelemetry type:</span>
get_telemetry <span class="token operator">=</span> rospy<span class="token punctuation">.</span>ServiceProxy<span class="token punctuation">(</span><span class="token string">&#39;get_telemetry&#39;</span><span class="token punctuation">,</span> srv<span class="token punctuation">.</span>GetTelemetry<span class="token punctuation">)</span>

<span class="token comment"># Invoking the service, and getting the quadcopter telemetry:</span>
telemetry <span class="token operator">=</span> get_telemetry<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>You can also work with the services using the <code>rosservice</code> utility. For instance, you can call service <code>/get_telemetry</code> from the command line:</p><div class="language-bash ext-sh"><pre class="language-bash"><code>rosservice call /get_telemetry <span class="token string">&quot;{frame_id: &#39;&#39;}&quot;</span>
</code></pre></div>`,4),Xe=s("More examples of using the services for Clover quadcopter autonomous flights are available in the "),Ze=s("documentation for node simple_offboard"),$e=s("."),es=e("h3",{id:"names",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#names","aria-hidden":"true"},"#"),s(" Names")],-1),ss=s("Main article: "),ns={href:"https://wiki.ros.org/Names",target:"_blank",rel:"noopener noreferrer"},os=s("https://wiki.ros.org/Names"),ts=s("."),as=i(`<p>Any topic, service or a parameter is identified with a unique name. A ROS name is hierarchical structure with a <code>/</code> symbol as a separator (which is close to a file name in a file system).</p><p>Examples of ROS names:</p><ul><li><code>/</code> (global namespace)</li><li><code>/foo</code></li><li><code>/stanford/robot/name</code></li><li><code>/wg/node1</code></li></ul><p>This names are global (close to global names in a file system). In practice, it&#39;s recommended to use <em>private</em> or <em>relative</em> names.</p><h4 id="private-name" tabindex="-1"><a class="header-anchor" href="#private-name" aria-hidden="true">#</a> Private name</h4><p>Each node can use its own private namespace (corresponding its name) for its resources. For example, <code>aruco_detect</code> node may publish such topics:</p><ul><li><code>/aruco_detect/markers</code></li><li><code>/aruco_detect/visualization</code></li><li><code>/aruco_detect/debug</code></li></ul><p>When a node is referring its private resource, instead of <code>/aruco_detect/</code> namespace it may use <code>~</code> symbol:</p><ul><li><code>~markers</code></li><li><code>~visualization</code></li><li><code>~debug</code></li></ul><p>Thus, creating a <code>foo</code> topic and the private namespace would look like this:</p><div class="language-python ext-py"><pre class="language-python"><code>private_foo_pub <span class="token operator">=</span> rospy<span class="token punctuation">.</span>Publisher<span class="token punctuation">(</span><span class="token string">&#39;~foo&#39;</span><span class="token punctuation">,</span> String<span class="token punctuation">,</span> queue_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre></div><h4 id="relative-name" tabindex="-1"><a class="header-anchor" href="#relative-name" aria-hidden="true">#</a> Relative name</h4><p>Several nodes may group into a common namespace (for example, when there are several robots in the network). For referring topics and services in the current namespace, the opening <code>/</code> symbol is omitted.</p><p>Example of create a <code>foo</code> topic in the current namespace:</p><div class="language-python ext-py"><pre class="language-python"><code>relative_foo_pub <span class="token operator">=</span> rospy<span class="token punctuation">.</span>Publisher<span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> String<span class="token punctuation">,</span> queue_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Generally, it&#39;s recommended to use private or relative names instead of global ones.</p></div><h3 id="working-on-several-pcs" tabindex="-1"><a class="header-anchor" href="#working-on-several-pcs" aria-hidden="true">#</a> Working on several PCs</h3>`,17),is=s("Main article: "),rs={href:"http://wiki.ros.org/ROS/Tutorials/MultipleMachines",target:"_blank",rel:"noopener noreferrer"},cs=s("http://wiki.ros.org/ROS/Tutorials/MultipleMachines"),ps=s("."),ls=e("p",null,"The advantage of using ROS is the possibility of distributing the nodes across several PCs in the network. For example, a node that recognizes an image may be run on a more powerful PC; the node that controls the copter may be run directly on a Raspberry Pi connected to the flight controller, etc.",-1);function ds(hs,us){const o=r("ExternalLinkIcon"),t=r("RouterLink");return p(),l(d,null,[_,m,e("p",null,[g,e("a",k,[f,n(o)]),y]),e("p",null,[b,v,n(t,{to:"/en/programming.html"},{default:a(()=>[w]),_:1}),S]),x,e("p",null,[R,n(t,{to:"/en/image.html"},{default:a(()=>[O]),_:1}),P]),e("p",null,[T,e("a",C,[I,n(o)]),M,n(t,{to:"/en/simulation_vm.html"},{default:a(()=>[q]),_:1}),E]),z,F,e("p",null,[N,e("a",A,[L,n(o)]),G]),V,e("div",B,[D,e("p",null,[W,n(t,{to:"/en/programming.html"},{default:a(()=>[Y]),_:1}),j])]),H,e("p",null,[U,e("a",J,[K,n(o)])]),Q,X,Z,e("table",null,[$,e("tbody",null,[e("tr",null,[e("td",null,[e("a",ee,[se,n(o)])]),ne]),e("tr",null,[e("td",null,[e("a",oe,[te,n(o)])]),ae]),e("tr",null,[e("td",null,[e("a",ie,[re,n(o)])]),ce]),e("tr",null,[e("td",null,[e("a",pe,[le,n(o)])]),e("td",null,[de,n(t,{to:"/en/frames.html"},{default:a(()=>[he]),_:1}),ue])]),e("tr",null,[e("td",null,[e("a",_e,[me,n(o)])]),ge]),e("tr",null,[e("td",null,[e("a",ke,[fe,n(o)])]),e("td",null,[ye,n(t,{to:"/en/camera.html"},{default:a(()=>[be]),_:1}),ve])])])]),e("div",we,[Se,e("p",null,[xe,e("a",Re,[Oe,n(o)]),Pe,e("a",Te,[Ce,n(o)]),Ie,e("a",Me,[qe,n(o)]),Ee,e("a",ze,[Fe,n(o)]),Ne])]),Ae,e("p",null,[Le,n(t,{to:"/en/rviz.html"},{default:a(()=>[Ge]),_:1}),Ve]),Be,e("p",null,[De,e("a",We,[Ye,n(o)])]),je,e("p",null,[He,e("a",Ue,[Je,n(o)]),Ke]),Qe,e("p",null,[Xe,n(t,{to:"/en/simple_offboard.html"},{default:a(()=>[Ze]),_:1}),$e]),es,e("p",null,[ss,e("a",ns,[os,n(o)]),ts]),as,e("p",null,[is,e("a",rs,[cs,n(o)]),ps]),ls],64)}var gs=c(u,[["render",ds],["__file","ros.html.vue"]]);export{gs as default};
