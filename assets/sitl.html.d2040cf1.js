import{_ as l,r as i,o as r,c,a as t,b as o,w as d,F as h,d as e,e as n}from"./app.4f6a4bec.js";const u={},p=t("h1",{id:"px4-simulation",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#px4-simulation","aria-hidden":"true"},"#"),e(" PX4 Simulation")],-1),m={class:"custom-container warning"},_=t("p",{class:"custom-container-title"},"WARNING",-1),g=e("This article is about running a standalone PX4 simulation with a generic quadcopter and "),x=t("strong",null,"is outdated",-1),f=e(". Consider using "),v=e("our configuration"),b=e(" for a more Clover-like experience."),w=e("Main article: "),k={href:"https://dev.px4.io/en/simulation/",target:"_blank",rel:"noopener noreferrer"},z=e("https://dev.px4.io/en/simulation/"),S=e("PX4 simulation is possible in Linux and macOS with the use of physical environment simulation systems "),j={href:"https://docs.px4.io/master/en/simulation/jmavsim.html",target:"_blank",rel:"noopener noreferrer"},L=e("jMAVSim"),P=e(" and "),M={href:"http://gazebosim.org",target:"_blank",rel:"noopener noreferrer"},V=e("the Gazebo"),T=e("."),y=n(`<p>jMAVSim is a lightweight environment intended only for testing multi-rotor aircraft systems; Gazebo is a versatile environment for all types of robots.</p><h2 id="launching-px4-sitl" tabindex="-1"><a class="header-anchor" href="#launching-px4-sitl" aria-hidden="true">#</a> Launching PX4 SITL</h2><ol><li>Clone repository from PX4.</li></ol><div class="language-text ext-text"><pre class="language-text"><code>git clone https://github.com/PX4/Firmware.git
cd Firmware
</code></pre></div><h2 id="jmavsim" tabindex="-1"><a class="header-anchor" href="#jmavsim" aria-hidden="true">#</a> jMAVSim</h2>`,5),A=e("Main article: "),C={href:"https://dev.px4.io/en/simulation/jmavsim.html",target:"_blank",rel:"noopener noreferrer"},E=e("https://dev.px4.io/en/simulation/jmavsim.html"),F=n(`<p>For simulation using the jMAVSim lightweight environment, use the following command:</p><div class="language-text ext-text"><pre class="language-text"><code>make posix_sitl_default jmavsim
</code></pre></div><p>To use the LPE position calculation module instead of EKF2, use:</p><div class="language-text ext-text"><pre class="language-text"><code>make posix_sitl_lpe jmavsim
</code></pre></div><h2 id="gazebo" tabindex="-1"><a class="header-anchor" href="#gazebo" aria-hidden="true">#</a> Gazebo</h2>`,5),G=e("Main article: "),N={href:"https://dev.px4.io/en/simulation/gazebo.html",target:"_blank",rel:"noopener noreferrer"},X=e("https://dev.px4.io/en/simulation/gazebo.html"),I=n(`<p>To get started, install Gazebo 7. On a Mac:</p><div class="language-text ext-text"><pre class="language-text"><code>brew install gazebo7
</code></pre></div><p>On Linux (Debian):</p><div class="language-text ext-text"><pre class="language-text"><code>sudo apt-get install gazebo7 libgazebo7-dev
</code></pre></div><p>Start simulation from the Firmware folder:</p><div class="language-text ext-text"><pre class="language-text"><code>make posix_sitl_default gazebo
</code></pre></div><p>You can run a simulation in headless mode (without a window client). To do this, use the following command:</p><div class="language-text ext-text"><pre class="language-text"><code>HEADLESS=1 make posix_sitl_default gazebo
</code></pre></div><h2 id="connection" tabindex="-1"><a class="header-anchor" href="#connection" aria-hidden="true">#</a> Connection</h2><p>QGroundControl will automatically connect to the running simulation on startup. The operation will be the same as, as in the case of a real flight controller.</p><p>To connect MAVROS to the simulation, use the UDP Protocol, a local IP address, and port 14557, for example:</p><div class="language-text ext-text"><pre class="language-text"><code>roslaunch mavros px4.launch fcu_url:=udp://@127.0.0.1:14557
</code></pre></div>`,12);function O(R,B){const s=i("RouterLink"),a=i("ExternalLinkIcon");return r(),c(h,null,[p,t("div",m,[_,t("p",null,[g,x,f,o(s,{to:"/en/simulation.html"},{default:d(()=>[v]),_:1}),b])]),t("p",null,[w,t("a",k,[z,o(a)])]),t("p",null,[S,t("a",j,[L,o(a)]),P,t("a",M,[V,o(a)]),T]),y,t("p",null,[A,t("a",C,[E,o(a)])]),F,t("p",null,[G,t("a",N,[X,o(a)])]),I],64)}var q=l(u,[["render",O],["__file","sitl.html.vue"]]);export{q as default};
