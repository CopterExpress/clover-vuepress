import{_ as t,r as o,o as e,c,a as n,b as p,F as u,d as s,e as l}from"./app.4f6a4bec.js";var k="/clover-vuepress/assets/lane_control_without_any_color.6768bbd9.jpg",r="/clover-vuepress/assets/lane_control_with_color.926afd18.jpg";const i={},m=n("h1",{id:"\u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044C-\u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u044F-\u043F\u0434\u0434-\u043D\u0430-\u0432\u044B\u0434\u0435\u043B\u0435\u043D\u043D\u043E\u0438-\u043F\u043E\u043B\u043E\u0441\u0435-\u0441-\u0434\u0440\u043E\u043D\u043E\u043C",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044C-\u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u044F-\u043F\u0434\u0434-\u043D\u0430-\u0432\u044B\u0434\u0435\u043B\u0435\u043D\u043D\u043E\u0438-\u043F\u043E\u043B\u043E\u0441\u0435-\u0441-\u0434\u0440\u043E\u043D\u043E\u043C","aria-hidden":"true"},"#"),s(" \u041A\u043E\u043D\u0442\u0440\u043E\u043B\u044C \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u044F \u041F\u0414\u0414 \u043D\u0430 \u0432\u044B\u0434\u0435\u043B\u0435\u043D\u043D\u043E\u0439 \u043F\u043E\u043B\u043E\u0441\u0435 \u0441 \u0434\u0440\u043E\u043D\u043E\u043C")],-1),d=n("h2",{id:"\u0430\u0432\u0442\u043E\u0440",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#\u0430\u0432\u0442\u043E\u0440","aria-hidden":"true"},"#"),s(" \u0410\u0432\u0442\u043E\u0440")],-1),b={href:"https://github.com/londrwus",target:"_blank",rel:"noopener noreferrer"},_=s("\u0421\u043C\u0438\u0440\u043D\u043E\u0432 \u0414\u0430\u043D\u0438\u0438\u043B"),y=s(", Telegram: "),g={href:"https://t.me/londrwus",target:"_blank",rel:"noopener noreferrer"},f=s("londrwus"),w=s("."),v=l(`<h2 id="\u0432\u0432\u0435\u0434\u0435\u043D\u0438\u0435" tabindex="-1"><a class="header-anchor" href="#\u0432\u0432\u0435\u0434\u0435\u043D\u0438\u0435" aria-hidden="true">#</a> \u0412\u0432\u0435\u0434\u0435\u043D\u0438\u0435</h2><p>\u0410\u0432\u0442\u043E\u0431\u0443\u0441\u043D\u0430\u044F \u043F\u043E\u043B\u043E\u0441\u0430 \u2014 \u044D\u0442\u043E \u0447\u0430\u0441\u0442\u044C \u0434\u043E\u0440\u043E\u0433\u0438 \u0442\u043E\u043B\u044C\u043A\u043E \u0434\u043B\u044F \u043F\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u0441\u043A\u043E\u0433\u043E \u0442\u0440\u0430\u043D\u0441\u043F\u043E\u0440\u0442\u0430. \u0412\u044B\u0434\u0435\u043B\u044F\u044E\u0442 \u0435\u0435 \u0441\u043F\u0435\u0446\u0438\u0430\u043B\u044C\u043D\u043E, \u0447\u0442\u043E\u0431\u044B \u0433\u043E\u0440\u043E\u0436\u0430\u043D\u0435 \u0431\u0435\u0437 \u043C\u0430\u0448\u0438\u043D \u0431\u044B\u0441\u0442\u0440\u0435\u0435 \u0434\u043E\u0431\u0438\u0440\u0430\u043B\u0438\u0441\u044C \u043D\u0430 \u0440\u0430\u0431\u043E\u0442\u0443 \u0438 \u043E\u0431\u0440\u0430\u0442\u043D\u043E \u0434\u043E\u043C\u043E\u0439 \u0432 \u0447\u0430\u0441 \u043F\u0438\u043A. \u0411\u043B\u0430\u0433\u043E\u0434\u0430\u0440\u044F \u0432\u044B\u0434\u0435\u043B\u0435\u043D\u043D\u044B\u043C \u043F\u043E\u043B\u043E\u0441\u0430\u043C \u043E\u0431\u0449\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u044B\u0439 \u0442\u0440\u0430\u043D\u0441\u043F\u043E\u0440\u0442 \u043D\u0435 \u0441\u0442\u043E\u0438\u0442 \u0432 \u0434\u043E\u0440\u043E\u0436\u043D\u043E\u0439 \u043F\u0440\u043E\u0431\u043A\u0435 \u0438 \u0443\u0434\u043E\u0431\u0435\u043D \u0434\u043B\u044F \u043F\u0430\u0441\u0441\u0430\u0436\u0438\u0440\u043E\u0432. \u0415\u0441\u043B\u0438 \u0432\u043E\u0434\u0438\u0442\u0435\u043B\u044C \u043E\u0431\u044B\u0447\u043D\u043E\u0439 \u043B\u0435\u0433\u043A\u043E\u0432\u0443\u0448\u043A\u0438 \u043E\u0431\u044A\u0435\u0434\u0435\u0442 \u043F\u043E \u043D\u0435\u0439 \u043F\u0440\u043E\u0431\u043A\u0443, \u043E\u043D \u043F\u043E\u043B\u0443\u0447\u0438\u0442 \u0448\u0442\u0440\u0430\u0444 \u0437\u0430 \u0432\u044B\u0434\u0435\u043B\u0435\u043D\u043D\u0443\u044E \u043F\u043E\u043B\u043E\u0441\u0443 \u0434\u043B\u044F \u043E\u0431\u0449\u0435\u0441\u0442\u0432\u0435\u043D\u043D\u043E\u0433\u043E \u0442\u0440\u0430\u043D\u0441\u043F\u043E\u0440\u0442\u0430</p><h2 id="\u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0435-\u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044F-\u043F\u043E\u043B\u043E\u0441\u044B" tabindex="-1"><a class="header-anchor" href="#\u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0435-\u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044F-\u043F\u043E\u043B\u043E\u0441\u044B" aria-hidden="true">#</a> \u0421\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u0435 \u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044F \u043F\u043E\u043B\u043E\u0441\u044B</h2><p>\u041D\u0430 \u0434\u0430\u043D\u043D\u044B\u0439 \u043C\u043E\u043C\u0435\u043D\u0442, \u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044C \u0441\u043E\u0431\u043B\u044E\u0434\u0435\u043D\u0438\u044F \u043F\u043E\u043B\u043E\u0441\u044B \u043F\u0440\u043E\u0438\u0441\u0445\u043E\u0434\u0438\u0442 \u0441 \u0441\u0442\u0430\u0446\u0438\u043E\u043D\u0430\u0440\u043D\u044B\u0445 \u043A\u0430\u043C\u0435\u0440 \u0434\u043E\u0440\u043E\u0436\u043D\u043E\u0433\u043E \u0434\u0432\u0438\u0436\u0435\u043D\u0438\u044F. \u041E\u0434\u043D\u0430\u043A\u043E, \u043D\u0435 \u043D\u0430 \u0432\u0441\u0435\u0445 \u0443\u0447\u0430\u0441\u0442\u043A\u0430\u0445 \u0434\u043E\u0440\u043E\u0433 \u043C\u043E\u0436\u043D\u043E \u0440\u0430\u0441\u043F\u043E\u043B\u043E\u0436\u0438\u0442\u044C \u043F\u043E\u0434\u043E\u0431\u043D\u043E\u0433\u043E \u0432\u0438\u0434\u0430 \u043A\u0430\u043C\u0435\u0440\u044B \u0438\u043B\u0438 \u043A\u0430\u043C\u0435\u0440\u044B \u043C\u043E\u0433\u0443\u0442 \u043D\u0435 \u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u0438\u043B\u0438 \u0432\u043E\u043E\u0431\u0449\u0435 \u043D\u0435 \u0432\u044B\u0434\u0435\u043B\u044F\u0442\u044C \u0430\u0432\u0442\u043E\u0431\u0443\u0441\u043D\u0443\u044E \u043F\u043E\u043B\u043E\u0441\u0443. \u041F\u043E\u044D\u0442\u043E\u043C\u0443 \u0431\u044B\u043B\u043E \u0441\u043E\u0437\u0434\u0430\u043D\u043E \u0440\u0435\u0448\u0435\u043D\u0438\u044F \u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044F \u043F\u043E\u043B\u043E\u0441\u044B \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E \u0431\u0435\u0441\u043F\u0438\u043B\u043E\u0442\u043D\u0438\u043A\u0430.</p><h2 id="\u043E\u0431\u044A\u044F\u0441\u043D\u0435\u043D\u0438\u0435-\u043A\u043E\u0434\u0430-\u043D\u0430\u043F\u0438\u0441\u0430\u043D\u0438\u0435" tabindex="-1"><a class="header-anchor" href="#\u043E\u0431\u044A\u044F\u0441\u043D\u0435\u043D\u0438\u0435-\u043A\u043E\u0434\u0430-\u043D\u0430\u043F\u0438\u0441\u0430\u043D\u0438\u0435" aria-hidden="true">#</a> \u041E\u0431\u044A\u044F\u0441\u043D\u0435\u043D\u0438\u0435 \u043A\u043E\u0434\u0430. \u041D\u0430\u043F\u0438\u0441\u0430\u043D\u0438\u0435</h2><p>\u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0430\u0435\u043C \u0431\u0438\u0431\u043B\u0438\u043E\u0442\u0435\u043A\u0438:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> rospy
<span class="token keyword">import</span> cv2 <span class="token comment">#OpenCV</span>
<span class="token keyword">from</span> sensor_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> Image
<span class="token keyword">from</span> cv_bridge <span class="token keyword">import</span> CvBridge
<span class="token keyword">from</span> std_srvs<span class="token punctuation">.</span>srv <span class="token keyword">import</span> Trigger
<span class="token keyword">from</span> pyzbar <span class="token keyword">import</span> pyzbar
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
</code></pre></div><p>\u0421\u043E\u0437\u0434\u0430\u0451\u043C \u043D\u0435\u043A\u043E\u0442\u043E\u0440\u044B\u0435 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435:</p><div class="language-python ext-py"><pre class="language-python"><code>rospy<span class="token punctuation">.</span>init_node<span class="token punctuation">(</span><span class="token string">&#39;flight&#39;</span><span class="token punctuation">)</span>
bridge <span class="token operator">=</span> CvBridge<span class="token punctuation">(</span><span class="token punctuation">)</span>
dict_flag <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
detect_flag <span class="token operator">=</span> <span class="token boolean">True</span>
i <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>
</code></pre></div><p>\u0414\u043B\u044F \u0440\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0438 \u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044F \u043F\u043E\u043B\u043E\u0441\u044B \u0438 \u043D\u0430\u0445\u043E\u0436\u0434\u0435\u043D\u0438\u044F \u043C\u0430\u0448\u0438\u043D, \u0430\u0432\u0442\u043E\u0431\u0443\u0441\u043E\u0432, \u043D\u0430\u043C \u043F\u043E\u043D\u0430\u0434\u043E\u0431\u0438\u0442\u0441\u044F \u0431\u0438\u0431\u043B\u0438\u043E\u0442\u0435\u043A\u0430 OpenCV. \u0421\u043E\u0437\u0434\u0430\u0451\u043C \u0441\u043A\u0440\u0438\u043D\u0448\u043E\u0442 \u0441 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435\u043C \u0441 \u043E\u0441\u043D\u043E\u0432\u043D\u043E\u0439 \u043A\u0430\u043C\u0435\u0440\u044B \u0434\u043B\u044F \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0438 \u0441 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435\u043C OpenCV:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">lane_control</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> dict_flag<span class="token punctuation">,</span> i<span class="token punctuation">,</span> detect_flag<span class="token punctuation">,</span> detected_blue_bus
    cv_image <span class="token operator">=</span> bridge<span class="token punctuation">.</span>imgmsg_to_cv2<span class="token punctuation">(</span>rospy<span class="token punctuation">.</span>wait_for_message<span class="token punctuation">(</span><span class="token string">&#39;main_camera/image_raw&#39;</span><span class="token punctuation">,</span> Image<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;bgr8&#39;</span><span class="token punctuation">)</span>
    filtered_image <span class="token operator">=</span> cv2<span class="token punctuation">.</span>cvtColor<span class="token punctuation">(</span>cv_image<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>COLOR_HSV2BGR<span class="token punctuation">)</span>
</code></pre></div><p>\u041D\u0430 \u0434\u0430\u043D\u043D\u044B\u0439 \u043C\u043E\u043C\u0435\u043D\u0442, \u0430\u0432\u0442\u043E\u0431\u0443\u0441\u044B \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u044F\u0442\u0441\u044F \u0432 \u0441\u0438\u043D\u0435\u043C \u0446\u0432\u0435\u0442\u0435. \u041F\u043E\u044D\u0442\u043E\u043C\u0443, \u0430\u0432\u0442\u043E\u0431\u0443\u0441 \u0443 \u043D\u0430\u0441 \u0431\u0443\u0434\u0435\u0442 \u0441\u0438\u043D\u0435\u0433\u043E \u0446\u0432\u0435\u0442\u0430.</p><img src="`+k+`" width="75%"><p>\u041F\u0440\u043E\u043F\u0438\u0441\u044B\u0432\u0430\u0435\u043C \u0434\u0438\u0430\u043F\u0430\u0437\u043E\u043D\u044B \u0446\u0432\u0435\u0442\u043E\u0432 \u0434\u043B\u044F \u0430\u0432\u0442\u043E\u0431\u0443\u0441\u0430 \u0438 \u043C\u0430\u0448\u0438\u043D\u044B:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token comment"># \u0410\u0432\u0442\u043E\u0431\u0443\u0441</span>
lower_blue <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
upper_blue <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">119</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># \u0414\u0440\u0443\u0433\u0438\u0435 \u043C\u0430\u0448\u0438\u043D\u044B, \u0434\u043E\u043F\u0443\u0441\u0442\u0438\u043C, \u0446\u0432\u0435\u0442 red</span>
lower_red <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">160</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
upper_red <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre></div><p>\u0414\u0430\u043D\u043D\u044B\u0439 \u0441\u043A\u0440\u0438\u043F\u0442 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0431\u043E\u043B\u044C\u0448\u0438\u0445 \u0432\u044B\u0447\u0438\u0441\u043B\u0438\u0442\u0435\u043B\u044C\u043D\u044B\u0445 \u043C\u043E\u0449\u043D\u043E\u0441\u0442\u0435\u0439 Raspberry Pi. \u0414\u043B\u044F \u043E\u0433\u0440\u0430\u043D\u0438\u0447\u0435\u043D\u0438\u044F \u0440\u0430\u0431\u043E\u0442\u044B \u0441\u043A\u0440\u0438\u043F\u0442\u0430, \u043C\u044B \u0437\u0430\u043C\u0435\u0434\u043B\u044F\u0435\u043C \u0440\u0430\u0431\u043E\u0442\u0443 \u043A\u0430\u043C\u0435\u0440\u044B \u0434\u043E \u0447\u0430\u0441\u0442\u043E\u0442\u044B 10 \u0413\u0446 (<code>main_camera.launch</code>):</p><div class="language-xml ext-xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>node</span> <span class="token attr-name">pkg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>topic_tools<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>cam_throttle<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>throttle<span class="token punctuation">&quot;</span></span> <span class="token attr-name">args</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>messages main_camera/image_raw 10.0 main_camera/image_raw_throttled<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre></div><p>\u0422\u043E\u043F\u0438\u043A \u0434\u043B\u044F \u043A\u0430\u043C\u0435\u0440\u044B \u0432 \u044D\u0442\u043E\u043C \u0441\u043B\u0443\u0447\u0430\u0435 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u043F\u043E\u043C\u0435\u043D\u044F\u0442\u044C \u043D\u0430 <code>main_camera/image_raw_throttled</code> c <code>main_camera/image_raw</code>.</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token comment"># car</span>
frame <span class="token operator">=</span> cv2<span class="token punctuation">.</span>inRange<span class="token punctuation">(</span>filtered_image<span class="token punctuation">,</span> lower_red<span class="token punctuation">,</span> upper_red<span class="token punctuation">)</span>
cnt <span class="token operator">=</span> cv2<span class="token punctuation">.</span>findContours<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>RETR_EXTERNAL<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>CHAIN_APPROX_SIMPLE<span class="token punctuation">)</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> c <span class="token keyword">in</span> cnt<span class="token punctuation">:</span>
         moments <span class="token operator">=</span> cv2<span class="token punctuation">.</span>moments<span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
         sum_pixel <span class="token operator">=</span> moments<span class="token punctuation">[</span><span class="token string">&#39;m01&#39;</span><span class="token punctuation">]</span>
         
         <span class="token keyword">if</span> sum_pixel <span class="token operator">&gt;=</span> <span class="token number">100000</span><span class="token punctuation">:</span>
             dict_flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>sum_pixel<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>moments<span class="token punctuation">[</span><span class="token string">&#39;m10&#39;</span><span class="token punctuation">]</span> <span class="token operator">/</span> sum_pixel<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>moments<span class="token punctuation">[</span><span class="token string">&#39;m01&#39;</span><span class="token punctuation">]</span> <span class="token operator">/</span> sum_pixel<span class="token punctuation">)</span><span class="token punctuation">]</span>
             detected_red_car <span class="token operator">=</span> <span class="token boolean">True</span>
             cv2<span class="token punctuation">.</span>drawContours<span class="token punctuation">(</span>image_src<span class="token punctuation">,</span> <span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
<span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>

<span class="token comment"># bus</span>
frame <span class="token operator">=</span> cv2<span class="token punctuation">.</span>inRange<span class="token punctuation">(</span>filtered_image<span class="token punctuation">,</span> lower_blue<span class="token punctuation">,</span> upper_blue<span class="token punctuation">)</span>
cnt <span class="token operator">=</span> cv2<span class="token punctuation">.</span>findContours<span class="token punctuation">(</span>frame<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>RETR_EXTERNAL<span class="token punctuation">,</span> cv2<span class="token punctuation">.</span>CHAIN_APPROX_SIMPLE<span class="token punctuation">)</span>
<span class="token keyword">try</span><span class="token punctuation">:</span>
    <span class="token keyword">for</span> c <span class="token keyword">in</span> cnt<span class="token punctuation">:</span>
         moments <span class="token operator">=</span> cv2<span class="token punctuation">.</span>moments<span class="token punctuation">(</span>c<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span>
         sum_pixel <span class="token operator">=</span> moments<span class="token punctuation">[</span><span class="token string">&#39;m01&#39;</span><span class="token punctuation">]</span>
         
         <span class="token keyword">if</span> sum_pixel <span class="token operator">&gt;=</span> <span class="token number">100000</span><span class="token punctuation">:</span>
             dict_flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>sum_pixel<span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>moments<span class="token punctuation">[</span><span class="token string">&#39;m10&#39;</span><span class="token punctuation">]</span> <span class="token operator">/</span> sum_pixel<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">int</span><span class="token punctuation">(</span>moments<span class="token punctuation">[</span><span class="token string">&#39;m01&#39;</span><span class="token punctuation">]</span> <span class="token operator">/</span> sum_pixel<span class="token punctuation">)</span><span class="token punctuation">]</span>
             detected_blue_bus <span class="token operator">=</span> <span class="token boolean">True</span>
             cv2<span class="token punctuation">.</span>drawContours<span class="token punctuation">(</span>image_src<span class="token punctuation">,</span> <span class="token punctuation">[</span>c<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">except</span><span class="token punctuation">:</span>
    <span class="token keyword">pass</span>

<span class="token keyword">if</span> detected_red_car <span class="token operator">==</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[DEBUG] detected car&quot;</span><span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[DEBUG] No cars&quot;</span><span class="token punctuation">)</span>
</code></pre></div><p>\u0414\u0430\u043D\u043D\u0430\u044F \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u0430 \u0431\u0443\u0434\u0435\u0442 \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u044F\u0442\u044C \u043C\u0430\u0448\u0438\u043D\u044B \u043F\u043E \u0435\u0451 \u043E\u0442\u0442\u0435\u043D\u043A\u0443. \u0412\u043E\u0442 \u0447\u0442\u043E \u0443 \u043D\u0430\u0441 \u0432 \u0438\u0442\u043E\u0433\u0435 \u043F\u043E\u043B\u0443\u0447\u0438\u043B\u043E\u0441\u044C.</p><img src="`+r+`" width="75%"><p>\u0412\u043E\u0442 \u043F\u0440\u0438\u043C\u0435\u0440\u044B \u0434\u0440\u0443\u0433\u0438\u0445 \u0446\u0432\u0435\u0442\u043E\u0432\u044B\u0445 \u0434\u0438\u0430\u043F\u0430\u0437\u043E\u043D\u043E\u0432. \u0421\u0442\u043E\u0438\u0442 \u043F\u043E\u0434\u043C\u0435\u0442\u0438\u0442\u044C, \u0447\u0442\u043E \u0446\u0432\u0435\u0442\u043E\u0432\u044B\u0435 \u0434\u0438\u0430\u043F\u0430\u0437\u043E\u043D\u044B \u0432\u044B\u0447\u0438\u0441\u043B\u044F\u044E\u0442\u0441\u044F \u0432 HSV, \u0430 \u043D\u0435 \u0432 RGB:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token comment"># \u041A\u0440\u0430\u0441\u043D\u044B\u0439 \u0432 \u043E\u0434\u043D\u043E\u043C \u0434\u0438\u0430\u043F\u0430\u0437\u043E\u043D\u0435</span>
red_low1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
red_high1 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># \u041A\u0440\u0430\u0441\u043D\u044B\u0439 \u0432 \u0434\u0440\u0443\u0433\u043E\u043C</span>
red_low2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">165</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
red_high2 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">180</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># \u0413\u043E\u043B\u0443\u0431\u043E\u0439</span>
lower_blue <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">90</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
upper_blue <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">119</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment"># \u0416\u0435\u043B\u0442\u044B\u0439</span>
lower_yellow <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
upper_yellow <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">#...</span>
</code></pre></div><p>\u0418\u043D\u043E\u0433\u0434\u0430 \u043D\u0430\u0434\u043E \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C \u0434\u0432\u0430 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F HSV \u043A\u0440\u0430\u0441\u043D\u043E\u0433\u043E, \u0442. \u043A. \u043E\u043D\u0438 \u043F\u043E\u043F\u0430\u0434\u0430\u044E\u0442 \u043F\u043E\u0434 \u043D\u0430\u0447\u0430\u043B\u043E \u0438 \u043A\u043E\u043D\u0435\u0446 \u0434\u0438\u0430\u043F\u0430\u0437\u043E\u043D\u0430 HSV.</p><p>\u0414\u0430\u043D\u043D\u0430\u044F \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u0430 \u0431\u0443\u0434\u0435\u0442 \u0442\u043E\u043B\u044C\u043A\u043E \u043E\u0431\u043D\u0430\u0440\u0443\u0436\u0438\u0432\u0430\u0442\u044C, \u0432\u044B\u0434\u0430\u0432\u0430\u0442\u044C \u043E\u0442\u0447\u0435\u0442 \u043E\u0431 \u043E\u0431\u044A\u0435\u043A\u0442\u0435, \u0440\u0438\u0441\u043E\u0432\u0430\u0442\u044C \u043A\u043E\u043D\u0442\u0443\u0440\u044B \u043E\u0431\u044A\u0435\u043A\u0442\u043E\u0432. \u0415\u0441\u043B\u0438 \u0436\u0435 \u043C\u044B \u0437\u0430\u0445\u043E\u0442\u0438\u043C, \u0447\u0442\u043E\u0431\u044B \u0432\u044B\u0432\u043E\u0434\u0438\u0442\u044C \u043D\u0430 LED-\u043B\u0435\u043D\u0442\u0443 \u043D\u0430\u0440\u0443\u0448\u0438\u043B\u043E \u043B\u0438 \u041F\u0414\u0414 \u0434\u0430\u043D\u043D\u044B\u0439 \u043E\u0431\u044A\u0435\u043A\u0442, \u0442\u043E \u043C\u043E\u0436\u043D\u043E \u0434\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435 \u0438 \u0434\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0444\u0443\u043D\u043A\u0446\u0438\u044E:</p><div class="language-python ext-py"><pre class="language-python"><code>Led <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token string">&quot;red&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">255</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&quot;blue&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">]</span> <span class="token punctuation">}</span>
count_led <span class="token operator">=</span> <span class="token number">72</span> <span class="token comment">#\u0415\u0441\u043B\u0438 \u0436\u0435 \u043D\u0430 \u0432\u0430\u0448\u0435\u0439 LED-\u043B\u0435\u043D\u0442\u0435 72 \u0441\u0432\u0435\u0442\u043E\u0434\u0438\u043E\u0434\u0430, \u0435\u0441\u043B\u0438 58 - \u0441\u0442\u0430\u0432\u044C\u0442\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0435 58</span>
Led_full <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span>count_led
<span class="token keyword">def</span> <span class="token function">led_print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> count_led<span class="token punctuation">,</span> Led_full
    set_effect<span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> g<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
    rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span>
    a <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>count_led<span class="token punctuation">)</span><span class="token punctuation">:</span>
        a<span class="token punctuation">.</span>append<span class="token punctuation">(</span>LEDState<span class="token punctuation">(</span>i<span class="token punctuation">,</span> Led<span class="token punctuation">[</span>Led_full<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> Led<span class="token punctuation">[</span>Led_full<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> Led<span class="token punctuation">[</span>Led_full<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    set_leds<span class="token punctuation">(</span>a<span class="token punctuation">)</span>
</code></pre></div><p>\u0414\u043E\u043F\u043E\u043B\u043D\u0438\u043C \u0444\u0443\u043D\u043A\u0446\u0438\u044E <code>lane_control</code>:</p><div class="language-python ext-py"><pre class="language-python"><code>S <span class="token operator">=</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span> dict_flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span> <span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>dict_flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
j<span class="token punctuation">,</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>dict_flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>dict_flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">/</span>S <span class="token operator">*</span> count_led<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    Led_full<span class="token punctuation">[</span>k<span class="token operator">+</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;red&quot;</span><span class="token punctuation">,</span> dict_flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dict_flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
j<span class="token operator">+=</span>k
k <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> k <span class="token punctuation">)</span>
<span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>dict_flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">/</span>S <span class="token operator">*</span> count_led<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    Led_full<span class="token punctuation">[</span>k<span class="token operator">+</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;blue&quot;</span><span class="token punctuation">,</span> dict_flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dict_flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
j<span class="token operator">+=</span>k
k <span class="token operator">=</span> <span class="token number">0</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>j<span class="token punctuation">,</span> k<span class="token punctuation">)</span>

<span class="token keyword">if</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>Led_full<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> Led_full<span class="token punctuation">[</span>count_led<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token number">50</span><span class="token punctuation">:</span>
    Led_full<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> Led_full<span class="token punctuation">:</span> Led_full<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># \u0441\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u043A\u0430 \u043F\u043E x    </span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    Led_full<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>key<span class="token operator">=</span><span class="token keyword">lambda</span> Led_full<span class="token punctuation">:</span> Led_full<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment"># \u0441\u043E\u0440\u0442\u0438\u0440\u043E\u0432\u043A\u0430 \u043F\u043E y</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>Led_full<span class="token punctuation">)</span>
</code></pre></div><p>\u041F\u043E\u0441\u043B\u0435 \u044D\u0442\u043E\u0433\u043E \u043D\u0430\u0448\u0430 \u0441\u0432\u0435\u0442\u043E\u0434\u0438\u043E\u0434\u043D\u0430\u044F \u043B\u0435\u043D\u0442\u0430 \u0431\u0443\u0434\u0435\u0442 \u043E\u0431\u043E\u0437\u043D\u0430\u0447\u0430\u0442\u044C \u043D\u0430\u0440\u0443\u0448\u0438\u043B \u043B\u0438 \u0434\u0430\u043D\u043D\u044B\u0439 \u043E\u0431\u044A\u0435\u043A\u0442 \u041F\u0414\u0414 \u0438\u043B\u0438 \u043D\u0435\u0442.</p><p>\u041D\u043E \u0434\u0430\u0436\u0435 \u043F\u043E\u0441\u043B\u0435 \u0442\u0430\u043A\u043E\u0433\u043E \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u043A\u043E\u0434\u0430, \u043D\u0430\u0448 \u0434\u0440\u043E\u043D \u043D\u0435 \u0431\u0443\u0434\u0435\u0442 \u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u044C \u0437\u0430 \u043D\u0430\u0440\u0443\u0448\u0438\u0442\u0435\u043B\u0435\u043C. \u0414\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u0434\u0435\u043B\u0430\u0435\u043C \u0442\u0430\u043A, \u0447\u0442\u043E\u0431\u044B \u0434\u0440\u043E\u043D \u043C\u043E\u0433 \u043F\u0440\u0435\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u0442\u044C \u043D\u0430\u0440\u0443\u0448\u0438\u0442\u0435\u043B\u044F \u043F\u043E\u0441\u0442\u043E\u044F\u043D\u043D\u043E, \u0447\u0442\u043E\u0431\u044B \u043E\u043D \u043D\u0435 \u043C\u043E\u0433 \u0441\u043A\u0440\u044B\u0442\u044C\u0441\u044F \u0441 \u043C\u0435\u0441\u0442\u0430 \u043D\u0430\u0440\u0443\u0448\u0435\u043D\u0438\u044F. \u0421\u043E\u0437\u0434\u0430\u0434\u0438\u043C \u0431\u0430\u0437\u043E\u0432\u044B\u0435 \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u044F</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token comment"># \u0411\u0438\u0431\u043B\u0438\u043E\u0442\u0435\u043A\u0438</span>
<span class="token keyword">import</span> tf
<span class="token keyword">import</span> tf2_ros
<span class="token keyword">import</span> geometry_msgs<span class="token punctuation">.</span>msg
<span class="token keyword">import</span> tf2_geometry_msgs
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">from</span> geometry_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> Vector3Stamped<span class="token punctuation">,</span> Point<span class="token punctuation">,</span> PointStamped

ar <span class="token operator">=</span> <span class="token string">&quot;aruco_13&quot;</span> <span class="token comment"># ID \u043D\u0430\u0440\u0443\u0448\u0438\u0442\u0435\u043B\u044F</span>
tfBuffer <span class="token operator">=</span> tf2_ros<span class="token punctuation">.</span>Buffer<span class="token punctuation">(</span><span class="token punctuation">)</span>
listener <span class="token operator">=</span> tf2_ros<span class="token punctuation">.</span>TransformListener<span class="token punctuation">(</span>tfBuffer<span class="token punctuation">)</span>

l_z <span class="token operator">=</span> <span class="token number">2</span> <span class="token comment"># \u0414\u043B\u044F \u0431\u0443\u0434\u0443\u0449\u0435\u0433\u043E \u043A\u043E\u0434\u0430 \u0434\u0430\u043B\u044C\u043D\u043E\u043C\u0435\u0440\u0430</span>

<span class="token keyword">def</span> <span class="token function">range_callback</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">global</span> l_z
    l_z <span class="token operator">=</span> msg<span class="token punctuation">.</span><span class="token builtin">range</span> <span class="token comment"># \u0412\u044B\u0432\u043E\u0434 Z \u043F\u043E \u0434\u0430\u043B\u044C\u043D\u043E\u043C\u0435\u0440\u0443</span>

rospy<span class="token punctuation">.</span>Subscriber<span class="token punctuation">(</span><span class="token string">&#39;rangefinder/range&#39;</span><span class="token punctuation">,</span> Range<span class="token punctuation">,</span> range_callback<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">get_aruco_pose</span><span class="token punctuation">(</span>frame_id<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># \u0412\u043E\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043A\u043E\u043E\u0440\u0434\u0438\u043D\u0430\u0442\u044B, \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E \u043F\u0440\u0435\u043E\u0431\u0440\u0430\u0437\u043E\u0432\u0430\u043D\u0438\u0435 \u043D\u043E\u0432\u043E\u0433\u043E \u043A\u0430\u0434\u0440\u0430</span>
    <span class="token keyword">global</span> tfBuffer<span class="token punctuation">,</span> listener
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        trans <span class="token operator">=</span> tfBuffer<span class="token punctuation">.</span>lookup_transform<span class="token punctuation">(</span>frame_id<span class="token punctuation">,</span> ar<span class="token punctuation">,</span> rospy<span class="token punctuation">.</span>Time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>
    pnt_l0 <span class="token operator">=</span> tf2_geometry_msgs<span class="token punctuation">.</span>do_transform_point<span class="token punctuation">(</span>PointStamped<span class="token punctuation">(</span>point<span class="token operator">=</span>Point<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> trans<span class="token punctuation">)</span>
    l0 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>pnt_l0<span class="token punctuation">.</span>point<span class="token punctuation">.</span>x<span class="token punctuation">,</span> pnt_l0<span class="token punctuation">.</span>point<span class="token punctuation">.</span>y<span class="token punctuation">,</span> pnt_l0<span class="token punctuation">.</span>point<span class="token punctuation">.</span>z<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> l0

<span class="token keyword">def</span> <span class="token function">get_body_pose</span><span class="token punctuation">(</span>frame_id<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># \u0412\u043E\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043A\u043E\u043E\u0440\u0434\u0438\u043D\u0430\u0442\u044B, \u0441 \u043F\u043E\u043C\u043E\u0449\u044C\u044E \u043F\u0440\u0435\u043E\u0431\u0440\u0430\u0437\u043E\u0432\u0430\u043D\u0438\u0435 \u043D\u043E\u0432\u043E\u0433\u043E \u043A\u0430\u0434\u0440\u0430 </span>
    <span class="token keyword">global</span> tfBuffer<span class="token punctuation">,</span> listener
    <span class="token keyword">try</span><span class="token punctuation">:</span>
        trans <span class="token operator">=</span> tfBuffer<span class="token punctuation">.</span>lookup_transform<span class="token punctuation">(</span>frame_id<span class="token punctuation">,</span> <span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> rospy<span class="token punctuation">.</span>Time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">except</span><span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">None</span>
    pnt_l0 <span class="token operator">=</span> tf2_geometry_msgs<span class="token punctuation">.</span>do_transform_point<span class="token punctuation">(</span>PointStamped<span class="token punctuation">(</span>point<span class="token operator">=</span>Point<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> trans<span class="token punctuation">)</span>
    l0 <span class="token operator">=</span> np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span>pnt_l0<span class="token punctuation">.</span>point<span class="token punctuation">.</span>x<span class="token punctuation">,</span> pnt_l0<span class="token punctuation">.</span>point<span class="token punctuation">.</span>y<span class="token punctuation">,</span> pnt_l0<span class="token punctuation">.</span>point<span class="token punctuation">.</span>z<span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> l0

<span class="token keyword">def</span> <span class="token function">remove_0_vel</span><span class="token punctuation">(</span>vel<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># \u0421\u043A\u043E\u0440\u043E\u0441\u0442\u0438 \u043F\u043E\u043B\u0435\u0442\u0430 \u0432 POSITION</span>
    <span class="token keyword">if</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>vel<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.045</span><span class="token punctuation">:</span>
        vel<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
        vel<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">return</span> vel
</code></pre></div><p>\u0421\u043E\u0437\u0434\u0430\u0434\u0438\u043C \u0444\u0443\u043D\u043A\u0446\u0438\u044E, \u043A\u043E\u0442\u043E\u0440\u0430\u044F \u0431\u0443\u0434\u0435\u0442 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0438\u0442\u044C \u0432\u0435\u0441\u044C \u044D\u0442\u043E\u0442 \u043F\u043E\u043B\u0435\u0442. \u0414\u043B\u044F \u043D\u0430\u0447\u0430\u043B\u0430 \u0441\u0434\u0435\u043B\u0430\u0435\u043C \u0442\u0430\u043A, \u0447\u0442\u043E\u0431\u044B \u0434\u0440\u043E\u043D \u043D\u0430\u0445\u043E\u0434\u0438\u043B \u043D\u0430\u0440\u0443\u0448\u0438\u0442\u0435\u043B\u044F.</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">follow_violator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    z <span class="token operator">=</span> <span class="token number">1.5</span>

    navigate_wait<span class="token punctuation">(</span>z<span class="token operator">=</span><span class="token number">1.5</span><span class="token punctuation">,</span> speed<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> frame_id<span class="token operator">=</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">,</span> auto_arm <span class="token operator">=</span> <span class="token boolean">True</span><span class="token punctuation">)</span>
    rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
    set_effect<span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">,</span> g<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;[DEBUG] started navigation&quot;</span><span class="token punctuation">)</span>
    navigate_wait<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> z<span class="token operator">=</span>z<span class="token punctuation">,</span> speed<span class="token operator">=</span><span class="token number">0.8</span><span class="token punctuation">,</span> frame_id<span class="token operator">=</span>ar<span class="token punctuation">,</span> yaw<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">&#39;nan&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> tolerance<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span>
</code></pre></div><p>\u0412 \u0438\u0442\u043E\u0433\u0435, \u043C\u044B \u043D\u0430\u043F\u0438\u0441\u0430\u043B\u0438 \u043A\u043E\u0434, \u043D\u043E \u0434\u0430\u0432\u0430\u0439\u0442\u0435 \u0441\u0434\u0435\u043B\u0430\u0435\u043C \u0442\u0430\u043A, \u0447\u0442\u043E\u0431\u044B \u043E\u043D \u043F\u043E\u0441\u0442\u043E\u044F\u043D\u043D\u043E \u0434\u0432\u0438\u0433\u0430\u043B\u0441\u044F \u0437\u0430 \u043D\u0438\u043C \u0438 \u0443\u043B\u0443\u0447\u0448\u0430\u043B \u0435\u0433\u043E \u043F\u043E\u0437\u0438\u0446\u0438\u043E\u043D\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435.</p><div class="language-python ext-py"><pre class="language-python"><code>    FRQ <span class="token operator">=</span> <span class="token number">5</span>
    r <span class="token operator">=</span> rospy<span class="token punctuation">.</span>Rate<span class="token punctuation">(</span>FRQ<span class="token punctuation">)</span>
    prev_vel <span class="token operator">=</span> <span class="token boolean">None</span>
    prev_pa <span class="token operator">=</span> <span class="token boolean">None</span>
    prev_t <span class="token operator">=</span> rospy<span class="token punctuation">.</span>get_time<span class="token punctuation">(</span><span class="token punctuation">)</span>
    st_t <span class="token operator">=</span> rospy<span class="token punctuation">.</span>get_time<span class="token punctuation">(</span><span class="token punctuation">)</span>
    d <span class="token operator">=</span> <span class="token number">10</span>
    <span class="token comment"># \u0412\u044B\u0447\u0438\u0441\u043B\u044F\u0435\u0442 \u043D\u0430 \u0441\u043A\u043E\u043B\u044C\u043A\u043E \u043D\u0430\u0434\u043E \u043F\u0435\u0440\u0435\u043C\u0435\u0449\u0430\u0442\u044C\u0441\u044F, \u0437\u0430 \u0441\u0447\u0435\u0442 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u043A\u0430\u0434\u0440\u043E\u0432 (\u043F\u0440\u043E\u0448\u043B\u043E\u0433\u043E \u0438 \u043D\u044B\u043D\u0435\u0448\u043D\u0435\u0433\u043E)</span>
    <span class="token keyword">while</span> d <span class="token operator">&gt;</span> <span class="token number">1</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>rospy<span class="token punctuation">.</span>get_time<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> st_t <span class="token operator">&lt;</span> <span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">:</span> 
        pb <span class="token operator">=</span> get_body_pose<span class="token punctuation">(</span><span class="token string">&quot;aruco_map&quot;</span><span class="token punctuation">)</span>
        pa <span class="token operator">=</span> get_aruco_pose<span class="token punctuation">(</span><span class="token string">&quot;aruco_map&quot;</span><span class="token punctuation">)</span>
        now <span class="token operator">=</span> rospy<span class="token punctuation">.</span>get_time<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> prev_pa <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> pb <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                r<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">continue</span>
            navigate<span class="token punctuation">(</span>x<span class="token operator">=</span>pb<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token operator">=</span>pb<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> z<span class="token operator">=</span>z<span class="token punctuation">,</span> speed<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> frame_id<span class="token operator">=</span><span class="token string">&quot;aruco_map&quot;</span><span class="token punctuation">)</span> <span class="token comment"># \u0421\u043D\u0438\u0436\u0435\u043D\u0438\u0435 \u0432\u044B\u0441\u043E\u0442\u044B \u043A \u043F\u043E\u0434\u043B\u0435\u0442\u0443 \u043A \u043C\u0430\u0440\u043A\u0435\u0440\u0443</span>
            set_effect<span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token number">150</span><span class="token punctuation">,</span> g<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">,</span> effect<span class="token operator">=</span><span class="token string">&#39;blink&#39;</span><span class="token punctuation">)</span>
            prev_pa <span class="token operator">=</span> pa
            prev_t <span class="token operator">=</span> now
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> pb <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                d <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>pb<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>pa<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> pa <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                set_effect<span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token number">150</span><span class="token punctuation">,</span> g<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">)</span>
                vel <span class="token operator">=</span> <span class="token punctuation">(</span>pa<span class="token operator">-</span>prev_pa<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>now<span class="token operator">-</span>prev_t<span class="token operator">+</span><span class="token number">0.0001</span><span class="token punctuation">)</span>
                vel <span class="token operator">=</span> np<span class="token punctuation">.</span>clip<span class="token punctuation">(</span>vel<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.7</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">)</span>
                
                vel <span class="token operator">=</span> remove_0_vel<span class="token punctuation">(</span>vel<span class="token punctuation">)</span>
                <span class="token keyword">if</span> prev_vel <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                    vel <span class="token operator">=</span> vel<span class="token operator">*</span><span class="token number">0.1</span> <span class="token operator">+</span> prev_vel<span class="token operator">*</span><span class="token number">0.1</span>
                    
                t <span class="token operator">=</span> pa<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> vel<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token operator">/</span>FRQ<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2.7</span>
                set_position<span class="token punctuation">(</span>x<span class="token operator">=</span>t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token operator">=</span>t<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> z<span class="token operator">=</span>z<span class="token punctuation">,</span> frame_id<span class="token operator">=</span><span class="token string">&quot;aruco_map&quot;</span><span class="token punctuation">)</span>
                prev_pa <span class="token operator">=</span> pa<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
                prev_vel <span class="token operator">=</span> vel<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
                prev_t <span class="token operator">=</span> now
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                navigate<span class="token punctuation">(</span>x<span class="token operator">=</span>pb<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token operator">=</span>pb<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> z<span class="token operator">=</span>z<span class="token punctuation">,</span> frame_id<span class="token operator">=</span><span class="token string">&quot;aruco_map&quot;</span><span class="token punctuation">)</span>
                set_effect<span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token number">150</span><span class="token punctuation">,</span> g<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">,</span> effect<span class="token operator">=</span><span class="token string">&#39;blink_fast&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;NO pa and vel&quot;</span><span class="token punctuation">)</span>
                
        r<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token punctuation">)</span>

    set_effect<span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">,</span> g<span class="token operator">=</span><span class="token number">150</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
    z_st <span class="token operator">=</span> <span class="token number">1.5</span>

    st_t <span class="token operator">=</span> rospy<span class="token punctuation">.</span>get_time<span class="token punctuation">(</span><span class="token punctuation">)</span>
    z_vel <span class="token operator">=</span> <span class="token number">0.35</span>

    Z <span class="token operator">=</span> z_st
    r <span class="token operator">=</span> rospy<span class="token punctuation">.</span>Rate<span class="token punctuation">(</span><span class="token number">20</span><span class="token punctuation">)</span>
    <span class="token comment"># \u0412\u044B\u0447\u0438\u0441\u043B\u044F\u0435\u0442 \u043D\u0430 \u0441\u043A\u043E\u043B\u044C\u043A\u043E \u043D\u0430\u0434\u043E \u0438\u0437\u043C\u0435\u043D\u0438\u0442\u044C \u043A\u043E\u043E\u0440\u0434\u0438\u043D\u0430\u0442\u0443 Z, \u0437\u0430 \u0441\u0447\u0435\u0442 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u043A\u0430\u0434\u0440\u043E\u0432 (\u043F\u0440\u043E\u0448\u043B\u043E\u0433\u043E \u0438 \u043D\u044B\u043D\u0435\u0448\u043D\u0435\u0433\u043E) \u0438 \u0432\u0440\u0435\u043C\u0435\u043D\u0438 </span>
    <span class="token keyword">while</span> l_z <span class="token operator">&gt;</span> <span class="token number">0.09</span><span class="token punctuation">:</span>
        pb <span class="token operator">=</span> get_body_pose<span class="token punctuation">(</span><span class="token string">&quot;aruco_map&quot;</span><span class="token punctuation">)</span>
        pa <span class="token operator">=</span> get_aruco_pose<span class="token punctuation">(</span><span class="token string">&quot;aruco_map&quot;</span><span class="token punctuation">)</span>
        now <span class="token operator">=</span> rospy<span class="token punctuation">.</span>get_time<span class="token punctuation">(</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> prev_pa <span class="token keyword">is</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
            set_position<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token operator">-</span><span class="token number">0.01</span><span class="token punctuation">,</span> frame_id<span class="token operator">=</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">)</span>
            set_effect<span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">,</span> g<span class="token operator">=</span><span class="token number">150</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> effect<span class="token operator">=</span><span class="token string">&#39;blink_fast&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;NO prev_pa&quot;</span><span class="token punctuation">)</span>
            prev_pa <span class="token operator">=</span> pa
            prev_t <span class="token operator">=</span> now
        <span class="token keyword">else</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> pb <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                d <span class="token operator">=</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>pb<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>pa<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> pa <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                set_effect<span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">,</span> g<span class="token operator">=</span><span class="token number">150</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>pa <span class="token operator">-</span> prev_pa<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.0001</span> <span class="token keyword">and</span> prev_vel <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
                    vel <span class="token operator">=</span> prev_vel<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">0.97</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    vel <span class="token operator">=</span> <span class="token punctuation">(</span>pa<span class="token operator">-</span>prev_pa<span class="token punctuation">)</span><span class="token operator">/</span><span class="token punctuation">(</span>now<span class="token operator">-</span>prev_t<span class="token operator">+</span><span class="token number">0.0001</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> l_z <span class="token operator">&gt;</span> <span class="token number">0.5</span><span class="token punctuation">:</span>
                    vel <span class="token operator">=</span> np<span class="token punctuation">.</span>clip<span class="token punctuation">(</span>vel<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.7</span><span class="token punctuation">,</span> <span class="token number">0.7</span><span class="token punctuation">)</span>
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    vel <span class="token operator">=</span> np<span class="token punctuation">.</span>clip<span class="token punctuation">(</span>vel<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">0.5</span><span class="token punctuation">,</span> <span class="token number">0.5</span><span class="token punctuation">)</span>

                vel <span class="token operator">=</span> remove_0_vel<span class="token punctuation">(</span>vel<span class="token punctuation">)</span>
                <span class="token keyword">if</span> np<span class="token punctuation">.</span>linalg<span class="token punctuation">.</span>norm<span class="token punctuation">(</span>vel<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">0.02</span> <span class="token keyword">and</span> d <span class="token operator">&lt;=</span> <span class="token number">0.07</span><span class="token punctuation">:</span>
                    Z <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>rospy<span class="token punctuation">.</span>get_time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>st_t<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token punctuation">)</span> <span class="token operator">+</span> z_st
                <span class="token keyword">else</span><span class="token punctuation">:</span>
                    Z <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span>rospy<span class="token punctuation">.</span>get_time<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span>st_t<span class="token punctuation">)</span><span class="token operator">*</span>z_vel <span class="token operator">+</span> z_st
                    
                t <span class="token operator">=</span> pa<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> vel<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">0.1</span><span class="token operator">/</span>FRQ<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">2.2</span>
                set_position<span class="token punctuation">(</span>x<span class="token operator">=</span>t<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> y<span class="token operator">=</span>t<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> z<span class="token operator">=</span>Z<span class="token punctuation">,</span> frame_id<span class="token operator">=</span><span class="token string">&quot;aruco_map&quot;</span><span class="token punctuation">)</span>
                prev_pa <span class="token operator">=</span> pa<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;Z = &quot;</span><span class="token punctuation">,</span> Z<span class="token punctuation">)</span>
                prev_vel <span class="token operator">=</span> vel<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>
                prev_t <span class="token operator">=</span> now
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                set_position<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token operator">-</span><span class="token number">0.01</span><span class="token punctuation">,</span> frame_id<span class="token operator">=</span><span class="token string">&quot;body&quot;</span><span class="token punctuation">)</span>
                set_effect<span class="token punctuation">(</span>r<span class="token operator">=</span><span class="token number">255</span><span class="token punctuation">,</span> g<span class="token operator">=</span><span class="token number">150</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> effect<span class="token operator">=</span><span class="token string">&#39;blink_fast&#39;</span><span class="token punctuation">)</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">&quot;NO pa and vel&quot;</span><span class="token punctuation">)</span>
                
        r<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><p>\u0412\u044B\u0432\u043E\u0434: \u043C\u044B \u043D\u0430\u043F\u0438\u0441\u0430\u043B\u0438 \u0434\u043E\u0432\u043E\u043B\u044C\u043D\u043E \u043A\u043E\u0440\u043E\u0442\u043A\u0438\u0439, \u0434\u043B\u044F \u043F\u043E\u0441\u0442\u0430\u0432\u043B\u0435\u043D\u043D\u044B\u0445 \u043F\u0435\u0440\u0435\u0434 \u043D\u0438\u043C \u0437\u0430\u0434\u0430\u0447, \u043A\u043E\u0434. \u0414\u0430\u043D\u043D\u044B\u0439 \u043A\u043E\u0434 \u0444\u0438\u043A\u0441\u0438\u0440\u0443\u0435\u0442 \u043F\u0440\u0430\u0432\u043E\u043D\u0430\u0440\u0443\u0448\u0435\u043D\u0438\u0435, \u0440\u0435\u0433\u0443\u043B\u0438\u0440\u0443\u0435\u0442 \u0432\u0430\u0440\u0438\u0430\u0442\u0438\u0432\u043D\u043E\u0441\u0442\u044C \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u044F \u0442\u0440\u0430\u043D\u0441\u043F\u043E\u0440\u0442\u043D\u043E\u0433\u043E \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430 \u0438 \u0441\u043E\u0432\u0435\u0440\u0448\u0430\u0435\u0442 \u043F\u0440\u0435\u0441\u043B\u0435\u0434\u043E\u0432\u0430\u043D\u0438\u0435 \u043D\u0430\u0440\u0443\u0448\u0438\u0442\u0435\u043B\u044F</p>`,36);function h(q,x){const a=o("ExternalLinkIcon");return e(),c(u,null,[m,d,n("ul",null,[n("li",null,[n("a",b,[_,p(a)]),y,n("a",g,[f,p(a)]),w])]),v],64)}var z=t(i,[["render",h],["__file","lane_control.html.vue"]]);export{z as default};
