import{_ as u,r as c,o as l,c as i,a as s,b as a,w as p,F as r,d as n,e as o}from"./app.4f6a4bec.js";const k={},d=s("h1",{id:"\u0443\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u0435-\u043A\u043E\u043F\u0442\u0435\u0440\u043E\u043C-\u0441-arduino",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u0443\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u0435-\u043A\u043E\u043F\u0442\u0435\u0440\u043E\u043C-\u0441-arduino","aria-hidden":"true"},"#"),n(" \u0423\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u0435 \u043A\u043E\u043F\u0442\u0435\u0440\u043E\u043C \u0441 Arduino")],-1),m=n("\u0414\u043B\u044F \u0432\u0437\u0430\u0438\u043C\u043E\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F \u0441 ROS-\u0442\u043E\u043F\u0438\u043A\u0430\u043C\u0438 \u0438 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u043C\u0438 \u043D\u0430 Raspberry Pi \u043C\u043E\u0436\u043D\u043E \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C \u0431\u0438\u0431\u043B\u0438\u043E\u0442\u0435\u043A\u0443 "),_={href:"http://wiki.ros.org/rosserial_arduino",target:"_blank",rel:"noopener noreferrer"},h=n("rosserial_arduino"),g=n(". \u042D\u0442\u0430 \u0431\u0438\u0431\u043B\u0438\u043E\u0442\u0435\u043A\u0430 \u043F\u0440\u0435\u0434\u0443\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u0430 \u043D\u0430 "),v=n("\u043E\u0431\u0440\u0430\u0437\u0435 \u0434\u043B\u044F Raspberry Pi"),b=n("."),f=n("\u041E\u0441\u043D\u043E\u0432\u043D\u043E\u0439 \u0442\u0443\u0442\u043E\u0440\u0438\u0430\u043B \u043F\u043E rosserial: "),q={href:"http://wiki.ros.org/rosserial_arduino/Tutorials",target:"_blank",rel:"noopener noreferrer"},y=n("http://wiki.ros.org/rosserial_arduino/Tutorials"),x=s("p",null,"Arduino \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C \u043D\u0430 \u041A\u043B\u0435\u0432\u0435\u0440 \u0438 \u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u043F\u043E USB-\u043F\u043E\u0440\u0442\u0443.",-1),w=s("h2",{id:"\u043D\u0430\u0441\u0442\u0440\u043E\u0438\u043A\u0430-arduino-ide",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#\u043D\u0430\u0441\u0442\u0440\u043E\u0438\u043A\u0430-arduino-ide","aria-hidden":"true"},"#"),n(" \u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0430 Arduino IDE")],-1),R=n("\u0414\u043B\u044F \u0440\u0430\u0431\u043E\u0442\u044B \u0441 ROS Arduino \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u043F\u043E\u043D\u0438\u043C\u0430\u0442\u044C \u0444\u043E\u0440\u043C\u0430\u0442 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439 \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043D\u044B\u0445 \u043F\u0430\u043A\u0435\u0442\u043E\u0432. \u0414\u043B\u044F \u044D\u0442\u043E\u0433\u043E "),A=n("\u043D\u0430 Raspberry Pi"),S=n(" \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u0441\u043E\u0431\u0440\u0430\u0442\u044C \u0431\u0438\u0431\u043B\u0438\u043E\u0442\u0435\u043A\u0443 ROS-\u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439:"),N=o(`<div class="language-bash ext-sh"><pre class="language-bash"><code>rosrun rosserial_arduino make_libraries.py <span class="token builtin class-name">.</span>
</code></pre></div><p>\u041F\u043E\u043B\u0443\u0447\u0435\u043D\u043D\u044B\u0439 \u043A\u0430\u0442\u0430\u043B\u043E\u0433 <code>ros_lib</code> \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u0441\u043A\u043E\u043F\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u0432 <code>&lt;\u043F\u0430\u043F\u043A\u0443 \u0441\u043A\u0435\u0442\u0447\u0435\u0439&gt;/libraries</code> \u043D\u0430 \u043A\u043E\u043C\u043F\u044C\u044E\u0442\u0435\u0440\u0435 \u0441 Arduino IDE.</p><h2 id="\u043D\u0430\u0441\u0442\u0440\u043E\u0438\u043A\u0430-raspberry-pi" tabindex="-1"><a class="header-anchor" href="#\u043D\u0430\u0441\u0442\u0440\u043E\u0438\u043A\u0430-raspberry-pi" aria-hidden="true">#</a> \u041D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0430 Raspberry Pi</h2><p>\u0414\u043B\u044F \u0437\u0430\u043F\u0443\u0441\u043A\u0430 <code>rosserial</code> \u0441\u043E\u0437\u0434\u0430\u0439\u0442\u0435 \u0444\u0430\u0439\u043B <code>arduino.launch</code> \u0432 \u043A\u0430\u0442\u0430\u043B\u043E\u0433\u0435 <code>~/catkin_ws/src/clover/clover/launch/</code> \u0441\u043E \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u043C \u0441\u043E\u0434\u0435\u0440\u0436\u0438\u043C\u044B\u043C:</p><div class="language-xml ext-xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>launch</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>node</span> <span class="token attr-name">pkg</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>rosserial_python<span class="token punctuation">&quot;</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>serial_node.py<span class="token punctuation">&quot;</span></span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>serial_node<span class="token punctuation">&quot;</span></span> <span class="token attr-name">output</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>screen<span class="token punctuation">&quot;</span></span> <span class="token attr-name">if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$(arg arduino)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>param</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>port<span class="token punctuation">&quot;</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>/dev/serial/by-id/usb-1a86_USB2.0-Serial-if00-port0<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>node</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>launch</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u0427\u0442\u043E\u0431\u044B \u0435\u0434\u0438\u043D\u043E\u0440\u0430\u0437\u043E\u0432\u043E \u0437\u0430\u043F\u0443\u0441\u0442\u0438\u0442\u044C \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u0443 \u043D\u0430 Arduino, \u043C\u043E\u0436\u043D\u043E \u0431\u0443\u0434\u0435\u0442 \u0432\u043E\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C\u0441\u044F \u043A\u043E\u043C\u0430\u043D\u0434\u043E\u0439:</p><div class="language-bash ext-sh"><pre class="language-bash"><code>roslaunch clover arduino.launch
</code></pre></div><p>\u0427\u0442\u043E\u0431\u044B \u0437\u0430\u043F\u0443\u0441\u043A\u0430\u0442\u044C \u0441\u0432\u044F\u0437\u043A\u0443 \u0441 Arduino \u043F\u0440\u0438 \u0441\u0442\u0430\u0440\u0442\u0435 \u0441\u0438\u0441\u0442\u0435\u043C\u044B \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0447\u0435\u0441\u043A\u0438, \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u0434\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0437\u0430\u043F\u0443\u0441\u043A \u0441\u043E\u0437\u0434\u0430\u043D\u043D\u043E\u0433\u043E launch-\u0444\u0430\u0439\u043B\u0430 \u0432 \u043E\u0441\u043D\u043E\u0432\u043D\u043E\u0439 launch-\u0444\u0430\u0439\u043B \u041A\u043B\u0435\u0432\u0435\u0440\u0430 (<code>~/catkin_ws/src/clover/clover/launch/clover.launch</code>). \u0414\u043E\u0431\u0430\u0432\u044C\u0442\u0435 \u0432 \u043A\u043E\u043D\u0435\u0446 \u044D\u0442\u043E\u0433\u043E \u0444\u0430\u0439\u043B\u0430 \u0441\u0442\u0440\u043E\u043A\u0443:</p><div class="language-xml ext-xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span> <span class="token attr-name">file</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>$(find clover)/launch/arduino.launch<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre></div><p>\u041F\u0440\u0438 \u0438\u0437\u043C\u0435\u043D\u0435\u043D\u0438\u0438 launch-\u0444\u0430\u0439\u043B\u0430 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u043F\u0435\u0440\u0435\u0437\u0430\u043F\u0443\u0441\u0442\u0438\u0442\u044C \u043F\u0430\u043A\u0435\u0442 <code>clover</code>:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> systemctl restart clover
</code></pre></div><h2 id="\u0437\u0430\u0434\u0435\u0440\u0436\u043A\u0438" tabindex="-1"><a class="header-anchor" href="#\u0437\u0430\u0434\u0435\u0440\u0436\u043A\u0438" aria-hidden="true">#</a> \u0417\u0430\u0434\u0435\u0440\u0436\u043A\u0438</h2><p>\u041F\u0440\u0438 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0438 <code>rosserial_arduino</code> \u043C\u0438\u043A\u0440\u043E\u043A\u043E\u043D\u0442\u0440\u043E\u043B\u043B\u0435\u0440 Arduino \u043D\u0435 \u0434\u043E\u043B\u0436\u0435\u043D \u0431\u044B\u0442\u044C \u0437\u0430\u0431\u043B\u043E\u043A\u0438\u0440\u043E\u0432\u0430\u043D \u0431\u043E\u043B\u044C\u0448\u0435 \u0447\u0435\u043C \u043D\u0430 \u043D\u0435\u0441\u043A\u043E\u043B\u044C\u043A\u043E \u0441\u0435\u043A\u0443\u043D\u0434 (\u043D\u0430\u043F\u0440\u0438\u043C\u0435\u0440, \u0441 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435\u043C \u0444\u0443\u043D\u043A\u0446\u0438\u0438 <code>delay</code>); \u0438\u043D\u0430\u0447\u0435 \u0441\u0432\u044F\u0437\u044C \u043C\u0435\u0436\u0434\u0443 Raspberry Pi \u0438 Arduino \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0437\u043E\u0440\u0432\u0430\u043D\u0430.</p><p>\u041F\u0440\u0438 \u0440\u0435\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0438 \u0434\u043E\u043B\u0433\u0438\u0445 \u0446\u0438\u043A\u043B\u043E\u0432 <code>while</code> \u043E\u0431\u0435\u0441\u043F\u0435\u0447\u044C\u0442\u0435 \u043F\u0435\u0440\u0438\u043E\u0434\u0438\u0447\u0435\u0441\u043A\u0438\u0439 \u0432\u044B\u0437\u043E\u0432 \u0444\u0443\u043D\u043A\u0446\u0438\u0438 <code>hn.spinOnce</code>:</p><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token comment">/* \u0443\u0441\u043B\u043E\u0432\u0438\u0435 */</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ... \u041F\u0440\u043E\u0438\u0437\u0432\u0435\u0441\u0442\u0438 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u044B\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044F</span>
  nh<span class="token punctuation">.</span><span class="token function">spinOnce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u0414\u043B\u044F \u043E\u0440\u0433\u0430\u043D\u0438\u0437\u0430\u0446\u0438\u0438 \u0434\u043E\u043B\u0433\u0438\u0445 \u0437\u0430\u0434\u0435\u0440\u0436\u0435\u043A \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0439\u0442\u0435 \u0437\u0430\u0434\u0435\u0440\u0436\u043A\u0438 \u0432 \u0446\u0438\u043A\u043B\u0435 \u0441 \u043F\u0435\u0440\u0438\u043E\u0434\u0438\u0447\u0435\u0441\u043A\u0438\u043C \u0432\u044B\u0437\u043E\u0432\u043E\u043C \u0444\u0443\u043D\u043A\u0446\u0438\u0438 <code>hn.spinOnce()</code>:</p><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token comment">// \u0417\u0430\u0434\u0435\u0440\u0436\u043A\u0430 \u043D\u0430 8 \u0441\u0435\u043A\u0443\u043D\u0434</span>
<span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">8</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  nh<span class="token punctuation">.</span><span class="token function">spinOnce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u0440\u0430\u0431\u043E\u0442\u0430-\u0441-\u043A\u043B\u0435\u0432\u0435\u0440\u043E\u043C" tabindex="-1"><a class="header-anchor" href="#\u0440\u0430\u0431\u043E\u0442\u0430-\u0441-\u043A\u043B\u0435\u0432\u0435\u0440\u043E\u043C" aria-hidden="true">#</a> \u0420\u0430\u0431\u043E\u0442\u0430 \u0441 \u041A\u043B\u0435\u0432\u0435\u0440\u043E\u043C</h2>`,18),T=n("\u041D\u0430\u0431\u043E\u0440 \u0441\u0435\u0440\u0432\u0438\u0441\u043E\u0432 \u0438 \u0442\u043E\u043F\u0438\u043A\u043E\u0432 \u0430\u043D\u0430\u043B\u043E\u0433\u0438\u0447\u0435\u043D \u043E\u0431\u044B\u0447\u043D\u043E\u043C\u0443 \u043D\u0430\u0431\u043E\u0440\u0443 \u0432 "),O=n("simple_offboard"),M=n(" \u0438 "),C=n("mavros"),z=n("."),E=o(`<p>\u041F\u0440\u0438\u043C\u0435\u0440 \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u044B, \u043A\u043E\u043D\u0442\u0440\u043E\u043B\u0438\u0440\u0443\u044E\u0449\u0435\u0439 \u043A\u043E\u043F\u0442\u0435\u0440 \u043F\u043E \u043F\u043E\u0437\u0438\u0446\u0438\u0438, \u0441 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435\u043C \u0441\u0435\u0440\u0432\u0438\u0441\u043E\u0432 <code>navigate</code> \u0438 <code>set_mode</code>:</p><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token comment">// \u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0435 \u0431\u0438\u0431\u043B\u0438\u043E\u0442\u0435\u043A \u0434\u043B\u044F \u0440\u0430\u0431\u043E\u0442\u044B \u0441 rosserial</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ros.h&gt;</span></span>

<span class="token comment">// \u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0435 \u0437\u0430\u0433\u043E\u043B\u043E\u0432\u043E\u0447\u043D\u044B\u0445 \u0444\u0430\u0439\u043B\u043E\u0432 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439 \u043F\u0430\u043A\u0435\u0442\u0430 clover \u0438 MAVROS</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;clover/Navigate.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;mavros_msgs/SetMode.h&gt;</span></span>

<span class="token keyword">using</span> <span class="token keyword">namespace</span> clover<span class="token punctuation">;</span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> mavros_msgs<span class="token punctuation">;</span>

ros<span class="token double-colon punctuation">::</span>NodeHandle nh<span class="token punctuation">;</span>

<span class="token comment">// \u041E\u0431\u044A\u044F\u0432\u043B\u0435\u043D\u0438\u0435 \u0441\u0435\u0440\u0432\u0438\u0441\u043E\u0432</span>
ros<span class="token double-colon punctuation">::</span>ServiceClient<span class="token operator">&lt;</span>Navigate<span class="token double-colon punctuation">::</span>Request<span class="token punctuation">,</span> Navigate<span class="token double-colon punctuation">::</span>Response<span class="token operator">&gt;</span> <span class="token function">navigate</span><span class="token punctuation">(</span><span class="token string">&quot;/navigate&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
ros<span class="token double-colon punctuation">::</span>ServiceClient<span class="token operator">&lt;</span>SetMode<span class="token double-colon punctuation">::</span>Request<span class="token punctuation">,</span> SetMode<span class="token double-colon punctuation">::</span>Response<span class="token operator">&gt;</span> <span class="token function">setMode</span><span class="token punctuation">(</span><span class="token string">&quot;/mavros/set_mode&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">void</span> <span class="token function">setup</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
  <span class="token comment">// \u0418\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F rosserial</span>
  nh<span class="token punctuation">.</span><span class="token function">initNode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u0418\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F \u0441\u0435\u0440\u0432\u0438\u0441\u043E\u0432</span>
  nh<span class="token punctuation">.</span><span class="token function">serviceClient</span><span class="token punctuation">(</span>navigate<span class="token punctuation">)</span><span class="token punctuation">;</span>
  nh<span class="token punctuation">.</span><span class="token function">serviceClient</span><span class="token punctuation">(</span>setMode<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u041E\u0436\u0438\u0434\u0430\u043D\u0438\u0435 \u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0435 \u043A Raspberry Pi</span>
  <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">!</span>nh<span class="token punctuation">.</span><span class="token function">connected</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> nh<span class="token punctuation">.</span><span class="token function">spinOnce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  nh<span class="token punctuation">.</span><span class="token function">loginfo</span><span class="token punctuation">(</span><span class="token string">&quot;Startup complete&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C\u0441\u043A\u0430\u044F \u043D\u0430\u0441\u0442\u0440\u043E\u0439\u043A\u0430</span>
  <span class="token comment">// &lt;...&gt;</span>

  <span class="token comment">// \u0422\u0435\u0441\u0442\u043E\u0432\u0430\u044F \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u0430</span>
  Navigate<span class="token double-colon punctuation">::</span>Request nav_req<span class="token punctuation">;</span>
  Navigate<span class="token double-colon punctuation">::</span>Response nav_res<span class="token punctuation">;</span>
  SetMode<span class="token double-colon punctuation">::</span>Request sm_req<span class="token punctuation">;</span>
  SetMode<span class="token double-colon punctuation">::</span>Response sm_res<span class="token punctuation">;</span>

  <span class="token comment">// \u0412\u0437\u043B\u0435\u0442 \u043D\u0430 2 \u043C\u0435\u0442\u0440\u0430:</span>
  nh<span class="token punctuation">.</span><span class="token function">loginfo</span><span class="token punctuation">(</span><span class="token string">&quot;Take off&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>auto_arm <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>frame_id <span class="token operator">=</span> <span class="token string">&quot;body&quot;</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token number">0.5</span><span class="token punctuation">;</span>
  navigate<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>nav_req<span class="token punctuation">,</span> nav_res<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u0416\u0434\u0435\u043C 5 \u0441\u0435\u043A\u0443\u043D\u0434</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  	<span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  	nh<span class="token punctuation">.</span><span class="token function">spinOnce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  nav_req<span class="token punctuation">.</span>auto_arm <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>

  <span class="token comment">// \u041F\u0440\u043E\u043B\u0435\u0442 \u0432\u043F\u0435\u0440\u0435\u0434 \u043D\u0430 3 \u043C\u0435\u0442\u0440\u0430:</span>
  nh<span class="token punctuation">.</span><span class="token function">loginfo</span><span class="token punctuation">(</span><span class="token string">&quot;Fly forward&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>auto_arm <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>frame_id <span class="token operator">=</span> <span class="token string">&quot;body&quot;</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token number">0.8</span><span class="token punctuation">;</span>
  navigate<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>nav_req<span class="token punctuation">,</span> nav_res<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u0416\u0434\u0435\u043C 5 \u0441\u0435\u043A\u0443\u043D\u0434</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    nh<span class="token punctuation">.</span><span class="token function">spinOnce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u041F\u043E\u043B\u0435\u0442 \u0432 \u0442\u043E\u0447\u043A\u0443 1:0:2 \u043F\u043E \u043C\u0430\u0440\u043A\u0435\u0440\u043D\u043E\u043C\u0443 \u043F\u043E\u043B\u044E</span>
  nh<span class="token punctuation">.</span><span class="token function">loginfo</span><span class="token punctuation">(</span><span class="token string">&quot;Fly on point&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>auto_arm <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>frame_id <span class="token operator">=</span> <span class="token string">&quot;aruco_map&quot;</span><span class="token punctuation">;</span>
  nav_req<span class="token punctuation">.</span>speed <span class="token operator">=</span> <span class="token number">0.8</span><span class="token punctuation">;</span>
  navigate<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>nav_req<span class="token punctuation">,</span> nav_res<span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// \u0416\u0434\u0435\u043C 5 \u0441\u0435\u043A\u0443\u043D\u0434</span>
  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">5</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">delay</span><span class="token punctuation">(</span><span class="token number">1000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    nh<span class="token punctuation">.</span><span class="token function">spinOnce</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// \u041F\u043E\u0441\u0430\u0434\u043A\u0430</span>
  nh<span class="token punctuation">.</span><span class="token function">loginfo</span><span class="token punctuation">(</span><span class="token string">&quot;Land&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  sm_req<span class="token punctuation">.</span>custom_mode <span class="token operator">=</span> <span class="token string">&quot;AUTO.LAND&quot;</span><span class="token punctuation">;</span>
  setMode<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>sm_req<span class="token punctuation">,</span> sm_res<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">void</span> <span class="token function">loop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre></div><h2 id="\u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435-\u0442\u0435\u043B\u0435\u043C\u0435\u0442\u0440\u0438\u0438" tabindex="-1"><a class="header-anchor" href="#\u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435-\u0442\u0435\u043B\u0435\u043C\u0435\u0442\u0440\u0438\u0438" aria-hidden="true">#</a> \u041F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0435 \u0442\u0435\u043B\u0435\u043C\u0435\u0442\u0440\u0438\u0438</h2>`,3),L=n("\u0421 Arduino \u043C\u043E\u0436\u043D\u043E \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C "),P=n("\u0441\u0435\u0440\u0432\u0438\u0441"),V=n(),B=s("code",null,"get_telemetry",-1),G=n(". \u0414\u043B\u044F \u044D\u0442\u043E\u0433\u043E \u043D\u0430\u0434\u043E \u043E\u0431\u044A\u044F\u0432\u0438\u0442\u044C \u0435\u0433\u043E \u043F\u043E \u0430\u043D\u0430\u043B\u043E\u0433\u0438\u0438 \u0441 \u0441\u0435\u0440\u0432\u0438\u0441\u0430\u043C\u0438 "),H=s("code",null,"navigate",-1),I=n(" \u0438 "),D=s("code",null,"set_mode",-1),F=n(":"),U=o(`<div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ros.h&gt;</span></span>

<span class="token comment">// ...</span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;clover/GetTelemetry.h&gt;</span></span>

<span class="token comment">// ...</span>

ros<span class="token double-colon punctuation">::</span>ServiceClient<span class="token operator">&lt;</span>GetTelemetry<span class="token double-colon punctuation">::</span>Request<span class="token punctuation">,</span> GetTelemetry<span class="token double-colon punctuation">::</span>Response<span class="token operator">&gt;</span> <span class="token function">getTelemetry</span><span class="token punctuation">(</span><span class="token string">&quot;/get_telemetry&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ...</span>

nh<span class="token punctuation">.</span><span class="token function">serviceClient</span><span class="token punctuation">(</span>getTelemetry<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// ...</span>

GetTelemetry<span class="token double-colon punctuation">::</span>Request gt_req<span class="token punctuation">;</span>
GetTelemetry<span class="token double-colon punctuation">::</span>Response gt_res<span class="token punctuation">;</span>


<span class="token comment">// ...</span>

gt_req<span class="token punctuation">.</span>frame_id <span class="token operator">=</span> <span class="token string">&quot;aruco_map&quot;</span><span class="token punctuation">;</span> <span class="token comment">// \u0444\u0440\u0435\u0439\u043C \u0434\u043B\u044F \u0437\u043D\u0430\u0447\u0435\u043D\u0438\u0439 x, y, z</span>
getTelemetry<span class="token punctuation">.</span><span class="token function">call</span><span class="token punctuation">(</span>gt_req<span class="token punctuation">,</span> gt_res<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// gt_res.x - \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u0438\u0435 \u043A\u043E\u043F\u0442\u0435\u0440\u0430 \u043F\u043E x</span>
<span class="token comment">// gt_res.y - \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u0438\u0435 \u043A\u043E\u043F\u0442\u0435\u0440\u0430 \u043F\u043E y</span>
<span class="token comment">// gt_res.z - \u043F\u043E\u043B\u043E\u0436\u0435\u043D\u0438\u0435 \u043A\u043E\u043F\u0442\u0435\u0440\u0430 \u043F\u043E z</span>
</code></pre></div><h2 id="\u043F\u0440\u043E\u0431\u043B\u0435\u043C\u044B" tabindex="-1"><a class="header-anchor" href="#\u043F\u0440\u043E\u0431\u043B\u0435\u043C\u044B" aria-hidden="true">#</a> \u041F\u0440\u043E\u0431\u043B\u0435\u043C\u044B</h2><p>\u041F\u0440\u0438 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0438 Arduino Nano \u043C\u043E\u0436\u0435\u0442 \u043D\u0435 \u0445\u0432\u0430\u0442\u0430\u0442\u044C \u043E\u043F\u0435\u0440\u0430\u0442\u0438\u0432\u043D\u043E\u0439 \u043F\u0430\u043C\u044F\u0442\u0438 (RAM). \u0412 \u0442\u0430\u043A\u043E\u043C \u0441\u043B\u0443\u0447\u0430\u0435 \u0432 Arduino IDE \u0431\u0443\u0434\u0443\u0442 \u043F\u043E\u044F\u0432\u043B\u044F\u0442\u044C\u0441\u044F \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u044F, \u0442\u0438\u043F\u0430:</p><div class="language-text ext-text"><pre class="language-text"><code>\u0413\u043B\u043E\u0431\u0430\u043B\u044C\u043D\u044B\u0435 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u044E\u0442 1837 \u0431\u0430\u0439\u0442 (89%) \u0434\u0438\u043D\u0430\u043C\u0438\u0447\u0435\u0441\u043A\u043E\u0439 \u043F\u0430\u043C\u044F\u0442\u0438, \u043E\u0441\u0442\u0430\u0432\u043B\u044F\u044F 211 \u0431\u0430\u0439\u0442 \u0434\u043B\u044F \u043B\u043E\u043A\u0430\u043B\u044C\u043D\u044B\u0445 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0445. \u041C\u0430\u043A\u0441\u0438\u043C\u0443\u043C: 2048 \u0431\u0430\u0439\u0442.
\u041D\u0435\u0434\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E \u043F\u0430\u043C\u044F\u0442\u0438, \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u0430 \u043C\u043E\u0436\u0435\u0442 \u0440\u0430\u0431\u043E\u0442\u0430\u0442\u044C \u043D\u0435\u0441\u0442\u0430\u0431\u0438\u043B\u044C\u043D\u043E.
</code></pre></div><p>\u041C\u043E\u0436\u043D\u043E \u0441\u043E\u043A\u0440\u0430\u0442\u0438\u0442\u044C \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435 \u043E\u043F\u0435\u0440\u0430\u0442\u0438\u0432\u043D\u043E\u0439 \u043F\u0430\u043C\u044F\u0442\u0438 \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0432 \u0440\u0430\u0437\u043C\u0435\u0440 \u0432\u044B\u0434\u0435\u043B\u044F\u0435\u043C\u044B\u0445 \u0431\u0443\u0444\u0435\u0440\u043E\u0432 \u0434\u043B\u044F \u043F\u0435\u0440\u0435\u0434\u0430\u0447\u0438 \u0438 \u043F\u0440\u0438\u0435\u043C\u0430 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439. \u0414\u043B\u044F \u044D\u0442\u043E\u0433\u043E <strong>\u0432 \u0441\u0430\u043C\u043E\u0435 \u043D\u0430\u0447\u0430\u043B\u043E</strong> \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u044B \u0441\u043B\u0435\u0434\u0443\u0435\u0442 \u043F\u043E\u043C\u0435\u0441\u0442\u0438\u0442\u044C \u0441\u0442\u0440\u043E\u043A\u0443:</p><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">__AVR_ATmega168__</span> <span class="token expression"><span class="token number">1</span></span></span>
</code></pre></div><p>\u041C\u043E\u0436\u043D\u043E \u0443\u043C\u0435\u043D\u044C\u0448\u0438\u0442\u044C \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E \u0437\u0430\u043D\u044F\u0442\u043E\u0439 \u043F\u0430\u043C\u044F\u0442\u0438 \u0435\u0449\u0435 \u0441\u0438\u043B\u044C\u043D\u0435\u0435, \u0435\u0441\u043B\u0438 \u0432\u0440\u0443\u0447\u043D\u0443\u044E \u043D\u0430\u0441\u0442\u0440\u043E\u0438\u0442\u044C \u043A\u043E\u043B\u0438\u0447\u0435\u0441\u0442\u0432\u043E publisher&#39;\u043E\u0432 \u0438 subscriber&#39;\u043E\u0432, \u0430 \u0442\u0430\u043A\u0436\u0435 \u0440\u0430\u0437\u043C\u0435\u0440\u044B \u0431\u0443\u0444\u0435\u0440\u043E\u0432 \u043F\u0430\u043C\u044F\u0442\u0438, \u0432\u044B\u0434\u0435\u043B\u044F\u0435\u043C\u043E\u0439 \u0434\u043B\u044F \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u0439, \u043D\u0430\u043F\u0440\u0438\u043C\u0435\u0440:</p><div class="language-cpp ext-cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;ros.h&gt;</span></span>

<span class="token comment">// ...</span>

<span class="token keyword">typedef</span> ros<span class="token double-colon punctuation">::</span>NodeHandle_<span class="token operator">&lt;</span>ArduinoHardware<span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token operator">&gt;</span> NodeHandle<span class="token punctuation">;</span>

<span class="token comment">// ...</span>
NodeHandle nh<span class="token punctuation">;</span>
</code></pre></div>`,8);function $(j,J){const e=c("ExternalLinkIcon"),t=c("RouterLink");return l(),i(r,null,[d,s("p",null,[m,s("a",_,[h,a(e)]),g,a(t,{to:"/ru/image.html"},{default:p(()=>[v]),_:1}),b]),s("p",null,[f,s("a",q,[y,a(e)])]),x,w,s("p",null,[R,a(t,{to:"/ru/ssh.html"},{default:p(()=>[A]),_:1}),S]),N,s("p",null,[T,a(t,{to:"/ru/simple_offboard.html"},{default:p(()=>[O]),_:1}),M,a(t,{to:"/ru/mavros.html"},{default:p(()=>[C]),_:1}),z]),E,s("p",null,[L,a(t,{to:"/ru/simple_offboard.html"},{default:p(()=>[P]),_:1}),V,B,G,H,I,D,F]),U],64)}var Q=u(k,[["render",$],["__file","arduino.html.vue"]]);export{Q as default};
