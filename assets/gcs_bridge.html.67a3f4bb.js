import{_ as o,r as c,o as p,c as i,a,b as e,w as s,F as l,d as n,e as r}from"./app.4f6a4bec.js";import{_ as u}from"./bridge_udp.61ebafa1.js";var d="/clover-vuepress/assets/qground.a5bdfcb9.png",g="/clover-vuepress/assets/bridge_tcp.80ad9306.png";const h={},m=a("h1",{id:"using-qgroundcontrol-via-wi-fi",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#using-qgroundcontrol-via-wi-fi","aria-hidden":"true"},"#"),n(" Using QGroundControl via Wi-Fi")],-1),k=a("p",null,[a("img",{src:d,alt:"QGroundControl"})],-1),_=n("You can monitor, control, calibrate and configure the flight controller of the quadcopter using QGroundControl via Wi-Fi. This requires "),f=n("connecting to Wi-Fi"),b=n(" of the "),v=a("code",null,"clover-xxxx",-1),x=n(" network."),q=r(`<p>After that, in the Clover launch-file <code>/home/pi/catkin_ws/src/clover/clover/launch/clover.launch</code>, choose one of the preconfigured bridge modes.</p><p>After editing the launch-file, restart the <code>clover</code> service:</p><div class="language-text ext-text"><pre class="language-text"><code>sudo systemctl restart clover
</code></pre></div><h2 id="tcp-bridge" tabindex="-1"><a class="header-anchor" href="#tcp-bridge" aria-hidden="true">#</a> TCP bridge</h2><p>Change parameter <code>gcs_bridge</code> in the launch file:</p><div class="language-xml ext-xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gcs_bridge<span class="token punctuation">&quot;</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>tcp<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre></div><p>Then in the QGroundControl program, choose Application Settings &gt; Comm Links &gt; Add. Create a connection with the following settings:</p><p><img src="`+g+`" alt="QGroundControl TCP connection"></p><p>Then choose the created connection from the list of connections, and click &quot;Connect&quot;.</p><h2 id="udp-bridge-with-automated-connection" tabindex="-1"><a class="header-anchor" href="#udp-bridge-with-automated-connection" aria-hidden="true">#</a> UDP bridge (with automated connection)</h2><p>Change parameter <code>gcs_bridge</code> in the launch file:</p><div class="language-xml ext-xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gcs_bridge<span class="token punctuation">&quot;</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>udp-b<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre></div><p>After opening the QGroundControl application, the connection should be established automatically.</p><h2 id="udp-bridge-without-automated-connection" tabindex="-1"><a class="header-anchor" href="#udp-bridge-without-automated-connection" aria-hidden="true">#</a> UDP bridge (without automated connection)</h2><p>Change parameter <code>gcs_bridge</code> in the launch file:</p><div class="language-xml ext-xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gcs_bridge<span class="token punctuation">&quot;</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>udp-b<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre></div><p>Then in the QGroundControl program, choose Application Settings &gt; Comm Links &gt; Add. Create a connection with the following settings:</p><p><img src="`+u+`" alt="QGroundControl UDP connection"></p><p>Then choose the created connection from the list of connections, and click &quot;Connect&quot;.</p><h2 id="udp-broadcast-bridge" tabindex="-1"><a class="header-anchor" href="#udp-broadcast-bridge" aria-hidden="true">#</a> UDP broadcast bridge</h2><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>The feature of the UDP broadcast bridge is the ability to view drone telemetry simultaneously from multiple devices (e.g., a phone and a PC). It is also well suited for devices networking using a router.</p></div><p>Change parameter <code>gcs_bridge</code> in the launch file:</p><div class="language-xml ext-xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>arg</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>gcs_bridge<span class="token punctuation">&quot;</span></span> <span class="token attr-name">default</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>udp-b<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span>
</code></pre></div><p>After opening the QGroundControl application, the connection should be established automatically.</p>`,24),C=a("strong",null,"Next",-1),w=n(": "),T=n("Remote access using SSH");function G(P,Q){const t=c("RouterLink");return p(),i(l,null,[m,k,a("p",null,[_,e(t,{to:"/en/wifi.html"},{default:s(()=>[f]),_:1}),b,v,x]),q,a("p",null,[C,w,e(t,{to:"/en/ssh.html"},{default:s(()=>[T]),_:1})])],64)}var U=o(h,[["render",G],["__file","gcs_bridge.html.vue"]]);export{U as default};
