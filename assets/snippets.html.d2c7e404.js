import{_ as l,r as c,o as u,c as r,a as s,b as a,w as p,F as i,e as o,d as n}from"./app.4f6a4bec.js";const k={},d=o(`<h1 id="\u043F\u0440\u0438\u043C\u0435\u0440\u044B-\u043A\u043E\u0434\u0430" tabindex="-1"><a class="header-anchor" href="#\u043F\u0440\u0438\u043C\u0435\u0440\u044B-\u043A\u043E\u0434\u0430" aria-hidden="true">#</a> \u041F\u0440\u0438\u043C\u0435\u0440\u044B \u043A\u043E\u0434\u0430</h1><h2 id="python" tabindex="-1"><a class="header-anchor" href="#python" aria-hidden="true">#</a> Python</h2><div class="custom-container tip"><p class="custom-container-title">\u0421\u041E\u0412\u0415\u0422</p><p>\u041F\u0440\u0438 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0438 \u043A\u0438\u0440\u0438\u043B\u043B\u0438\u0447\u0435\u0441\u043A\u0438\u0445 \u0441\u0438\u043C\u0432\u043E\u043B\u043E\u0432 \u0432 \u043A\u043E\u0434\u0438\u0440\u043E\u0432\u043A\u0435 UTF-8 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u0434\u043E\u0431\u0430\u0432\u0438\u0442\u044C \u0432 \u043D\u0430\u0447\u0430\u043B\u043E \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u044B \u0443\u043A\u0430\u0437\u0430\u043D\u0438\u0435 \u043A\u043E\u0434\u0438\u0440\u043E\u0432\u043A\u0438:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token comment"># -*- coding: utf-8 -*-</span>
</code></pre></div></div><h3 id="navigate_wait" tabindex="-1"><a class="header-anchor" href="#navigate_wait" aria-hidden="true">#</a> #</h3><p><a name="block-nav"></a></p><p><a name="block-takeoff"></a></p><p>\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u043F\u043E\u043B\u0435\u0442\u0430 \u0432 \u0442\u043E\u0447\u043A\u0443 \u0438 \u043E\u0436\u0438\u0434\u0430\u043D\u0438\u0435 \u043E\u043A\u043E\u043D\u0447\u0430\u043D\u0438\u044F \u043F\u043E\u043B\u0435\u0442\u0430:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">def</span> <span class="token function">navigate_wait</span><span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> yaw<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">&#39;nan&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> speed<span class="token operator">=</span><span class="token number">0.5</span><span class="token punctuation">,</span> frame_id<span class="token operator">=</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> auto_arm<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> tolerance<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    navigate<span class="token punctuation">(</span>x<span class="token operator">=</span>x<span class="token punctuation">,</span> y<span class="token operator">=</span>y<span class="token punctuation">,</span> z<span class="token operator">=</span>z<span class="token punctuation">,</span> yaw<span class="token operator">=</span>yaw<span class="token punctuation">,</span> speed<span class="token operator">=</span>speed<span class="token punctuation">,</span> frame_id<span class="token operator">=</span>frame_id<span class="token punctuation">,</span> auto_arm<span class="token operator">=</span>auto_arm<span class="token punctuation">)</span>

    <span class="token keyword">while</span> <span class="token keyword">not</span> rospy<span class="token punctuation">.</span>is_shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        telem <span class="token operator">=</span> get_telemetry<span class="token punctuation">(</span>frame_id<span class="token operator">=</span><span class="token string">&#39;navigate_target&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>telem<span class="token punctuation">.</span>x <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> telem<span class="token punctuation">.</span>y <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> telem<span class="token punctuation">.</span>z <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> tolerance<span class="token punctuation">:</span>
            <span class="token keyword">break</span>
        rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>
</code></pre></div>`,8),m=n("\u0414\u043B\u044F \u0442\u043E\u0433\u043E, \u0447\u0442\u043E\u0431\u044B \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0438\u0442\u044C \u0440\u0430\u0441\u0441\u0442\u043E\u044F\u043D\u0438\u0435 \u0434\u043E \u0446\u0435\u043B\u0435\u0432\u043E\u0439 \u0442\u043E\u0447\u043A\u0438, \u0444\u0443\u043D\u043A\u0446\u0438\u044F \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442 \u0444\u0440\u0435\u0439\u043C "),h=s("code",null,"navigate_target",-1),_=n("."),y=n("\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435 \u0444\u0443\u043D\u043A\u0446\u0438\u0438 \u0434\u043B\u044F \u043F\u043E\u043B\u0435\u0442\u0430 \u0432 \u0442\u043E\u0447\u043A\u0443 x=3, y=2, z=1 "),g=n("\u043E\u0442\u043D\u043E\u0441\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u043A\u0430\u0440\u0442\u044B \u043C\u0430\u0440\u043A\u0435\u0440\u043E\u0432"),b=n(":"),f=o(`<div class="language-python ext-py"><pre class="language-python"><code>navigate_wait<span class="token punctuation">(</span>x<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">,</span> y<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> z<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> frame_id<span class="token operator">=</span><span class="token string">&#39;aruco_map&#39;</span><span class="token punctuation">)</span>
</code></pre></div><p>\u042D\u0442\u0443 \u0444\u0443\u043D\u043A\u0446\u0438\u044E \u043C\u043E\u0436\u043D\u043E \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C \u0438 \u0434\u043B\u044F \u0432\u0437\u043B\u0435\u0442\u0430:</p><div class="language-python ext-py"><pre class="language-python"><code>navigate_wait<span class="token punctuation">(</span>z<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> frame_id<span class="token operator">=</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">,</span> auto_arm<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="land_wait" tabindex="-1"><a class="header-anchor" href="#land_wait" aria-hidden="true">#</a> #</h3><p><a name="block-land"></a></p><p>\u041F\u043E\u0441\u0430\u0434\u043A\u0430 \u0438 \u043E\u0436\u0438\u0434\u0430\u043D\u0438\u0435 \u043E\u043A\u043E\u043D\u0447\u0430\u043D\u0438\u044F \u043F\u043E\u0441\u0430\u0434\u043A\u0438:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">def</span> <span class="token function">land_wait</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    land<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">while</span> get_telemetry<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>armed<span class="token punctuation">:</span>
        rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>
</code></pre></div><p>\u0418\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435:</p><div class="language-python ext-py"><pre class="language-python"><code>land_wait<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="wait_arrival" tabindex="-1"><a class="header-anchor" href="#wait_arrival" aria-hidden="true">#</a> #</h3>`,10),v=n("\u041E\u0436\u0438\u0434\u0430\u043D\u0438\u0435 \u043E\u043A\u043E\u043D\u0447\u0430\u043D\u0438\u044F \u043F\u0440\u0438\u043B\u0435\u0442\u0430 \u0432 "),w=n("navigate"),x=n("-\u0442\u043E\u0447\u043A\u0443:"),P=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">def</span> <span class="token function">wait_arrival</span><span class="token punctuation">(</span>tolerance<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">while</span> <span class="token keyword">not</span> rospy<span class="token punctuation">.</span>is_shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        telem <span class="token operator">=</span> get_telemetry<span class="token punctuation">(</span>frame_id<span class="token operator">=</span><span class="token string">&#39;navigate_target&#39;</span><span class="token punctuation">)</span>
        <span class="token keyword">if</span> math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span>telem<span class="token punctuation">.</span>x <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> telem<span class="token punctuation">.</span>y <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> telem<span class="token punctuation">.</span>z <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&lt;</span> tolerance<span class="token punctuation">:</span>
            <span class="token keyword">break</span>
        rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="get_distance" tabindex="-1"><a class="header-anchor" href="#get_distance" aria-hidden="true">#</a> #</h3>`,2),S=n("\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u044F \u0440\u0430\u0441\u0441\u0442\u043E\u044F\u043D\u0438\u044F \u043C\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043C\u044F \u0442\u043E\u0447\u043A\u0430\u043C\u0438 ("),T=s("strong",null,"\u0432\u0430\u0436\u043D\u043E",-1),I=n(": \u0442\u043E\u0447\u043A\u0438 \u0434\u043E\u043B\u0436\u043D\u044B \u0431\u044B\u0442\u044C \u0432 \u043E\u0434\u043D\u043E\u0439 "),D=n("\u0441\u0438\u0441\u0442\u0435\u043C\u0435 \u043A\u043E\u043E\u0440\u0434\u0438\u043D\u0430\u0442"),A=n("):"),B=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">def</span> <span class="token function">get_distance</span><span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> z1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y2<span class="token punctuation">,</span> z2<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> math<span class="token punctuation">.</span>sqrt<span class="token punctuation">(</span><span class="token punctuation">(</span>x1 <span class="token operator">-</span> x2<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token punctuation">(</span>y1 <span class="token operator">-</span> y2<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">+</span> <span class="token punctuation">(</span>z1 <span class="token operator">-</span> z2<span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="get_distance_global" tabindex="-1"><a class="header-anchor" href="#get_distance_global" aria-hidden="true">#</a> #</h3><p>\u0424\u0443\u043D\u043A\u0446\u0438\u044F \u0434\u043B\u044F \u043F\u0440\u0438\u0431\u043B\u0438\u0437\u0438\u0442\u0435\u043B\u044C\u043D\u043E\u0433\u043E \u043E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u044F \u0440\u0430\u0441\u0441\u0442\u043E\u044F\u043D\u0438\u044F (\u0432 \u043C\u0435\u0442\u0440\u0430\u0445) \u043C\u0435\u0436\u0434\u0443 \u0434\u0432\u0443\u043C\u044F \u0433\u043B\u043E\u0431\u0430\u043B\u044C\u043D\u044B\u043C\u0438 \u043A\u043E\u043E\u0440\u0434\u0438\u043D\u0430\u0442\u0430\u043C\u0438 (\u0448\u0438\u0440\u043E\u0442\u0430/\u0434\u043E\u043B\u0433\u043E\u0442\u0430):</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">def</span> <span class="token function">get_distance_global</span><span class="token punctuation">(</span>lat1<span class="token punctuation">,</span> lon1<span class="token punctuation">,</span> lat2<span class="token punctuation">,</span> lon2<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> math<span class="token punctuation">.</span>hypot<span class="token punctuation">(</span>lat1 <span class="token operator">-</span> lat2<span class="token punctuation">,</span> lon1 <span class="token operator">-</span> lon2<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">1.113195e5</span>
</code></pre></div><h3 id="disarm" tabindex="-1"><a class="header-anchor" href="#disarm" aria-hidden="true">#</a> #</h3><p>\u0414\u0438\u0437\u0430\u0440\u043C \u043A\u043E\u043F\u0442\u0435\u0440\u0430 (\u0432\u044B\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0435 \u0432\u0438\u043D\u0442\u043E\u0432, <strong>\u043A\u043E\u043F\u0442\u0435\u0440 \u0443\u043F\u0430\u0434\u0435\u0442</strong>):</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token comment"># \u041E\u0431\u044A\u044F\u0432\u043B\u0435\u043D\u0438\u0435 \u043F\u0440\u043E\u043A\u0441\u0438:</span>
<span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>srv <span class="token keyword">import</span> CommandBool
arming <span class="token operator">=</span> rospy<span class="token punctuation">.</span>ServiceProxy<span class="token punctuation">(</span><span class="token string">&#39;mavros/cmd/arming&#39;</span><span class="token punctuation">,</span> CommandBool<span class="token punctuation">)</span>

<span class="token comment"># ...</span>

arming<span class="token punctuation">(</span><span class="token boolean">False</span><span class="token punctuation">)</span>  <span class="token comment"># \u0434\u0438\u0437\u0430\u0440\u043C</span>
</code></pre></div><h3 id="transform" tabindex="-1"><a class="header-anchor" href="#transform" aria-hidden="true">#</a> #</h3>`,8),z=n("\u0422\u0440\u0430\u043D\u0441\u0444\u043E\u0440\u043C\u0438\u0440\u043E\u0432\u0430\u0442\u044C \u043F\u043E\u0437\u0438\u0446\u0438\u044E ("),C=s("code",null,"PoseStamped",-1),M=n(") \u0438\u0437 \u043E\u0434\u043D\u043E\u0439 \u0441\u0438\u0441\u0442\u0435\u043C\u044B \u043A\u043E\u043E\u0440\u0434\u0438\u043D\u0430\u0442 ("),E=n("\u0444\u0440\u0435\u0439\u043C\u0430"),L=n(") \u0432 \u0434\u0440\u0443\u0433\u0443\u044E, \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u044F "),V={href:"http://wiki.ros.org/tf2",target:"_blank",rel:"noopener noreferrer"},R=n("tf2"),F=n(":"),N=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> tf2_ros
<span class="token keyword">import</span> tf2_geometry_msgs
<span class="token keyword">from</span> geometry_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> PoseStamped

tf_buffer <span class="token operator">=</span> tf2_ros<span class="token punctuation">.</span>Buffer<span class="token punctuation">(</span><span class="token punctuation">)</span>
tf_listener <span class="token operator">=</span> tf2_ros<span class="token punctuation">.</span>TransformListener<span class="token punctuation">(</span>tf_buffer<span class="token punctuation">)</span>

<span class="token comment"># ...</span>

<span class="token comment"># \u0421\u043E\u0437\u0434\u0430\u0435\u043C \u043E\u0431\u044A\u0435\u043A\u0442 PoseStamped (\u043B\u0438\u0431\u043E \u043F\u043E\u043B\u0443\u0447\u0430\u0435\u043C \u0438\u0437 \u0442\u043E\u043F\u0438\u043A\u0430):</span>
pose <span class="token operator">=</span> PoseStamped<span class="token punctuation">(</span><span class="token punctuation">)</span>
pose<span class="token punctuation">.</span>header<span class="token punctuation">.</span>frame_id <span class="token operator">=</span> <span class="token string">&#39;map&#39;</span>  <span class="token comment"># \u0444\u0440\u0435\u0439\u043C, \u0432 \u043A\u043E\u0442\u043E\u0440\u043E\u043C \u0437\u0430\u0434\u0430\u043D\u0430 \u043F\u043E\u0437\u0438\u0446\u0438\u044F</span>
pose<span class="token punctuation">.</span>header<span class="token punctuation">.</span>stamp <span class="token operator">=</span> rospy<span class="token punctuation">.</span>get_rostime<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># \u043C\u043E\u043C\u0435\u043D\u0442 \u0432\u0440\u0435\u043C\u0435\u043D\u0438, \u0434\u043B\u044F \u043A\u043E\u0442\u043E\u0440\u043E\u0433\u043E \u0437\u0430\u0434\u0430\u043D\u0430 \u043F\u043E\u0437\u0438\u0446\u0438\u044F (\u0442\u0435\u043A\u0443\u0449\u0435\u0435 \u0432\u0440\u0435\u043C\u044F)</span>
pose<span class="token punctuation">.</span>pose<span class="token punctuation">.</span>position<span class="token punctuation">.</span>x <span class="token operator">=</span> <span class="token number">1</span>
pose<span class="token punctuation">.</span>pose<span class="token punctuation">.</span>position<span class="token punctuation">.</span>y <span class="token operator">=</span> <span class="token number">2</span>
pose<span class="token punctuation">.</span>pose<span class="token punctuation">.</span>position<span class="token punctuation">.</span>z <span class="token operator">=</span> <span class="token number">3</span>
pose<span class="token punctuation">.</span>pose<span class="token punctuation">.</span>orientation<span class="token punctuation">.</span>w <span class="token operator">=</span> <span class="token number">1</span>

frame_id <span class="token operator">=</span> <span class="token string">&#39;base_link&#39;</span>  <span class="token comment"># \u0446\u0435\u043B\u0435\u0432\u043E\u0439 \u0444\u0440\u0435\u0439\u043C</span>
transform_timeout <span class="token operator">=</span> rospy<span class="token punctuation">.</span>Duration<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>  <span class="token comment"># \u0442\u0430\u0439\u043C\u0430\u0443\u0442 \u043E\u0436\u0438\u0434\u0430\u043D\u0438\u044F \u0442\u0440\u0430\u043D\u0441\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u0438</span>

<span class="token comment"># \u041F\u0440\u0435\u043E\u0431\u0440\u0430\u0437\u043E\u0432\u044B\u0432\u0430\u0435\u043C \u043F\u043E\u0437\u0438\u0446\u0438\u044E \u0438\u0437 \u0441\u0442\u0430\u0440\u043E\u0433\u043E \u0444\u0440\u0435\u0439\u043C\u0430 \u0432 \u043D\u043E\u0432\u044B\u0439:</span>
new_pose <span class="token operator">=</span> tf_buffer<span class="token punctuation">.</span>transform<span class="token punctuation">(</span>pose<span class="token punctuation">,</span> frame_id<span class="token punctuation">,</span> transform_timeout<span class="token punctuation">)</span>
</code></pre></div><h3 id="upside-down" tabindex="-1"><a class="header-anchor" href="#upside-down" aria-hidden="true">#</a> #</h3><p>\u041E\u043F\u0440\u0435\u0434\u0435\u043B\u0435\u043D\u0438\u0435, \u043F\u0435\u0440\u0435\u0432\u0435\u0440\u043D\u0443\u0442 \u043B\u0438 \u043A\u043E\u043F\u0442\u0435\u0440:</p><div class="language-python ext-py"><pre class="language-python"><code>PI_2 <span class="token operator">=</span> math<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">2</span>
telem <span class="token operator">=</span> get_telemetry<span class="token punctuation">(</span><span class="token punctuation">)</span>

flipped <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>telem<span class="token punctuation">.</span>pitch<span class="token punctuation">)</span> <span class="token operator">&gt;</span> PI_2 <span class="token keyword">or</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>telem<span class="token punctuation">.</span>roll<span class="token punctuation">)</span> <span class="token operator">&gt;</span> PI_2
</code></pre></div><h3 id="angle-hor" tabindex="-1"><a class="header-anchor" href="#angle-hor" aria-hidden="true">#</a> #</h3><p>\u0420\u0430\u0441\u0447\u0435\u0442 \u043E\u0431\u0449\u0435\u0433\u043E \u0443\u0433\u043B\u0430 \u043A\u043E\u043F\u0442\u0435\u0440\u0430 \u043A \u0433\u043E\u0440\u0438\u0437\u043E\u043D\u0442\u0443:</p><div class="language-python ext-py"><pre class="language-python"><code>PI_2 <span class="token operator">=</span> math<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">2</span>
telem <span class="token operator">=</span> get_telemetry<span class="token punctuation">(</span><span class="token punctuation">)</span>

flipped <span class="token operator">=</span> <span class="token keyword">not</span> <span class="token operator">-</span>PI_2 <span class="token operator">&lt;=</span> telem<span class="token punctuation">.</span>pitch <span class="token operator">&lt;=</span> PI_2 <span class="token keyword">or</span> <span class="token keyword">not</span> <span class="token operator">-</span>PI_2 <span class="token operator">&lt;=</span> telem<span class="token punctuation">.</span>roll <span class="token operator">&lt;=</span> PI_2
angle_to_horizon <span class="token operator">=</span> math<span class="token punctuation">.</span>atan<span class="token punctuation">(</span>math<span class="token punctuation">.</span>hypot<span class="token punctuation">(</span>math<span class="token punctuation">.</span>tan<span class="token punctuation">(</span>telem<span class="token punctuation">.</span>pitch<span class="token punctuation">)</span><span class="token punctuation">,</span> math<span class="token punctuation">.</span>tan<span class="token punctuation">(</span>telem<span class="token punctuation">.</span>roll<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">if</span> flipped<span class="token punctuation">:</span>
    angle_to_horizon <span class="token operator">=</span> math<span class="token punctuation">.</span>pi <span class="token operator">-</span> angle_to_horizon
</code></pre></div><h3 id="circle" tabindex="-1"><a class="header-anchor" href="#circle" aria-hidden="true">#</a> #</h3><p>\u041F\u043E\u043B\u0435\u0442 \u043F\u043E \u043A\u0440\u0443\u0433\u043E\u0432\u043E\u0439 \u0442\u0440\u0430\u0435\u043A\u0442\u043E\u0440\u0438\u0438:</p><div class="language-python ext-py"><pre class="language-python"><code>RADIUS <span class="token operator">=</span> <span class="token number">0.6</span>  <span class="token comment"># m</span>
SPEED <span class="token operator">=</span> <span class="token number">0.3</span>  <span class="token comment"># rad / s</span>

start <span class="token operator">=</span> get_telemetry<span class="token punctuation">(</span><span class="token punctuation">)</span>
start_stamp <span class="token operator">=</span> rospy<span class="token punctuation">.</span>get_rostime<span class="token punctuation">(</span><span class="token punctuation">)</span>

r <span class="token operator">=</span> rospy<span class="token punctuation">.</span>Rate<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>

<span class="token keyword">while</span> <span class="token keyword">not</span> rospy<span class="token punctuation">.</span>is_shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    angle <span class="token operator">=</span> <span class="token punctuation">(</span>rospy<span class="token punctuation">.</span>get_rostime<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> start_stamp<span class="token punctuation">)</span><span class="token punctuation">.</span>to_sec<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> SPEED
    x <span class="token operator">=</span> start<span class="token punctuation">.</span>x <span class="token operator">+</span> math<span class="token punctuation">.</span>sin<span class="token punctuation">(</span>angle<span class="token punctuation">)</span> <span class="token operator">*</span> RADIUS
    y <span class="token operator">=</span> start<span class="token punctuation">.</span>y <span class="token operator">+</span> math<span class="token punctuation">.</span>cos<span class="token punctuation">(</span>angle<span class="token punctuation">)</span> <span class="token operator">*</span> RADIUS
    set_position<span class="token punctuation">(</span>x<span class="token operator">=</span>x<span class="token punctuation">,</span> y<span class="token operator">=</span>y<span class="token punctuation">,</span> z<span class="token operator">=</span>start<span class="token punctuation">.</span>z<span class="token punctuation">)</span>

    r<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="rate" tabindex="-1"><a class="header-anchor" href="#rate" aria-hidden="true">#</a> #</h3><p>\u041F\u043E\u0432\u0442\u043E\u0440\u044F\u0442\u044C \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0447\u0430\u0441\u0442\u043E\u0442\u043E\u0439 10 \u0413\u0446:</p><div class="language-python ext-py"><pre class="language-python"><code>r <span class="token operator">=</span> rospy<span class="token punctuation">.</span>Rate<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>
<span class="token keyword">while</span> <span class="token keyword">not</span> rospy<span class="token punctuation">.</span>is_shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># Do anything</span>
    r<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="mavros-sub" tabindex="-1"><a class="header-anchor" href="#mavros-sub" aria-hidden="true">#</a> #</h3><p>\u041F\u0440\u0438\u043C\u0435\u0440 \u043F\u043E\u0434\u043F\u0438\u0441\u043A\u0438 \u043D\u0430 \u0442\u043E\u043F\u0438\u043A\u0438 \u0438\u0437 MAVROS:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> geometry_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> PoseStamped<span class="token punctuation">,</span> TwistStamped
<span class="token keyword">from</span> sensor_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> BatteryState
<span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> RCIn

<span class="token keyword">def</span> <span class="token function">pose_update</span><span class="token punctuation">(</span>pose<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># \u041E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u043D\u043E\u0432\u044B\u0445 \u0434\u0430\u043D\u043D\u044B\u0445 \u043E \u043F\u043E\u0437\u0438\u0446\u0438\u0438 \u043A\u043E\u043F\u0442\u0435\u0440\u0430</span>
    <span class="token keyword">pass</span>

rospy<span class="token punctuation">.</span>Subscriber<span class="token punctuation">(</span><span class="token string">&#39;/mavros/local_position/pose&#39;</span><span class="token punctuation">,</span> PoseStamped<span class="token punctuation">,</span> pose_update<span class="token punctuation">)</span>
rospy<span class="token punctuation">.</span>Subscriber<span class="token punctuation">(</span><span class="token string">&#39;/mavros/local_position/velocity&#39;</span><span class="token punctuation">,</span> TwistStamped<span class="token punctuation">,</span> velocity_update<span class="token punctuation">)</span>
rospy<span class="token punctuation">.</span>Subscriber<span class="token punctuation">(</span><span class="token string">&#39;/mavros/battery&#39;</span><span class="token punctuation">,</span> BatteryState<span class="token punctuation">,</span> battery_update<span class="token punctuation">)</span>
rospy<span class="token punctuation">.</span>Subscriber<span class="token punctuation">(</span><span class="token string">&#39;mavros/rc/in&#39;</span><span class="token punctuation">,</span> RCIn<span class="token punctuation">,</span> rc_callback<span class="token punctuation">)</span>

rospy<span class="token punctuation">.</span>spin<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div>`,16),O=n("\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044E \u043F\u043E \u0442\u043E\u043F\u0438\u043A\u0430\u043C MAVROS \u0441\u043C. \u043F\u043E "),G=n("\u0441\u0441\u044B\u043B\u043A\u0435"),U=n("."),q=s("h3",{id:"mavlink",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#mavlink","aria-hidden":"true"},"#"),n(" #")],-1),Z=n("\u041F\u0440\u0438\u043C\u0435\u0440 \u043E\u0442\u043F\u0440\u0430\u0432\u043A\u0438 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u043B\u044C\u043D\u043E\u0433\u043E "),H=n("MAVLink-\u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u044F"),Y=n(" \u043A\u043E\u043F\u0442\u0435\u0440\u0443:"),X=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> Mavlink
<span class="token keyword">from</span> mavros <span class="token keyword">import</span> mavlink
<span class="token keyword">from</span> pymavlink <span class="token keyword">import</span> mavutil

mavlink_pub <span class="token operator">=</span> rospy<span class="token punctuation">.</span>Publisher<span class="token punctuation">(</span><span class="token string">&#39;mavlink/to&#39;</span><span class="token punctuation">,</span> Mavlink<span class="token punctuation">,</span> queue_size<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>

<span class="token comment"># \u041E\u0442\u043F\u0440\u0430\u0432\u043A\u0430 \u0441\u043E\u043E\u0431\u0449\u0435\u043D\u0438\u044F HEARTBEAT:</span>

msg <span class="token operator">=</span> mavutil<span class="token punctuation">.</span>mavlink<span class="token punctuation">.</span>MAVLink_heartbeat_message<span class="token punctuation">(</span>mavutil<span class="token punctuation">.</span>mavlink<span class="token punctuation">.</span>MAV_TYPE_GCS<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>
msg<span class="token punctuation">.</span>pack<span class="token punctuation">(</span>mavutil<span class="token punctuation">.</span>mavlink<span class="token punctuation">.</span>MAVLink<span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
ros_msg <span class="token operator">=</span> mavlink<span class="token punctuation">.</span>convert_to_rosmsg<span class="token punctuation">(</span>msg<span class="token punctuation">)</span>

mavlink_pub<span class="token punctuation">.</span>publish<span class="token punctuation">(</span>ros_msg<span class="token punctuation">)</span>
</code></pre></div><h3 id="rc-sub" tabindex="-1"><a class="header-anchor" href="#rc-sub" aria-hidden="true">#</a> #</h3>`,2),j=n("\u0420\u0435\u0430\u043A\u0446\u0438\u044F \u043D\u0430 \u043F\u0435\u0440\u0435\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0435 \u0440\u0435\u0436\u0438\u043C\u0430 \u043D\u0430 \u043F\u0443\u043B\u044C\u0442\u0435 \u0440\u0430\u0434\u0438\u043E\u0443\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u044F (\u043C\u043E\u0436\u0435\u0442 \u0431\u044B\u0442\u044C \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u043E \u0434\u043B\u044F \u0437\u0430\u043F\u0443\u0441\u043A\u0430 \u0430\u0432\u0442\u043E\u043D\u043E\u043C\u043D\u043E\u0433\u043E \u043F\u043E\u043B\u0435\u0442\u0430, \u0441\u043C. "),J={href:"https://gist.github.com/okalachev/b709f04522d2f9af97e835baedeb806b",target:"_blank",rel:"noopener noreferrer"},K=n("\u043F\u0440\u0438\u043C\u0435\u0440"),Q=n("):"),W=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> RCIn

<span class="token comment"># \u0412\u044B\u0437\u044B\u0432\u0430\u0435\u0442\u0441\u044F \u043F\u0440\u0438 \u043F\u043E\u043B\u0443\u0447\u0435\u043D\u0438\u0438 \u043D\u043E\u0432\u044B\u0445 \u0434\u0430\u043D\u043D\u044B\u0445 \u0441 \u043F\u0443\u043B\u044C\u0442\u0430</span>
<span class="token keyword">def</span> <span class="token function">rc_callback</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token comment"># \u041F\u0440\u043E\u0438\u0437\u0432\u043E\u043B\u044C\u043D\u0430\u044F \u0440\u0435\u0430\u043A\u0446\u0438\u044F \u043D\u0430 \u043F\u0435\u0440\u0435\u043A\u043B\u044E\u0447\u0435\u043D\u0438\u0435 \u0442\u0443\u043C\u0431\u043B\u0435\u0440\u0430 \u043D\u0430 \u043F\u0443\u043B\u044C\u0442\u0435</span>
    <span class="token keyword">if</span> data<span class="token punctuation">.</span>channels<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> <span class="token number">1100</span><span class="token punctuation">:</span>
        <span class="token comment"># ...</span>
        <span class="token keyword">pass</span>
    <span class="token keyword">elif</span> data<span class="token punctuation">.</span>channels<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">1900</span><span class="token punctuation">:</span>
        <span class="token comment"># ...</span>
        <span class="token keyword">pass</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token comment"># ...</span>
        <span class="token keyword">pass</span>

<span class="token comment"># \u0421\u043E\u0437\u0434\u0430\u0435\u043C \u043F\u043E\u0434\u043F\u0438\u0441\u0447\u0438\u043A \u043D\u0430 \u0442\u043E\u043F\u0438\u043A \u0441 \u0434\u0430\u043D\u043D\u044B\u043C\u0438 \u0441 \u043F\u0443\u043B\u044C\u0442\u0430</span>
rospy<span class="token punctuation">.</span>Subscriber<span class="token punctuation">(</span><span class="token string">&#39;mavros/rc/in&#39;</span><span class="token punctuation">,</span> RCIn<span class="token punctuation">,</span> rc_callback<span class="token punctuation">)</span>

rospy<span class="token punctuation">.</span>spin<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="set_mode" tabindex="-1"><a class="header-anchor" href="#set_mode" aria-hidden="true">#</a> #</h3>`,2),$=n("\u0421\u043C\u0435\u043D\u0438\u0442\u044C "),nn=n("\u0440\u0435\u0436\u0438\u043C \u043F\u043E\u043B\u0435\u0442\u0430"),sn=n(" \u043D\u0430 \u043F\u0440\u043E\u0438\u0437\u0432\u043E\u043B\u044C\u043D\u044B\u0439:"),an=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>srv <span class="token keyword">import</span> SetMode

set_mode <span class="token operator">=</span> rospy<span class="token punctuation">.</span>ServiceProxy<span class="token punctuation">(</span><span class="token string">&#39;mavros/set_mode&#39;</span><span class="token punctuation">,</span> SetMode<span class="token punctuation">)</span>

<span class="token comment"># ...</span>

set_mode<span class="token punctuation">(</span>custom_mode<span class="token operator">=</span><span class="token string">&#39;STABILIZED&#39;</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="flip" tabindex="-1"><a class="header-anchor" href="#flip" aria-hidden="true">#</a> #</h3><p>\u0424\u043B\u0438\u043F:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> math

PI_2 <span class="token operator">=</span> math<span class="token punctuation">.</span>pi <span class="token operator">/</span> <span class="token number">2</span>

<span class="token keyword">def</span> <span class="token function">flip</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    start <span class="token operator">=</span> get_telemetry<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># memorize starting position</span>

    set_rates<span class="token punctuation">(</span>thrust<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># bump up</span>
    rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>

    set_rates<span class="token punctuation">(</span>pitch_rate<span class="token operator">=</span><span class="token number">30</span><span class="token punctuation">,</span> thrust<span class="token operator">=</span><span class="token number">0.2</span><span class="token punctuation">)</span>  <span class="token comment"># pitch flip</span>
    <span class="token comment"># set_rates(roll_rate=30, thrust=0.2)  # roll flip</span>

    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
        telem <span class="token operator">=</span> get_telemetry<span class="token punctuation">(</span><span class="token punctuation">)</span>
        flipped <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>telem<span class="token punctuation">.</span>pitch<span class="token punctuation">)</span> <span class="token operator">&gt;</span> PI_2 <span class="token keyword">or</span> <span class="token builtin">abs</span><span class="token punctuation">(</span>telem<span class="token punctuation">.</span>roll<span class="token punctuation">)</span> <span class="token operator">&gt;</span> PI_2
        <span class="token keyword">if</span> flipped<span class="token punctuation">:</span>
            <span class="token keyword">break</span>

    rospy<span class="token punctuation">.</span>loginfo<span class="token punctuation">(</span><span class="token string">&#39;finish flip&#39;</span><span class="token punctuation">)</span>
    set_position<span class="token punctuation">(</span>x<span class="token operator">=</span>start<span class="token punctuation">.</span>x<span class="token punctuation">,</span> y<span class="token operator">=</span>start<span class="token punctuation">.</span>y<span class="token punctuation">,</span> z<span class="token operator">=</span>start<span class="token punctuation">.</span>z<span class="token punctuation">,</span> yaw<span class="token operator">=</span>start<span class="token punctuation">.</span>yaw<span class="token punctuation">)</span>  <span class="token comment"># finish flip</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>navigate<span class="token punctuation">(</span>z<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> speed<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> frame_id<span class="token operator">=</span><span class="token string">&#39;body&#39;</span><span class="token punctuation">,</span> auto_arm<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># take off</span>
rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>

rospy<span class="token punctuation">.</span>loginfo<span class="token punctuation">(</span><span class="token string">&#39;flip&#39;</span><span class="token punctuation">)</span>
flip<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div>`,4),tn=n("\u041D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435 "),pn=n("\u0441\u043F\u0435\u0446\u0438\u0430\u043B\u044C\u043D\u043E\u0439 \u0441\u0431\u043E\u0440\u043A\u0438 PX4 \u0434\u043B\u044F \u041A\u043B\u0435\u0432\u0435\u0440\u0430"),on=n(". \u041F\u0435\u0440\u0435\u0434 \u0432\u044B\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u0435\u043C \u0444\u043B\u0438\u043F\u0430 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u043F\u0440\u0438\u043D\u044F\u0442\u044C \u0432\u0441\u0435 \u043C\u0435\u0440\u044B \u0431\u0435\u0437\u043E\u043F\u0430\u0441\u043D\u043E\u0441\u0442\u0438."),en=o(`<h3 id="calibrate-gyro" tabindex="-1"><a class="header-anchor" href="#calibrate-gyro" aria-hidden="true">#</a> #</h3><p>\u041F\u0440\u043E\u0438\u0437\u0432\u0435\u0441\u0442\u0438 \u043A\u0430\u043B\u0438\u0431\u0440\u043E\u0432\u043A\u0443 \u0433\u0438\u0440\u043E\u0441\u043A\u043E\u043F\u0430:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> pymavlink <span class="token keyword">import</span> mavutil
<span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>srv <span class="token keyword">import</span> CommandLong
<span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> State

send_command <span class="token operator">=</span> rospy<span class="token punctuation">.</span>ServiceProxy<span class="token punctuation">(</span><span class="token string">&#39;/mavros/cmd/command&#39;</span><span class="token punctuation">,</span> CommandLong<span class="token punctuation">)</span>

<span class="token keyword">def</span> <span class="token function">calibrate_gyro</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    rospy<span class="token punctuation">.</span>loginfo<span class="token punctuation">(</span><span class="token string">&#39;Calibrate gyro&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> send_command<span class="token punctuation">(</span>command<span class="token operator">=</span>mavutil<span class="token punctuation">.</span>mavlink<span class="token punctuation">.</span>MAV_CMD_PREFLIGHT_CALIBRATION<span class="token punctuation">,</span> param1<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>success<span class="token punctuation">:</span>
        <span class="token keyword">return</span> <span class="token boolean">False</span>

    calibrating <span class="token operator">=</span> <span class="token boolean">False</span>
    <span class="token keyword">while</span> <span class="token keyword">not</span> rospy<span class="token punctuation">.</span>is_shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        state <span class="token operator">=</span> rospy<span class="token punctuation">.</span>wait_for_message<span class="token punctuation">(</span><span class="token string">&#39;mavros/state&#39;</span><span class="token punctuation">,</span> State<span class="token punctuation">)</span>
        <span class="token keyword">if</span> state<span class="token punctuation">.</span>system_status <span class="token operator">==</span> mavutil<span class="token punctuation">.</span>mavlink<span class="token punctuation">.</span>MAV_STATE_CALIBRATING <span class="token keyword">or</span> state<span class="token punctuation">.</span>system_status <span class="token operator">==</span> mavutil<span class="token punctuation">.</span>mavlink<span class="token punctuation">.</span>MAV_STATE_UNINIT<span class="token punctuation">:</span>
            calibrating <span class="token operator">=</span> <span class="token boolean">True</span>
        <span class="token keyword">elif</span> calibrating <span class="token keyword">and</span> state<span class="token punctuation">.</span>system_status <span class="token operator">==</span> mavutil<span class="token punctuation">.</span>mavlink<span class="token punctuation">.</span>MAV_STATE_STANDBY<span class="token punctuation">:</span>
            rospy<span class="token punctuation">.</span>loginfo<span class="token punctuation">(</span><span class="token string">&#39;Calibrating finished&#39;</span><span class="token punctuation">)</span>
            <span class="token keyword">return</span> <span class="token boolean">True</span>

calibrate_gyro<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">\u0421\u041E\u0412\u0415\u0422</p><p>\u0412 \u043F\u0440\u043E\u0446\u0435\u0441\u0441\u0435 \u043A\u0430\u043B\u0438\u0431\u0440\u043E\u0432\u043A\u0438 \u0433\u0438\u0440\u043E\u0441\u043A\u043E\u043F\u043E\u0432 \u0434\u0440\u043E\u043D \u043D\u0435\u043B\u044C\u0437\u044F \u0434\u0432\u0438\u0433\u0430\u0442\u044C.</p></div><h3 id="aruco-detect-enabled" tabindex="-1"><a class="header-anchor" href="#aruco-detect-enabled" aria-hidden="true">#</a> #</h3>`,5),cn=n("\u0414\u0438\u043D\u0430\u043C\u0438\u0447\u0435\u0441\u043A\u0438 \u0432\u043A\u043B\u044E\u0447\u0430\u0442\u044C \u0438 \u043E\u0442\u043A\u043B\u044E\u0447\u0430\u0442\u044C "),ln=n("\u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u0432\u0430\u043D\u0438\u0435 ArUco-\u043C\u0430\u0440\u043A\u0435\u0440\u043E\u0432"),un=n(" (\u043D\u0430\u043F\u0440\u0438\u043C\u0435\u0440, \u0434\u043B\u044F \u044D\u043A\u043E\u043D\u043E\u043C\u0438\u0438 \u0440\u0435\u0441\u0443\u0440\u0441\u043E\u0432 \u043F\u0440\u043E\u0446\u0435\u0441\u0441\u043E\u0440\u0430):"),rn=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> rospy
<span class="token keyword">import</span> dynamic_reconfigure<span class="token punctuation">.</span>client

client <span class="token operator">=</span> dynamic_reconfigure<span class="token punctuation">.</span>client<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token string">&#39;aruco_detect&#39;</span><span class="token punctuation">)</span>

<span class="token comment"># \u0412\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u0432\u0430\u043D\u0438\u0435 \u043C\u0430\u0440\u043A\u0435\u0440\u043E\u0432</span>
client<span class="token punctuation">.</span>update_configuration<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;enabled&#39;</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">}</span><span class="token punctuation">)</span>

rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>

<span class="token comment"># \u0412\u044B\u043A\u043B\u044E\u0447\u0438\u0442\u044C \u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u0432\u0430\u043D\u0438\u0435 \u043C\u0430\u0440\u043A\u0435\u0440\u043E\u0432</span>
client<span class="token punctuation">.</span>update_configuration<span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token string">&#39;enabled&#39;</span><span class="token punctuation">:</span> <span class="token boolean">True</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="wait-global-position" tabindex="-1"><a class="header-anchor" href="#wait-global-position" aria-hidden="true">#</a> #</h3>`,2),kn=n("\u041E\u0436\u0438\u0434\u0430\u0442\u044C \u043F\u043E\u044F\u0432\u043B\u0435\u043D\u0438\u044F \u0433\u043B\u043E\u0431\u0430\u043B\u044C\u043D\u043E\u0439 \u043F\u043E\u0437\u0438\u0446\u0438\u0438 (\u043E\u043A\u043E\u043D\u0447\u0430\u043D\u0438\u044F \u0438\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u0438 "),dn=n("GPS-\u043F\u0440\u0438\u0435\u043C\u043D\u0438\u043A\u0430"),mn=n("):"),hn=o(`<div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> math

<span class="token keyword">while</span> <span class="token keyword">not</span> rospy<span class="token punctuation">.</span>is_shutdown<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> math<span class="token punctuation">.</span>isfinite<span class="token punctuation">(</span>get_telemetry<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>lat<span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">break</span>
    rospy<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">0.2</span><span class="token punctuation">)</span>
</code></pre></div><h3 id="get-param" tabindex="-1"><a class="header-anchor" href="#get-param" aria-hidden="true">#</a> #</h3><p>\u0421\u0447\u0438\u0442\u0430\u0442\u044C \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440 \u043F\u043E\u043B\u0435\u0442\u043D\u043E\u0433\u043E \u043A\u043E\u043D\u0442\u0440\u043E\u043B\u043B\u0435\u0440\u0430:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>srv <span class="token keyword">import</span> ParamGet
<span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> ParamValue

param_get <span class="token operator">=</span> rospy<span class="token punctuation">.</span>ServiceProxy<span class="token punctuation">(</span><span class="token string">&#39;mavros/param/get&#39;</span><span class="token punctuation">,</span> ParamGet<span class="token punctuation">)</span>

<span class="token comment"># \u0421\u0447\u0438\u0442\u0430\u0442\u044C \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440 \u0442\u0438\u043F\u0430 INT</span>
value <span class="token operator">=</span> param_get<span class="token punctuation">(</span>param_id<span class="token operator">=</span><span class="token string">&#39;COM_FLTMODE1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span>integer

<span class="token comment"># \u0421\u0447\u0438\u0442\u0430\u0442\u044C \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440 \u0442\u0438\u043F\u0430 FLOAT</span>
value <span class="token operator">=</span> param_get<span class="token punctuation">(</span>param_id<span class="token operator">=</span><span class="token string">&#39;MPC_Z_P&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">.</span><span class="token builtin">float</span>
</code></pre></div><h3 id="set-param" tabindex="-1"><a class="header-anchor" href="#set-param" aria-hidden="true">#</a> #</h3><p>\u0418\u0437\u043C\u0435\u043D\u0438\u0442\u044C \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440 \u043F\u043E\u043B\u0435\u0442\u043D\u043E\u0433\u043E \u043A\u043E\u043D\u0442\u0440\u043E\u043B\u043B\u0435\u0440\u0430:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>srv <span class="token keyword">import</span> ParamSet
<span class="token keyword">from</span> mavros_msgs<span class="token punctuation">.</span>msg <span class="token keyword">import</span> ParamValue

param_set <span class="token operator">=</span> rospy<span class="token punctuation">.</span>ServiceProxy<span class="token punctuation">(</span><span class="token string">&#39;mavros/param/set&#39;</span><span class="token punctuation">,</span> ParamSet<span class="token punctuation">)</span>

<span class="token comment"># \u0418\u0437\u043C\u0435\u043D\u0438\u0442\u044C \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440 \u0442\u0438\u043F\u0430 INT:</span>
param_set<span class="token punctuation">(</span>param_id<span class="token operator">=</span><span class="token string">&#39;COM_FLTMODE1&#39;</span><span class="token punctuation">,</span> value<span class="token operator">=</span>ParamValue<span class="token punctuation">(</span>integer<span class="token operator">=</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

<span class="token comment"># \u0418\u0437\u043C\u0435\u043D\u0438\u0442\u044C \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440 \u0442\u0438\u043F\u0430 FLOAT:</span>
param_set<span class="token punctuation">(</span>param_id<span class="token operator">=</span><span class="token string">&#39;MPC_Z_P&#39;</span><span class="token punctuation">,</span> value<span class="token operator">=</span>ParamValue<span class="token punctuation">(</span>real<span class="token operator">=</span><span class="token number">1.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div>`,7);function _n(yn,gn){const t=c("RouterLink"),e=c("ExternalLinkIcon");return u(),r(i,null,[d,s("p",null,[m,a(t,{to:"/ru/frames.html#navigate_target"},{default:p(()=>[h]),_:1}),_]),s("p",null,[y,a(t,{to:"/ru/aruco_map.html"},{default:p(()=>[g]),_:1}),b]),f,s("p",null,[v,a(t,{to:"/ru/simple_offboard.html#navigate"},{default:p(()=>[w]),_:1}),x]),P,s("p",null,[S,T,I,a(t,{to:"/ru/frames.html"},{default:p(()=>[D]),_:1}),A]),B,s("p",null,[z,C,M,a(t,{to:"/ru/frames.html"},{default:p(()=>[E]),_:1}),L,s("a",V,[R,a(e)]),F]),N,s("p",null,[O,a(t,{to:"/ru/mavros.html"},{default:p(()=>[G]),_:1}),U]),q,s("p",null,[Z,a(t,{to:"/ru/mavlink.html"},{default:p(()=>[H]),_:1}),Y]),X,s("p",null,[j,s("a",J,[K,a(e)]),Q]),W,s("p",null,[$,a(t,{to:"/ru/modes.html"},{default:p(()=>[nn]),_:1}),sn]),an,s("p",null,[tn,a(t,{to:"/ru/firmware.html#%D0%BF%D1%80%D0%BE%D1%88%D0%B8%D0%B2%D0%BA%D0%B0-%D0%B4%D0%BB%D1%8F-%D0%BA%D0%BB%D0%B5%D0%B2%D0%B5%D1%80%D0%B0"},{default:p(()=>[pn]),_:1}),on]),en,s("p",null,[cn,a(t,{to:"/ru/aruco_marker.html"},{default:p(()=>[ln]),_:1}),un]),rn,s("p",null,[kn,a(t,{to:"/ru/gps.html"},{default:p(()=>[dn]),_:1}),mn]),hn],64)}var fn=l(k,[["render",_n],["__file","snippets.html.vue"]]);export{fn as default};
