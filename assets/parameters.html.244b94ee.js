import{_ as d,r as a,o as i,c as r,a as t,b as o,w as n,F as _,d as e,e as c}from"./app.4f6a4bec.js";const h={},u=t("h1",{id:"px4-parameters",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#px4-parameters","aria-hidden":"true"},"#"),e(" PX4 Parameters")],-1),m=e("Full documentation on PX4 parameters: "),p={href:"https://docs.px4.io/master/en/advanced_config/parameter_reference.html",target:"_blank",rel:"noopener noreferrer"},f=e("https://docs.px4.io/master/en/advanced_config/parameter_reference.html"),g=e("."),E=e("For changing PX4 parameters, use QGroundControl software, "),b=e("connect to Clover over Wi-Fi"),v=e(" or USB. Go to "),P=t("em",null,"Vehicle Setup",-1),F=e(" panel (click on the QGroundControl logo in the top-left corner) and choose "),S=t("em",null,"Parameters",-1),y=e(" menu."),C=t("h2",{id:"recommended-values",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#recommended-values","aria-hidden":"true"},"#"),e(" Recommended values")],-1),L=t("h3",{id:"common-parameters",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#common-parameters","aria-hidden":"true"},"#"),e(" Common parameters")],-1),x=t("thead",null,[t("tr",null,[t("th",null,"Parameter"),t("th",null,"Value"),t("th",null,"Comment")])],-1),A=t("tr",null,[t("td",null,[t("code",null,"SENS_FLOW_ROT")]),t("td",null,[e("0 ("),t("em",null,"No rotation"),e(")")]),t("td",null,[e("If using "),t("em",null,"PX4Flow"),e(" hardware, keep the default value")])],-1),w=t("td",null,[t("code",null,"SENS_FLOW_MINHGT")],-1),O=t("td",null,"0.0",-1),T=e("For "),M=e("VL53L1X"),N=e(" rangefinder"),I=t("td",null,[t("code",null,"SENS_FLOW_MAXHGT")],-1),V=t("td",null,"4.0",-1),k=e("For "),D=e("VL53L1X"),G=e(" rangefinder"),K=t("tr",null,[t("td",null,[t("code",null,"SENS_FLOW_MAXR")]),t("td",null,"10.0"),t("td")],-1),X=t("tr",null,[t("td",null,[t("code",null,"SYS_HAS_MAG")]),t("td",null,"0"),t("td",null,[e("If impossible to run the magnetometer ("),t("em",null,"No mags found"),e(" error)")])],-1),R=t("h3",{id:"estimator-subsystem-parameters",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#estimator-subsystem-parameters","aria-hidden":"true"},"#"),e(" Estimator subsystem parameters")],-1),W=e("In case of using LPE ("),Y=e("COEX patched firmware"),H=e("):"),U=t("thead",null,[t("tr",null,[t("th",null,"Parameter"),t("th",null,"Value"),t("th",null,"Comment")])],-1),z=t("td",null,[t("code",null,"LPE_FUSION")],-1),B=t("td",null,"86",-1),Q=e("Checkboxes: "),q=t("em",null,"flow",-1),Z=e(" + "),j=t("em",null,"vis",-1),J=e(" + "),$=t("em",null,"land Detector",-1),tt=e(" + "),et=t("em",null,"gyro comp",-1),ot=e(". If flying over horizontal floor "),lt=t("em",null,"pub agl as lpos down",-1),nt=e(" checkbox is allowed."),st=t("br",null,null,-1),at=e("Details: "),dt=e("Optical Flow"),it=e(", "),rt=e("ArUco markers"),_t=e(", "),ct=e("GPS"),ht=e("."),ut=t("tr",null,[t("td",null,[t("code",null,"LPE_VIS_DELAY")]),t("td",null,"0.0"),t("td")],-1),mt=t("tr",null,[t("td",null,[t("code",null,"LPE_VIS_Z")]),t("td",null,"0.1"),t("td")],-1),pt=t("tr",null,[t("td",null,[t("code",null,"LPE_FLW_SCALE")]),t("td",null,"1.0"),t("td")],-1),ft=t("tr",null,[t("td",null,[t("code",null,"LPE_FLW_R")]),t("td",null,"0.2"),t("td")],-1),gt=t("tr",null,[t("td",null,[t("code",null,"LPE_FLW_RR")]),t("td",null,"0.0"),t("td")],-1),Et=t("tr",null,[t("td",null,[t("code",null,"LPE_FLW_QMIN")]),t("td",null,"10"),t("td")],-1),bt=t("td",null,[t("code",null,"ATT_W_EXT_HDG")],-1),vt=t("td",null,"0.5",-1),Pt=e("Enabling usage of external yaw angle (when navigating using "),Ft=e("markers map"),St=e(")"),yt=t("tr",null,[t("td",null,[t("code",null,"ATT_EXT_HDG_M")]),t("td",null,[e("1 ("),t("em",null,"Vision"),e(")")]),t("td")],-1),Ct=t("tr",null,[t("td",null,[t("code",null,"ATT_W_MAG")]),t("td",null,"0"),t("td",null,"Disabling usage of the magnetometer (when navigating indoor)")],-1),Lt=t("p",null,"In case of using EKF2 (official firmware):",-1),xt=t("thead",null,[t("tr",null,[t("th",null,"Parameter"),t("th",null,"Value"),t("th",null,"Comment")])],-1),At=t("td",null,[t("code",null,"EKF2_AID_MASK")],-1),wt=t("td",null,"27",-1),Ot=e("Checkboxes: (optionally) "),Tt=t("em",null,"gps",-1),Mt=e(" + "),Nt=t("em",null,"flow",-1),It=e(" + "),Vt=t("em",null,"vision position",-1),kt=e(" + "),Dt=t("em",null,"vision yaw",-1),Gt=e("."),Kt=t("br",null,null,-1),Xt=e("Details: "),Rt=e("Optical Flow"),Wt=e(", "),Yt=e("ArUco markers"),Ht=e(", "),Ut=e("GPS"),zt=e("."),Bt=t("tr",null,[t("td",null,[t("code",null,"EKF2_OF_DELAY")]),t("td",null,"0"),t("td")],-1),Qt=t("tr",null,[t("td",null,[t("code",null,"EKF2_OF_QMIN")]),t("td",null,"10"),t("td")],-1),qt=t("tr",null,[t("td",null,[t("code",null,"EKF2_OF_N_MIN")]),t("td",null,"0.05"),t("td")],-1),Zt=t("tr",null,[t("td",null,[t("code",null,"EKF2_OF_N_MAX")]),t("td",null,"0.2"),t("td")],-1),jt=t("td",null,[t("code",null,"EKF2_HGT_MODE")],-1),Jt=t("td",null,[e("2 ("),t("em",null,"Range sensor"),e(")")],-1),$t=e("If the "),te=e("rangefinder"),ee=e(" is present and flying over horizontal floor"),oe=t("tr",null,[t("td",null,[t("code",null,"EKF2_EVA_NOISE")]),t("td",null,"0.1"),t("td")],-1),le=t("tr",null,[t("td",null,[t("code",null,"EKF2_EVP_NOISE")]),t("td",null,"0.1"),t("td")],-1),ne=t("tr",null,[t("td",null,[t("code",null,"EKF2_EV_DELAY")]),t("td",null,"0"),t("td")],-1),se=t("tr",null,[t("td",null,[t("code",null,"EKF2_MAG_TYPE")]),t("td",null,[e("5 ("),t("em",null,"None"),e(")")]),t("td",null,"Disabling usage of the magnetometer (when navigating indoor)")],-1),ae={class:"custom-container tip"},de=t("p",{class:"custom-container-title"},"TIP",-1),ie=e("See also: list of default parameters of the "),re=e("Clover simulator"),_e=e(": "),ce={href:"https://github.com/CopterExpress/clover/blob/master/clover_simulation/airframes/4500_clover",target:"_blank",rel:"noopener noreferrer"},he=e("https://github.com/CopterExpress/clover/blob/master/clover_simulation/airframes/4500_clover"),ue=e("."),me=c('<h2 id="additional-information" tabindex="-1"><a class="header-anchor" href="#additional-information" aria-hidden="true">#</a> Additional information</h2><p>The <code>SYS_MC_EST_GROUP</code> parameter defines the estimator subsystem to use.</p><p>Estimator subsystem is a group of modules that calculates the current state of the copter using readings from the sensors. The copter state includes:</p><ul><li>Angle rate of the copter \u2013 pitch_rate, roll_rate, yaw_rate;</li><li>Copter orientation (in the local coordinate system) \u2013 pitch, roll, yaw (one of presentations);</li><li>Copter position (in the local coordinate system) \u2013 x, y, z;</li><li>Copter speed (in the local coordinate system) \u2013 vx, vy, vz;</li><li>Global coordinates of the copter \u2013 latitude, longitude, altitude;</li><li>Altitude above the surface;</li><li>Other parameters (the drift of gyroscopes, wind speed, etc.).</li></ul><p><code>SYS_AUTOCONFIG</code> \u2014 resets all parameters (sets to 1).</p><h2 id="ekf2" tabindex="-1"><a class="header-anchor" href="#ekf2" aria-hidden="true">#</a> EKF2</h2><p><code>EKF2_AID_MASK</code> \u2014 selects sensors that are used by EKF2 to calculate the copter state.</p><p><code>EKF2_HGT_MODE</code> is the main source of height data (z in the local coordinate system):</p><ul><li>0 \u2013 pressure reading on the barometer.</li><li>1 \u2013 GPS.</li><li>2 \u2013 distance meter (for example, vl53l1x).</li><li>3 \u2013 data from VPE.</li></ul><p>Variant 2 is the most accurate; however, it is correct to use it only if the surface the copter flies over is flat. Otherwise, the Z axis origin will move up and down with the altitude of the surface.</p><h2 id="multicopter-position-control" tabindex="-1"><a class="header-anchor" href="#multicopter-position-control" aria-hidden="true">#</a> Multicopter Position Control</h2><p>These parameters adjust the flight of the copter by position (POSCTL, OFFBOARD, AUTO modes).</p><p><code>MPC_THR_HOVER</code> \u2014 hovering throttle. This option is to set to the approximate percentage of throttle needed to make the copter maintain its altitude. If copter has a tendency to gain or lose altitude during the hovering mode, reduce or increase this value.</p><p><code>MPC_XY_P</code> \u2013 position factor <em>P</em> of the ESC. This parameter affects how sharply the copter will react to the position commands. A too high value may cause overshoots.</p><p><code>MPC_XY_VEL_P</code> \u2013 speed factor <em>P</em> of the ESC. This parameter also affects the accuracy and sharpness of copter execution of the given position. A too high value may cause overshoots.</p><p><code>MPC_XY_VEL_MAX</code> \u2014 the maximum horizontal speed in POSCTL, OFFBOARD, AUTO modes.</p><p><code>MPC_Z_P</code>, <code>MPC_Z_VEL_P</code> \u2013 vertical position and speed factors <em>P</em> of the ESCs they determine the copter&#39;s ability to maintain the desired altitude.</p><p><code>MPC_LAND_SPEED</code> is the vertical velocity of landing in the LAND mode.</p><h2 id="lpe-q-attitude-estimator" tabindex="-1"><a class="header-anchor" href="#lpe-q-attitude-estimator" aria-hidden="true">#</a> LPE + Q attitude estimator</h2><p>These parameters configure the behavior of the <code>lpe</code> and <code>q</code> modules, which compute the state (orientation, position) of the copter. These parameters apply <strong>only</strong> if the <code>SYS_MC_EST_GROUP</code> parameter is set to <code>1</code> (local_position_estimator, attitude_estimator_q).</p><h2 id="commander" tabindex="-1"><a class="header-anchor" href="#commander" aria-hidden="true">#</a> Commander</h2><p>Prearm checks, switching the modes and states of the copter.</p><h2 id="sensors" tabindex="-1"><a class="header-anchor" href="#sensors" aria-hidden="true">#</a> Sensors</h2><p>Enabling, disabling and configuring various sensors.</p>',24);function pe(fe,ge){const s=a("ExternalLinkIcon"),l=a("RouterLink");return i(),r(_,null,[u,t("p",null,[m,t("a",p,[f,o(s)]),g]),t("p",null,[E,o(l,{to:"/en/gcs_bridge.html"},{default:n(()=>[b]),_:1}),v,P,F,S,y]),C,L,t("table",null,[x,t("tbody",null,[A,t("tr",null,[w,O,t("td",null,[T,o(l,{to:"/en/laser.html"},{default:n(()=>[M]),_:1}),N])]),t("tr",null,[I,V,t("td",null,[k,o(l,{to:"/en/laser.html"},{default:n(()=>[D]),_:1}),G])]),K,X])]),R,t("p",null,[W,o(l,{to:"/en/firmware.html"},{default:n(()=>[Y]),_:1}),H]),t("table",null,[U,t("tbody",null,[t("tr",null,[z,B,t("td",null,[Q,q,Z,j,J,$,tt,et,ot,lt,nt,st,at,o(l,{to:"/en/optical_flow.html"},{default:n(()=>[dt]),_:1}),it,o(l,{to:"/en/aruco_map.html"},{default:n(()=>[rt]),_:1}),_t,o(l,{to:"/en/gps.html"},{default:n(()=>[ct]),_:1}),ht])]),ut,mt,pt,ft,gt,Et,t("tr",null,[bt,vt,t("td",null,[Pt,o(l,{to:"/en/aruco_map.html"},{default:n(()=>[Ft]),_:1}),St])]),yt,Ct])]),Lt,t("table",null,[xt,t("tbody",null,[t("tr",null,[At,wt,t("td",null,[Ot,Tt,Mt,Nt,It,Vt,kt,Dt,Gt,Kt,Xt,o(l,{to:"/en/optical_flow.html"},{default:n(()=>[Rt]),_:1}),Wt,o(l,{to:"/en/aruco_map.html"},{default:n(()=>[Yt]),_:1}),Ht,o(l,{to:"/en/gps.html"},{default:n(()=>[Ut]),_:1}),zt])]),Bt,Qt,qt,Zt,t("tr",null,[jt,Jt,t("td",null,[$t,o(l,{to:"/en/laser.html"},{default:n(()=>[te]),_:1}),ee])]),oe,le,ne,se])]),t("div",ae,[de,t("p",null,[ie,o(l,{to:"/en/simulation.html"},{default:n(()=>[re]),_:1}),_e,t("a",ce,[he,o(s)]),ue])]),me],64)}var be=d(h,[["render",pe],["__file","parameters.html.vue"]]);export{be as default};
