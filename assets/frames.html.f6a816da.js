import{_ as r,r as a,o as l,c as d,a as t,b as o,w as s,F as _,d as e}from"./app.4f6a4bec.js";import{_ as c}from"./frames.ecd08a60.js";const h={},u=t("h1",{id:"coordinate-systems-frames",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#coordinate-systems-frames","aria-hidden":"true"},"#"),e(" Coordinate systems (frames)")],-1),m=t("p",null,[t("img",{src:c,alt:"TF2 Clover frames"})],-1),f=t("p",null,[e("Main frames in the "),t("code",null,"clover"),e(" package:")],-1),p=t("li",null,[t("code",null,"map"),e(" has its origin at the flight controller initialization point and may be considered stationary. It is shown as a white grid on the image above;")],-1),g=t("li",null,[t("code",null,"base_link"),e(" is rigidly bound to the drone. It is shown by the simplified drone model on the image above;")],-1),b=t("li",null,[t("code",null,"body"),e(" is bound to the drone, but its Z axis points up regardless of the drone's pitch and roll. It is shown by the red, blue and green lines in the illustration;")],-1),v=t("a",{name:"navigate_target"},null,-1),y=t("code",null,"navigate_target",-1),w=e(" is bound to the current navigation target (as set by the "),k=e("navigate"),x=e(" service);"),I=t("li",null,[t("code",null,"setpoint"),e(" is current position setpoint;")],-1),C=t("code",null,"main_camera_optical",-1),R=e(" is the coordinate system, "),S=e("linked to the main camera"),N=e(";"),P=e("Additional frames become available when "),T=e("ArUco positioning system"),z=e(" is active:"),F=t("code",null,"aruco_map",-1),L=e(" is bound to the currently active "),A=e("ArUco map"),B=e(";"),E=t("code",null,"aruco_N",-1),O=e(" is bound to the "),V=e("marker"),D=e(" with ID=N."),U={class:"custom-container tip"},Z=t("p",{class:"custom-container-title"},"TIP",-1),j=e("Frames that are bound to the drone are oriented according to "),q={href:"http://www.ros.org/reps/rep-0103.html",target:"_blank",rel:"noopener noreferrer"},M=e("the ROS convention"),X=e(": the X axis points forward, Y to the left, and Z up."),Y=e("3D visualization of the coordinate systems can be viewed using "),G=e("rviz"),H=e("."),J=t("h2",{id:"tf2",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#tf2","aria-hidden":"true"},"#"),e(" tf2")],-1),K=e("Read more at "),Q={href:"http://wiki.ros.org/tf2",target:"_blank",rel:"noopener noreferrer"},W=e("http://wiki.ros.org/tf2"),$=t("p",null,[e("tf2 ROS package is used extensively in the Clover platform. tf2 is a set of libraries for C++, Python and other programming languages that are used to work with the frames. Internally, ROS nodes publish "),t("code",null,"TransformStamped"),e(" messages to "),t("code",null,"/tf"),e(" topic with transforms between frames at certain points in time.")],-1),tt=e("The "),et=t("code",null,"simple_offboard",-1),ot=e(" node can be used to request the drone position in an arbitrary frame by setting the "),nt=t("code",null,"frame_id",-1),st=e(" argument appropriately in a call to "),it=t("code",null,"get_telemetry",-1),at=e(" service."),rt=t("p",null,"tf2 can be used from Python to transform coordinates (for objects like PoseStamped and PointStamped) from one frame to another",-1);function lt(dt,_t){const n=a("RouterLink"),i=a("ExternalLinkIcon");return l(),d(_,null,[u,m,f,t("ul",null,[p,g,b,t("li",null,[v,y,w,o(n,{to:"/en/simple_offboard.html#navigate"},{default:s(()=>[k]),_:1}),x]),I,t("li",null,[C,R,o(n,{to:"/en/camera_setup.html#frame"},{default:s(()=>[S]),_:1}),N])]),t("p",null,[P,o(n,{to:"/en/aruco.html"},{default:s(()=>[T]),_:1}),z]),t("ul",null,[t("li",null,[F,L,o(n,{to:"/en/aruco_map.html"},{default:s(()=>[A]),_:1}),B]),t("li",null,[E,O,o(n,{to:"/en/aruco_marker.html"},{default:s(()=>[V]),_:1}),D])]),t("div",U,[Z,t("p",null,[j,t("a",q,[M,o(i)]),X])]),t("p",null,[Y,o(n,{to:"/en/rviz.html"},{default:s(()=>[G]),_:1}),H]),J,t("p",null,[K,t("a",Q,[W,o(i)])]),$,t("p",null,[tt,o(n,{to:"/en/simple_offboard.html"},{default:s(()=>[et]),_:1}),ot,nt,st,it,at]),rt],64)}var ut=r(h,[["render",lt],["__file","frames.html.vue"]]);export{ut as default};
