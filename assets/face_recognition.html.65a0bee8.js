import{_ as o,r as e,o as c,c as i,a,b as t,F as r,e as p,d as n}from"./app.4f6a4bec.js";import{_ as u,a as l,b as k,c as d,d as h,e as _}from"./tim_calib.4a8c7d2a.js";var g="/clover-vuepress/assets/screenshot.97a4ed36.jpeg";const m={},f=p('<h1 id="\u0441\u0438\u0441\u0442\u0435\u043C\u0430-\u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u0432\u0430\u043D\u0438\u044F-\u043B\u0438\u0446" tabindex="-1"><a class="header-anchor" href="#\u0441\u0438\u0441\u0442\u0435\u043C\u0430-\u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u0432\u0430\u043D\u0438\u044F-\u043B\u0438\u0446" aria-hidden="true">#</a> \u0421\u0438\u0441\u0442\u0435\u043C\u0430 \u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u0432\u0430\u043D\u0438\u044F \u043B\u0438\u0446</h1><h2 id="\u0432\u0432\u0435\u0434\u0435\u043D\u0438\u0435" tabindex="-1"><a class="header-anchor" href="#\u0432\u0432\u0435\u0434\u0435\u043D\u0438\u0435" aria-hidden="true">#</a> \u0412\u0432\u0435\u0434\u0435\u043D\u0438\u0435</h2><p>\u0412 \u043F\u043E\u0441\u043B\u0435\u0434\u043D\u0435\u0435 \u0432\u0440\u0435\u043C\u044F \u0441\u0438\u0441\u0442\u0435\u043C\u044B \u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u0432\u0430\u043D\u0438\u044F \u043B\u0438\u0446 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u044E\u0442\u0441\u044F \u0432\u0441\u0435 \u0448\u0438\u0440\u0435, \u043E\u0431\u043B\u0430\u0441\u0442\u044C \u043F\u0440\u0438\u043C\u0435\u043D\u0435\u043D\u0438\u044F \u044D\u0442\u043E\u0439 \u0442\u0435\u0445\u043D\u043E\u043B\u043E\u0433\u0438\u0438 \u043F\u043E\u0438\u0441\u0442\u0438\u043D\u0435 \u043E\u0433\u0440\u043E\u043C\u043D\u0430: \u043E\u0442 \u043E\u0431\u044B\u0447\u043D\u044B\u0445 \u0441\u0435\u043B\u0444\u0438-\u0434\u0440\u043E\u043D\u043E\u0432 \u0434\u043E \u0434\u0440\u043E\u043D\u043E\u0432-\u043F\u043E\u043B\u0438\u0446\u0435\u0439\u0441\u043A\u0438\u0445. \u0415\u0435 \u0438\u043D\u0442\u0435\u0433\u0440\u0430\u0446\u0438\u044F \u0432 \u0440\u0430\u0437\u043B\u0438\u0447\u043D\u044B\u0435 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430 \u043F\u0440\u043E\u0432\u043E\u0434\u0438\u0442\u0441\u044F \u043F\u043E\u0432\u0441\u0435\u043C\u0435\u0441\u0442\u043D\u043E. \u0421\u0430\u043C \u043F\u0440\u043E\u0446\u0435\u0441\u0441 \u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u0432\u0430\u043D\u0438\u044F \u0440\u0435\u0430\u043B\u044C\u043D\u043E \u0437\u0430\u0432\u043E\u0440\u0430\u0436\u0438\u0432\u0430\u0435\u0442, \u0438 \u044D\u0442\u043E \u0441\u043F\u043E\u0434\u0432\u0438\u0433\u043B\u043E \u043C\u0435\u043D\u044F \u0441\u0434\u0435\u043B\u0430\u0442\u044C \u043F\u0440\u043E\u0435\u043A\u0442 \u0441\u0432\u044F\u0437\u0430\u043D\u043D\u044B\u0439 \u0438\u043C\u0435\u043D\u043D\u043E \u0441 \u044D\u0442\u0438\u043C. \u0426\u0435\u043B\u044C\u044E \u043C\u043E\u0435\u0433\u043E \u0441\u0442\u0430\u0436\u0435\u0440\u0441\u043A\u043E\u0433\u043E \u043F\u0440\u043E\u0435\u043A\u0442\u0430 \u044F\u0432\u043B\u044F\u0435\u0442\u0441\u044F \u0441\u043E\u0437\u0434\u0430\u043D\u0438\u0435 \u043F\u0440\u043E\u0441\u0442\u043E\u0439 open source-\u043D\u043E\u0439 \u0441\u0438\u0441\u0442\u0435\u043C\u044B \u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u0432\u0430\u043D\u0438\u044F \u043B\u0438\u0446 \u0441 \u043A\u0432\u0430\u0434\u0440\u043E\u043A\u043E\u043F\u0442\u0435\u0440\u0430 \u041A\u043B\u0435\u0432\u0435\u0440. \u0414\u0430\u043D\u043D\u0430\u044F \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u0430 \u0431\u0435\u0440\u0435\u0442 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0441 \u043A\u0430\u043C\u0435\u0440\u044B \u043A\u0432\u0430\u0434\u0440\u043E\u043A\u043E\u043F\u0442\u0435\u0440\u0430, \u0430 \u0435\u0433\u043E \u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430 \u043F\u0440\u043E\u0438\u0441\u0445\u043E\u0434\u0438\u0442 \u0443\u0436\u0435 \u043D\u0430 \u043A\u043E\u043C\u043F\u044C\u044E\u0442\u0435\u0440\u0435. \u041F\u043E\u044D\u0442\u043E\u043C\u0443 \u0432\u0441\u0435 \u043E\u0441\u0442\u0430\u0432\u0448\u0438\u0435\u0441\u044F \u0438\u043D\u0441\u0442\u0440\u0443\u043A\u0446\u0438\u0438 \u0432\u044B\u043F\u043E\u043B\u043D\u044F\u044E\u0442\u0441\u044F \u043D\u0430 \u041F\u041A.</p><h2 id="\u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0430" tabindex="-1"><a class="header-anchor" href="#\u0440\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0430" aria-hidden="true">#</a> \u0420\u0430\u0437\u0440\u0430\u0431\u043E\u0442\u043A\u0430</h2>',4),y=n("\u041F\u0435\u0440\u0432\u043E\u0439 \u0437\u0430\u0434\u0430\u0447\u0435\u0439 \u0431\u044B\u043B\u043E \u043D\u0430\u0439\u0442\u0438 \u0430\u043B\u0433\u043E\u0440\u0438\u0442\u043C \u0441\u0430\u043C\u043E\u0433\u043E \u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u0432\u0430\u043D\u0438\u044F. \u0412 \u043A\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043F\u0443\u0442\u0438 \u0440\u0435\u0448\u0435\u043D\u0438\u044F \u043F\u0440\u043E\u0431\u043B\u0435\u043C\u044B \u0431\u044B\u043B\u043E \u0432\u044B\u0431\u0440\u0430\u043D\u043E \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C "),b={href:"https://github.com/ageitgey/face_recognition",target:"_blank",rel:"noopener noreferrer"},v=n("\u0433\u043E\u0442\u043E\u0432\u043E\u0435 API \u0434\u043B\u044F Python"),w=n(". \u0414\u0430\u043D\u043D\u043E\u0435 API \u0441\u043E\u0447\u0435\u0442\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u0435 \u0440\u044F\u0434 \u043F\u0440\u0435\u0438\u043C\u0443\u0449\u0435\u0441\u0442\u0432: \u0441\u043A\u043E\u0440\u043E\u0441\u0442\u044C \u0438 \u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C \u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u0432\u0430\u043D\u0438\u044F, \u0430 \u0442\u0430\u043A\u0436\u0435 \u043F\u0440\u043E\u0441\u0442\u043E\u0442\u0430 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u044F."),x=p(`<h2 id="\u0443\u0441\u0442\u0430\u043D\u043E\u0432\u043A\u0430" tabindex="-1"><a class="header-anchor" href="#\u0443\u0441\u0442\u0430\u043D\u043E\u0432\u043A\u0430" aria-hidden="true">#</a> \u0423\u0441\u0442\u0430\u043D\u043E\u0432\u043A\u0430</h2><p>\u0414\u043B\u044F \u043D\u0430\u0447\u0430\u043B\u0430 \u043D\u0443\u0436\u043D\u043E \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C \u0432\u0441\u0435 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u044B\u0435 \u0431\u0438\u0431\u043B\u0438\u043E\u0442\u0435\u043A\u0438:</p><div class="language-bash ext-sh"><pre class="language-bash"><code>pip <span class="token function">install</span> face_recognition
pip <span class="token function">install</span> opencv-python
</code></pre></div><p>\u0417\u0430\u0442\u0435\u043C \u0441\u043A\u0430\u0447\u0430\u0442\u044C \u0441\u0430\u043C \u0441\u043A\u0440\u0438\u043F\u0442 \u0438\u0437 \u0440\u0435\u043F\u043E\u0437\u0438\u0442\u043E\u0440\u0438\u044F:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/mmkuznecov/face_recognition_from_clever.git
</code></pre></div><h2 id="\u043E\u0431\u044A\u044F\u0441\u043D\u0435\u043D\u0438\u0435-\u043A\u043E\u0434\u0430" tabindex="-1"><a class="header-anchor" href="#\u043E\u0431\u044A\u044F\u0441\u043D\u0435\u043D\u0438\u0435-\u043A\u043E\u0434\u0430" aria-hidden="true">#</a> \u041E\u0431\u044A\u044F\u0441\u043D\u0435\u043D\u0438\u0435 \u043A\u043E\u0434\u0430</h2><p>\u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0430\u0435\u043C \u0431\u0438\u0431\u043B\u0438\u043E\u0442\u0435\u043A\u0438:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> face_recognition
<span class="token keyword">import</span> cv2
<span class="token keyword">import</span> os
<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
</code></pre></div><p><em><strong>\u0414\u0430\u043D\u043D\u044B\u0439 \u043A\u0443\u0441\u043E\u043A \u043A\u043E\u0434\u0430 \u043F\u0440\u0435\u0434\u043D\u0430\u0437\u043D\u0430\u0447\u0435\u043D \u0434\u043B\u044F Python 3. \u0412 Python 2.7 \u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0430\u0435\u043C urllib2 \u0432\u043C\u0435\u0441\u0442\u043E urllib:</strong></em></p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> urllib2
</code></pre></div><p>\u0421\u043E\u0437\u0434\u0430\u0435\u043C \u0441\u043F\u0438\u0441\u043E\u043A \u043A\u043E\u0434\u0438\u0440\u043E\u0432\u043E\u043A \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0439 \u0438 \u0441\u043F\u0438\u0441\u043E\u043A \u0438\u043C\u0435\u043D:</p><div class="language-python ext-py"><pre class="language-python"><code>faces_images<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">&#39;faces/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    faces_images<span class="token punctuation">.</span>append<span class="token punctuation">(</span>face_recognition<span class="token punctuation">.</span>load_image_file<span class="token punctuation">(</span><span class="token string">&#39;faces/&#39;</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>
known_face_encodings<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token keyword">for</span> i <span class="token keyword">in</span> faces_images<span class="token punctuation">:</span>
    known_face_encodings<span class="token punctuation">.</span>append<span class="token punctuation">(</span>face_recognition<span class="token punctuation">.</span>face_encodings<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
known_face_names<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>url
<span class="token keyword">for</span> i <span class="token keyword">in</span> os<span class="token punctuation">.</span>listdir<span class="token punctuation">(</span><span class="token string">&#39;faces/&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    i<span class="token operator">=</span>i<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;.&#39;</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    known_face_names<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>
</code></pre></div><p><em><strong>\u0414\u043E\u043F\u043E\u043B\u043D\u0435\u043D\u0438\u0435: \u0432\u0441\u0435 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0445\u0440\u0430\u043D\u044F\u0442\u0441\u044F \u0432 \u043F\u0430\u043F\u043A\u0435 faces \u0432 \u0444\u043E\u0440\u043C\u0430\u0442\u0435 name.jpg</strong></em></p><img src="`+g+'" width="50%"><img src="'+u+'" width="30%"><img src="'+l+`" width="30%"><p>\u0418\u043D\u0438\u0446\u0438\u0430\u043B\u0438\u0437\u0438\u0440\u0443\u0435\u043C \u043D\u0435\u043A\u043E\u0442\u043E\u0440\u044B\u0435 \u043F\u0435\u0440\u0435\u043C\u0435\u043D\u043D\u044B\u0435:</p><div class="language-python ext-py"><pre class="language-python"><code>face_locations <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
face_encodings <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
face_names <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
process_this_frame <span class="token operator">=</span> <span class="token boolean">True</span>
</code></pre></div><p>\u0411\u0435\u0440\u0435\u043C \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0438 \u043F\u0440\u0435\u043E\u0431\u0440\u0430\u0437\u0443\u0435\u043C \u0435\u0433\u043E \u0432 cv2 \u0444\u043E\u0440\u043C\u0430\u0442:</p><div class="language-python ext-py"><pre class="language-python"><code>req <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">&#39;http://192.168.11.1:8080/snapshot?topic=/main_camera/image_raw&#39;</span><span class="token punctuation">)</span>
arr <span class="token operator">=</span> np<span class="token punctuation">.</span>asarray<span class="token punctuation">(</span><span class="token builtin">bytearray</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
frame <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imdecode<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre></div><p><em><strong>\u0414\u043B\u044F Python 2.7:</strong></em></p><div class="language-python ext-py"><pre class="language-python"><code>req <span class="token operator">=</span> urllib2<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">&#39;http://192.168.11.1:8080/snapshot?topic=/main_camera/image_raw&#39;</span><span class="token punctuation">)</span>
arr <span class="token operator">=</span> np<span class="token punctuation">.</span>asarray<span class="token punctuation">(</span><span class="token builtin">bytearray</span><span class="token punctuation">(</span>req<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> dtype<span class="token operator">=</span>np<span class="token punctuation">.</span>uint8<span class="token punctuation">)</span>
frame <span class="token operator">=</span> cv2<span class="token punctuation">.</span>imdecode<span class="token punctuation">(</span>arr<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre></div>`,22),E=n("\u041E\u0431\u044A\u044F\u0441\u043D\u0435\u043D\u0438\u0435 \u0434\u0430\u043B\u044C\u043D\u0435\u0439\u0448\u0435\u0433\u043E \u043A\u043E\u0434\u0430 \u043C\u043E\u0436\u043D\u043E \u043D\u0430\u0439\u0442\u0438 \u043D\u0430 GitHub\u2019\u0435 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u043C\u043E\u0433\u043E API \u0432 \u043A\u043E\u043C\u043C\u0435\u043D\u0442\u0430\u0440\u0438\u044F\u0445 \u043A "),I={href:"https://github.com/ageitgey/face_recognition/blob/master/examples/facerec_from_webcam_faster.py",target:"_blank",rel:"noopener noreferrer"},q=n("\u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0435\u043C\u0443 \u0441\u043A\u0440\u0438\u043F\u0442\u0443"),C=p(`<h2 id="\u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435" tabindex="-1"><a class="header-anchor" href="#\u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435" aria-hidden="true">#</a> \u0418\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435</h2><p>\u0414\u043E\u0441\u0442\u0430\u0442\u043E\u0447\u043D\u043E \u043F\u043E\u0434\u043A\u043B\u044E\u0447\u0438\u0442\u044C\u0441\u044F \u043A &quot;\u041A\u043B\u0435\u0432\u0435\u0440\u0443&quot; \u0447\u0435\u0440\u0435\u0437 Wi-Fi \u0438 \u043F\u0440\u043E\u0432\u0435\u0440\u0438\u0442\u044C, \u043A\u043E\u0440\u0440\u0435\u043A\u0442\u043D\u043E \u043B\u0438 \u0440\u0430\u0431\u043E\u0442\u0430\u0435\u0442 \u0432\u0438\u0434\u0435\u043E\u0441\u0442\u0440\u0438\u043C \u0441 \u043A\u0430\u043C\u0435\u0440\u044B.</p><p>\u0417\u0430\u0442\u0435\u043C \u043F\u0440\u043E\u0441\u0442\u043E \u0437\u0430\u043F\u0443\u0441\u043A\u0430\u0435\u043C \u0441\u043A\u0440\u0438\u043F\u0442:</p><div class="language-bash ext-sh"><pre class="language-bash"><code>python recog.py
</code></pre></div><p>\u0418 \u043D\u0430 \u0432\u044B\u0445\u043E\u0434\u0435:</p><img src="`+k+'" width="50%"><img src="'+d+`" width="50%"><h2 id="\u0432\u043E\u0437\u043C\u043E\u0436\u043D\u044B\u0435-\u0442\u0440\u0443\u0434\u043D\u043E\u0441\u0442\u0438" tabindex="-1"><a class="header-anchor" href="#\u0432\u043E\u0437\u043C\u043E\u0436\u043D\u044B\u0435-\u0442\u0440\u0443\u0434\u043D\u043E\u0441\u0442\u0438" aria-hidden="true">#</a> \u0412\u043E\u0437\u043C\u043E\u0436\u043D\u044B\u0435 \u0442\u0440\u0443\u0434\u043D\u043E\u0441\u0442\u0438</h2><p>\u041F\u0440\u0438 \u0437\u0430\u043F\u0443\u0441\u043A\u0435 \u0441\u043A\u0440\u0438\u043F\u0442\u0430 \u043C\u043E\u0436\u0435\u0442 \u0432\u044B\u0441\u043A\u043E\u0447\u0438\u0442\u044C \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0430\u044F \u043E\u0448\u0438\u0431\u043A\u0430:</p><div class="language-python ext-py"><pre class="language-python"><code>    known_face_encodings<span class="token punctuation">.</span>append<span class="token punctuation">(</span>face_recognition<span class="token punctuation">.</span>face_encodings<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
IndexError<span class="token punctuation">:</span> <span class="token builtin">list</span> index out of <span class="token builtin">range</span>
</code></pre></div><p>\u0412 \u044D\u0442\u043E\u043C \u0441\u043B\u0443\u0447\u0430\u0435 \u043F\u043E\u0441\u0442\u0430\u0440\u0430\u0439\u0442\u0435\u0441\u044C \u043F\u0435\u0440\u0435\u0434\u0435\u043B\u0430\u0442\u044C \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0432 \u043F\u0430\u043F\u043A\u0435 faces, \u0432\u043E\u0437\u043C\u043E\u0436\u043D\u043E \u0438\u0437-\u0437\u0430 \u043F\u043B\u043E\u0445\u043E\u0433\u043E \u043A\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u0430 \u043D\u0435 \u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u0435\u0442 \u043B\u0438\u0446 \u043D\u0430 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F\u0445.</p><h2 id="\u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435-\u043A\u0430\u043B\u0438\u0431\u0440\u043E\u0432\u043A\u0438" tabindex="-1"><a class="header-anchor" href="#\u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435-\u043A\u0430\u043B\u0438\u0431\u0440\u043E\u0432\u043A\u0438" aria-hidden="true">#</a> \u0418\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435 \u043A\u0430\u043B\u0438\u0431\u0440\u043E\u0432\u043A\u0438</h2>`,12),V=n("\u0414\u043B\u044F \u043F\u043E\u0432\u044B\u0448\u0435\u043D\u0438\u044F \u0442\u043E\u0447\u043D\u043E\u0441\u0442\u0438 \u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u0432\u0430\u043D\u0438\u044F \u043C\u043E\u0436\u043D\u043E \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C \u043A\u0430\u043B\u0438\u0431\u0440\u043E\u0432\u043A\u0443 \u043A\u0430\u043C\u0435\u0440\u044B. \u041C\u043E\u0434\u0443\u043B\u044C \u0434\u043B\u044F \u043A\u0430\u043B\u0438\u0431\u0440\u043E\u0432\u043A\u0438 \u043C\u043E\u0436\u043D\u043E \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u0438\u0442\u044C, \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u044F "),z={href:"https://github.com/tinderad/clever_cam_calibration",target:"_blank",rel:"noopener noreferrer"},A=n("\u0441\u043F\u0435\u0446\u0438\u0430\u043B\u044C\u043D\u044B\u0439 \u043F\u0430\u043A\u0435\u0442"),F=n(". \u0418\u043D\u0441\u0442\u0440\u0443\u043A\u0446\u0438\u044E \u043F\u043E \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u043A\u0435 \u0438 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u044E \u043C\u043E\u0436\u043D\u043E \u043D\u0430\u0439\u0442\u0438 \u0432 \u0444\u0430\u0439\u043B\u0435 "),P={href:"http://calibration.md",target:"_blank",rel:"noopener noreferrer"},L=n("calibration.md"),H=n(". \u041F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u0430 \u0441 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u043D\u0438\u0435\u043C \u043A\u0430\u043B\u0438\u0431\u0440\u043E\u0432\u043E\u0447\u043D\u043E\u0433\u043E \u043F\u0430\u043A\u0435\u0442\u0430 \u043D\u0430\u0437\u044B\u0432\u0430\u0435\u0442\u0441\u044F recog_undist.py"),S=p(`<p><strong>\u041A\u0440\u0430\u0442\u043A\u043E\u0435 \u043F\u043E\u044F\u0441\u043D\u0435\u043D\u0438\u0435 \u043A\u043E\u0434\u0430:</strong></p><p>\u041F\u043E\u0434\u043A\u043B\u044E\u0447\u0430\u0435\u043C \u0443\u0441\u0442\u0430\u043D\u043E\u0432\u043B\u0435\u043D\u043D\u044B\u0439 \u043F\u0430\u043A\u0435\u0442:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">import</span> clever_cam_calibration<span class="token punctuation">.</span>clevercamcalib <span class="token keyword">as</span> ccc
</code></pre></div><p>\u0414\u043E\u0431\u0430\u0432\u043B\u044F\u0435\u043C \u0441\u043B\u0435\u0434\u0443\u044E\u0449\u0438\u0435 \u0441\u0442\u0440\u043E\u043A\u0438:</p><div class="language-python ext-py"><pre class="language-python"><code>height_or<span class="token punctuation">,</span> width_or<span class="token punctuation">,</span> depth_or <span class="token operator">=</span> frame<span class="token punctuation">.</span>shape
</code></pre></div><p>\u0422\u0430\u043A\u0438\u043C \u043E\u0431\u0440\u0430\u0437\u043E\u043C \u043F\u043E\u043B\u0443\u0447\u0430\u0435\u043C \u0438\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044E \u043E \u0440\u0430\u0437\u043C\u0435\u0440\u0435 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F, \u0433\u0434\u0435 height_or-\u044D\u0442\u043E \u0432\u044B\u0441\u043E\u0442\u0430 \u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u043E\u0433\u043E \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0432 \u043F\u0438\u043A\u0441\u0435\u043B\u044F\u0445, \u0430 width_or-\u0448\u0438\u0440\u0438\u043D\u0430. \u0417\u0430\u0442\u0435\u043C \u0438\u0441\u043F\u0440\u0430\u0432\u043B\u044F\u0435\u043C \u0438\u0441\u043A\u0430\u0436\u0435\u043D\u0438\u044F \u043E\u0440\u0438\u0433\u0438\u043D\u0430\u043B\u044C\u043D\u043E\u0433\u043E \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0438 \u043F\u043E\u043B\u0443\u0447\u0430\u0435\u043C \u0443\u0436\u0435 \u0435\u0433\u043E \u043F\u0430\u0440\u0430\u043C\u0435\u0442\u0440\u044B:</p><div class="language-python ext-py"><pre class="language-python"><code><span class="token keyword">if</span> height_or<span class="token operator">==</span><span class="token number">240</span> <span class="token keyword">and</span> width_or<span class="token operator">==</span><span class="token number">320</span><span class="token punctuation">:</span>
    frame<span class="token operator">=</span>ccc<span class="token punctuation">.</span>get_undistorted_image<span class="token punctuation">(</span>frame<span class="token punctuation">,</span>ccc<span class="token punctuation">.</span>CLEVER_FISHEYE_CAM_320<span class="token punctuation">)</span>
<span class="token keyword">elif</span> height_or<span class="token operator">==</span><span class="token number">480</span> <span class="token keyword">and</span> width_or<span class="token operator">==</span><span class="token number">640</span><span class="token punctuation">:</span>
    frame<span class="token operator">=</span>ccc<span class="token punctuation">.</span>get_undistorted_image<span class="token punctuation">(</span>frame<span class="token punctuation">,</span>ccc<span class="token punctuation">.</span>CLEVER_FISHEYE_CAM_640<span class="token punctuation">)</span>
<span class="token keyword">else</span><span class="token punctuation">:</span>
    frame<span class="token operator">=</span>ccc<span class="token punctuation">.</span>get_undistorted_image<span class="token punctuation">(</span>frame<span class="token punctuation">,</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">&quot;Input your path to the .yaml file: &quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
height_unz<span class="token punctuation">,</span> width_unz<span class="token punctuation">,</span> depth_unz <span class="token operator">=</span> frame<span class="token punctuation">.</span>shape
</code></pre></div><p><em><strong>\u0412 \u0434\u0430\u043D\u043D\u043E\u043C \u0441\u043B\u0443\u0447\u0430\u0435 \u043C\u044B \u043F\u0435\u0440\u0435\u0434\u0430\u0435\u043C \u0430\u0440\u0433\u0443\u043C\u0435\u043D\u0442 \u0441\u0441\u0441.CLEVER_FISHEYE_CAM_640, \u0442.\u043A. \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u0438\u0435 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u044F \u0432 \u043F\u0440\u0438\u0432\u0435\u0434\u0435\u043D\u043D\u043E\u043C \u043F\u0440\u0438\u043C\u0435\u0440\u0435 \u0441\u043E\u0441\u0442\u0430\u0432\u043B\u044F\u0435\u0442 640x480, \u0442\u0430\u043A\u0436\u0435 \u043C\u043E\u0436\u043D\u043E \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u044C \u0441\u0441\u0441.CLEVER_FISHEYE_CAM_320 \u0434\u043B\u044F \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043D\u0438\u044F 320x240, \u0432 \u043F\u0440\u043E\u0442\u0438\u0432\u043D\u043E\u043C \u0441\u043B\u0443\u0447\u0430\u0435 \u043D\u0435\u043E\u0431\u0445\u043E\u0434\u0438\u043C\u043E \u0432 \u043A\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0432\u0442\u043E\u0440\u043E\u0433\u043E \u0430\u0440\u0433\u0443\u043C\u0435\u043D\u0442\u0430 \u043F\u0435\u0440\u0435\u0434\u0430\u0442\u044C \u043F\u0443\u0442\u044C \u0434\u043E \u043A\u0430\u043B\u0438\u0431\u0440\u043E\u0432\u043E\u0447\u043D\u043E\u0433\u043E .yaml \u0444\u0430\u0439\u043B\u0430.</strong></em></p><p>\u0418, \u043D\u0430\u043A\u043E\u043D\u0435\u0446, \u0432\u043E\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u043C \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435 \u043A \u0438\u0437\u043D\u0430\u0447\u0430\u043B\u044C\u043D\u043E\u043C\u0443 \u0440\u0430\u0437\u043C\u0435\u0440\u0443:</p><div class="language-python ext-py"><pre class="language-python"><code>frame<span class="token operator">=</span>cv2<span class="token punctuation">.</span>resize<span class="token punctuation">(</span>frame<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span> fx<span class="token operator">=</span><span class="token punctuation">(</span>width_or<span class="token operator">/</span>width_unz<span class="token punctuation">)</span><span class="token punctuation">,</span>fy<span class="token operator">=</span><span class="token punctuation">(</span>height_or<span class="token operator">/</span>height_unz<span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre></div><p>\u0411\u043B\u0430\u0433\u043E\u0434\u0430\u0440\u044F \u044D\u0442\u043E\u043C\u0443 \u043C\u043E\u0436\u043D\u043E \u0437\u043D\u0430\u0447\u0438\u0442\u0435\u043B\u044C\u043D\u043E \u043F\u043E\u0432\u044B\u0441\u0438\u0442\u044C \u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C \u0440\u0430\u0441\u043F\u043E\u0437\u043D\u0430\u0432\u0430\u043D\u0438\u044F, \u0442.\u043A. \u043E\u0431\u0440\u0430\u0431\u0430\u0442\u044B\u0432\u0430\u0435\u043C\u043E\u0435 \u0438\u0437\u043E\u0431\u0440\u0430\u0436\u0435\u043D\u0438\u0435 \u0431\u0443\u0434\u0435\u0442 \u0443\u0436\u0435 \u043D\u0435 \u0442\u0430\u043A \u0441\u0438\u043B\u044C\u043D\u043E \u0438\u0441\u043A\u0430\u0436\u0435\u043D\u043E.</p><img src="`+h+'" width="50%"><img src="'+_+'" width="50%">',13);function M(N,R){const s=e("ExternalLinkIcon");return c(),i(r,null,[f,a("p",null,[y,a("a",b,[v,t(s)]),w]),x,a("p",null,[E,a("a",I,[q,t(s)])]),C,a("p",null,[V,a("a",z,[A,t(s)]),F,a("a",P,[L,t(s)]),H]),S],64)}var j=o(m,[["render",M],["__file","face_recognition.html.vue"]]);export{j as default};
