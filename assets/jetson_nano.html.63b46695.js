import{_ as n,r,o as i,c,a as e,b as t,F as l,d as s,e as a}from"./app.4f6a4bec.js";import{_ as d,a as p}from"./01-network-config.762c33ef.js";const h={},u=e("h1",{id:"clover-and-jetson-nano",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#clover-and-jetson-nano","aria-hidden":"true"},"#"),s(" Clover and Jetson Nano")],-1),_=e("h2",{id:"jetson-nano-overview",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#jetson-nano-overview","aria-hidden":"true"},"#"),s(" Jetson Nano overview")],-1),m={href:"https://developer.nvidia.com/embedded/jetson-nano-developer-kit",target:"_blank",rel:"noopener noreferrer"},g=s("Jetson Nano"),b=s(" is a system-on-a-module by Nvidia. It is built on a Tegra X1 platform. With four ARM Cortex-A57 cores clocked at 1.4 GHz, 4 GB of RAM and a relatively powerful GPU, it is more capable than a Raspberry Pi 3 series of single-board computers."),v=a('<img src="'+d+'" class="zoom"><p>Jetson Nano developer kits come with a carrier board that has USB 3.0, CSI and Ethernet ports, as well as a row of GPIO pins. The carrier board is only slightly larger than a Raspberry Pi computer, making it a viable option for an onboard computer.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>The default carrier board does not have a Wi-Fi chip installed. You can use a USB Wi-Fi adapter or install a Wi-Fi card in the M.2 slot on the carrier board. Be sure to check your adapter for compatibility with the Jetson Nano!</p></div><h2 id="setting-up" tabindex="-1"><a class="header-anchor" href="#setting-up" aria-hidden="true">#</a> Setting up</h2><p>Nvidia provides an SD card image with an operating system based on Ubuntu Linux 18.04 for Jetson Nano. This image is a good starting point for ROS and Clover installation.</p><h3 id="initial-system-setup" tabindex="-1"><a class="header-anchor" href="#initial-system-setup" aria-hidden="true">#</a> Initial system setup</h3>',6),f={class:"custom-container tip"},k=e("p",{class:"custom-container-title"},"TIP",-1),y=s("Be sure to check the "),w={href:"https://developer.nvidia.com/embedded/learn/get-started-jetson-nano-devkit",target:"_blank",rel:"noopener noreferrer"},x=s("official Getting Started instructions"),C=s(" for the Jetson Nano developer kit!"),I=s("For the initial setup you'll need an HDMI or DisplayPort monitor, a keyboard and a mouse. Download the "),S={href:"https://developer.nvidia.com/jetson-nano-sd-card-image-r3231",target:"_blank",rel:"noopener noreferrer"},N=s("Jetson Nano developer kit image"),P=s(" and flash it on a microSD card (a 32+ GB card is strongly recommended). Plug the card into the Jetson Nano module, connect your monitor, keyboard, and mouse to the carrier board, and power up the Jetson Nano."),J=a('<div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Jetson Nano can be powered by a microUSB cable, but we strongly suggest using a good power supply and a barrel jack connector. You&#39;ll need to put a jumper on the J48 pins (they are right next to the CSI connector on the carrier board).</p></div><p>Accept the Nvidia EULA and follow the installer prompts. The system will reboot after installation. Login with your username and password.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>We strongly recommend to choose the English system language/locale for Jetson Nano to avoid ROS compatibility issues!</p></div><p>If you&#39;ve installed a Wi-Fi adapter, you may want to configure your Jetson Nano to connect to your Wi-Fi network automatically. Once the system is installed and booted up, click on the &quot;wireless network&quot; icon in the top bar, choose &quot;Edit Connections...&quot; in the drop-down menu, select your network name from the list and click on the gear icon at the bottom of the window.</p><img src="'+p+'" class="zoom"><p>Go to the &quot;General&quot; tab in the newly-opened window and check the &quot;All users may connect to this network&quot; checkbox. Press the &quot;Save&quot; button to close the window.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>You may want to make sure you&#39;re able to access your Jetson Nano over the network. The image already has SSH enabled, and it&#39;s more convenient to perform next steps using the remote shell.</p></div><h3 id="installing-ros" tabindex="-1"><a class="header-anchor" href="#installing-ros" aria-hidden="true">#</a> Installing ROS</h3>',8),T={class:"custom-container tip"},E=e("p",{class:"custom-container-title"},"TIP",-1),B=s("Ubuntu 18.04 is officially supported as a base system for ROS Melodic. Be sure to "),O={href:"http://wiki.ros.org/melodic/Installation/Ubuntu",target:"_blank",rel:"noopener noreferrer"},q=s("check the official installation instructions"),R=s("!"),j=a(`<p>Add OSRF keys and repositories to your system:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> apt-key adv --keyserver <span class="token string">&#39;hkp://keyserver.ubuntu.com:80&#39;</span> --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
<span class="token function">sudo</span> <span class="token function">sh</span> -c <span class="token string">&#39;echo &quot;deb http://packages.ros.org/ros/ubuntu $(lsb_release -sc) main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#39;</span>
<span class="token function">sudo</span> <span class="token function">apt</span> update
</code></pre></div><p>Install base ROS packages:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> ros-melodic-ros-base
</code></pre></div><p>Enable your ROS environment and update your <code>rosdep</code> cache:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token builtin class-name">source</span> /opt/ros/melodic/setup.bash
<span class="token function">sudo</span> rosdep init
rosdep update
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>You may wish to put the <code>source /opt/ros/melodic/setup.bash</code> line at the end of your user&#39;s <code>.profile</code> file.</p></div><p>Install pip for Python 2 (while this is not technically a part of ROS, some dependencies are only installable using pip):</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> <span class="token function">curl</span>
<span class="token function">curl</span> https://bootstrap.pypa.io/get-pip.py -o get-pip.py
<span class="token function">sudo</span> python ./get-pip.py
</code></pre></div><h3 id="building-clover-nodes" tabindex="-1"><a class="header-anchor" href="#building-clover-nodes" aria-hidden="true">#</a> Building Clover nodes</h3><p>Create a &quot;workspace&quot; directory in your home folder and populate it with Clover packages:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">mkdir</span> -p ~/catkin_ws/src
<span class="token builtin class-name">cd</span> ~/catkin_ws/src
<span class="token function">git</span> clone https://github.com/CopterExpress/clover
<span class="token function">git</span> clone https://github.com/CopterExpress/ros_led
<span class="token function">git</span> clone https://github.com/okalachev/vl53l1x_ros
</code></pre></div><p>Install dependencies using <code>rosdep</code>:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ~/catkin_ws
rosdep <span class="token function">install</span> --from-paths src --ignore-src -y
</code></pre></div><p>Install geographiclib datasets (they are required for mavros, but are not packaged with it):</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">curl</span> https://raw.githubusercontent.com/mavlink/mavros/master/mavros/scripts/install_geographiclib_datasets.sh -o install_geographiclib_datasets.sh
<span class="token function">chmod</span> a+x ./install_geographiclib_datasets.sh
<span class="token function">sudo</span> ./install_geographiclib_datasets.sh
</code></pre></div><p>Install development libraries for OpenCV 3.2 (recent Jetson Nano images have OpenCV 4.1.1 preinstalled; using this version will result in build failures):</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> libopencv-dev<span class="token operator">=</span><span class="token number">3.2</span>.0+dfsg-4ubuntu0.1
</code></pre></div><p>Finally, build the Clover nodes:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ~/catkin_ws
catkin_make
</code></pre></div>`,20),F={class:"custom-container tip"},G=e("p",{class:"custom-container-title"},"TIP",-1),A=s("You may also want to add udev rules for PX4 flight controllers. Copy "),D={href:"https://github.com/CopterExpress/clover/blob/master/clover/udev/99-px4fmu.rules",target:"_blank",rel:"noopener noreferrer"},V=s("the rules file"),L=s(" to "),U=e("code",null,"/etc/udev/rules.d",-1),Y=s(" and run "),W=e("code",null,"sudo udevadm control --reload-rules && sudo udevadm trigger",-1),M=s("."),H=a(`<h3 id="running-clover-nodes" tabindex="-1"><a class="header-anchor" href="#running-clover-nodes" aria-hidden="true">#</a> Running Clover nodes</h3><p>Set up the workspace environment:</p><div class="language-bash ext-sh"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> ~/catkin_ws
<span class="token builtin class-name">source</span> devel/setup.bash
</code></pre></div><p>Configure the launch files to your taste and use <code>roslaunch</code> to launch the nodes:</p><div class="language-bash ext-sh"><pre class="language-bash"><code>roslaunch clover clover.launch
</code></pre></div>`,5),z={class:"custom-container tip"},X=e("p",{class:"custom-container-title"},"TIP",-1),$=s("You may want to start the Clover nodes automatically. This can be done with "),K=e("code",null,"systemd",-1),Q=s(": look at service files for "),Z={href:"https://github.com/CopterExpress/clover/blob/master/builder/assets/roscore.service",target:"_blank",rel:"noopener noreferrer"},ee=e("code",null,"roscore",-1),se=s(" and "),oe={href:"https://github.com/CopterExpress/clover/blob/master/builder/assets/clover.service",target:"_blank",rel:"noopener noreferrer"},te=e("code",null,"clover",-1),ae=s(" that are used in our image and adjust them as necessary."),ne=e("h2",{id:"caveats",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#caveats","aria-hidden":"true"},"#"),s(" Caveats")],-1),re=e("h3",{id:"csi-cameras",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#csi-cameras","aria-hidden":"true"},"#"),s(" CSI cameras")],-1),ie=e("p",null,"Jetson Nano currently does not support older Raspberry Pi v1 cameras (that are based on the Omnivision OV5647 sensor). Raspberry Pi v2 cameras (the ones that use Sony IMX219) are supported, but are not available as Video4Linux devices.",-1),ce=s("Fortunately, these cameras are available using GStreamer. You can try using the "),le={href:"http://wiki.ros.org/gscam",target:"_blank",rel:"noopener noreferrer"},de=e("code",null,"gscam",-1),pe=s(" ROS package or our "),he={href:"https://github.com/sfalexrog/jetson_camera",target:"_blank",rel:"noopener noreferrer"},ue=e("code",null,"jetson_camera",-1),_e=s(" node. The latter requires you to build OpenCV 3.4 from source with GStreamer support."),me=s("The GStreamer pipelines are available at "),ge={href:"https://github.com/JetsonHacksNano/CSI-Camera",target:"_blank",rel:"noopener noreferrer"},be=s("JetsonHacksNano CSI camera repository"),ve=s("."),fe=s("You may also notice that the camera image has a red tint that is more pronounced near the edges. This can be fixed by image signal processor tuning. Generally this should be done by your camera manufacturer; "),ke={href:"https://www.arducam.com/docs/camera-for-jetson-nano/fix-red-tint-with-isp-tuning/",target:"_blank",rel:"noopener noreferrer"},ye=s("here is a sample ISP configuration"),we=s(" from Adrucam"),xe=e("h3",{id:"led-strip",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#led-strip","aria-hidden":"true"},"#"),s(" LED strip")],-1),Ce=e("p",null,"Jetson Nano currently does not support LED strips over GPIO.",-1);function Ie(Se,Ne){const o=r("ExternalLinkIcon");return i(),c(l,null,[u,_,e("p",null,[e("a",m,[g,t(o)]),b]),v,e("div",f,[k,e("p",null,[y,e("a",w,[x,t(o)]),C])]),e("p",null,[I,e("a",S,[N,t(o)]),P]),J,e("div",T,[E,e("p",null,[B,e("a",O,[q,t(o)]),R])]),j,e("div",F,[G,e("p",null,[A,e("a",D,[V,t(o)]),L,U,Y,W,M])]),H,e("div",z,[X,e("p",null,[$,K,Q,e("a",Z,[ee,t(o)]),se,e("a",oe,[te,t(o)]),ae])]),ne,re,ie,e("p",null,[ce,e("a",le,[de,t(o)]),pe,e("a",he,[ue,t(o)]),_e]),e("p",null,[me,e("a",ge,[be,t(o)]),ve]),e("p",null,[fe,e("a",ke,[ye,t(o)]),we]),xe,Ce],64)}var Te=n(h,[["render",Ie],["__file","jetson_nano.html.vue"]]);export{Te as default};
